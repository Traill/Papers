{"id":"1569565311","paper":{"title":{"text":"Linear Network Coding Capacity Region of 2-Receiver MIMO Broadcast Packet Erasure"},"authors":[{"name":"Channels with Feedback"}],"abstr":{"text":"Abstract\u2014This work studies the capacity of the 2-receiver multiple-input/multiple-output (MIMO) broadcast packet era- sure channels (PECs) with channel output feedback, which is in contrast with the single-input/single-output setting of the existing works. Motivated by the immense success of linear network coding (LNC) in theory and in practice, this work focuses exclusively on LNC schemes and characterizes the LNC feedback capacity region (R ∗ 1 , R ∗ 2 ) of 2-receiver MIMO broadcast PECs. A new linear-space-based approach is proposed, which uniﬁes the problems of ﬁnding a capacity outer bound and devising the achievability scheme into a single linear programming (LP) problem. Speciﬁcally, an LP solver is used to exhaustively search for the LNC scheme(s) with the best possible throughput, the result of which is thus guaranteed to attain the LNC feedback capacity."},"body":{"text":"It is well known that feedback enlarges the capacity region of broadcast channels [2], [8]. Recently the feedback capac- ity region of K-receiver broadcast packet erasure channels (PECs) has been fully characterized for K ≤ 3 and for the special case of perfectly-fair capacity with spatially indepen- dent erasure events [4], [9]. Speciﬁcally, a 1-to-K PEC takes an input symbol (also known as a packet) W from some sufﬁciently large ﬁnite ﬁeld GF(q) and each destination d k (out of K destinations) receives either the input packet Z k = W or an erasure Z k = ∗, depending on whether the packet W has successfully arrived at d k . The capacity results in [4], [9] capture closely the network coding capacity for the downlink scenario from a single access point to multiple clients with one antenna and simple modulation schemes [6].\nOn the other hand, such a single-input/single-output (SISO) broadcast PEC model does not take into account several com- monly used modern communication schemes. For example, 2 antennas may be used at both the source s and the destinations d k , which corresponds to a multiple-input/multiple-output (MIMO) PEC [3] that takes (W [1] , W [2] ) ∈ (GF(q)) 2 as input, and each d k may receive one of the four possible outcomes (W [1] , ∗), (∗, W [2] ), (W [1] , W [2] ), and (∗, ∗) depending on whether the packet W [m] sent by antenna m, m = 1, 2, is decodable or not. Even when only a single antenna is used, source s may use Orthogonal Frequency Division Multiple Access (OFDMA), which, in each time slot, can send out multiple streams of packets over different sub-carriers. Each sub-carrier may experience different erasure events. Each d k constantly scans all subcarriers and records any overheard packets. The multiple sub-carriers in OFDMA can again be modelled as a MIMO broadcast PEC.\nThis works considers the MIMO broadcast PEC with 2 receivers and channel output feedback. Motivated by the immense success of linear network coding (LNC) [7], this work focuses exclusively on LNC schemes and characterizes the full LNC feedback capacity region (R ∗ 1 , R ∗ 2 ). A new framework is proposed that uniﬁes the problems of ﬁnd- ing a capacity outer bound and designing the corresponding bound-achieving solution into a single linear-programming (LP) problem. Speciﬁcally we use an LP solver to search exhaustively over all possible LNC design choices and ﬁnd the LNC solution that achieves the highest throughput. The exhaustiveness guarantees that the resulting LNC scheme is throughput optimal (among all LNC solutions) and thus achieves the LNC capacity.\nRemark: Such a constructive optimality proof has been widely used in the networking community but not in the information theory community. For example, in the networking society, the optimal multi-path routing scheme is found by simply searching over all possible routing decisions that obey the ﬂow-conservation law, which is in contrast with the information-theoretic approach that ﬁrst ﬁnds a cut and an achievability scheme and later proves that they meet. This exhaustive-search-based approach was previously not possible since there are too many LNC design choices. With a new framework that leverages upon the underlying linear space structure of LNC, we can greatly reduce the number of design choices and are thus able to design provably optimal LNC schemes without the need of ﬁnding any cut condition!\nThe M -input 2-receiver MIMO broadcast PEC is deﬁned as follows. For any time slot, source s sends M symbols W Δ = (W [1] , W [2] , · · · , W [M] ) ∈ (GF(q)) M and each d i receives a random subset rx i ⊂ {1, 2, · · · , M} of the W [·] symbols for i = 1, 2. The MIMO broadcast PEC can be described by the joint reception probability p rx 1 ,rx 2 such that ∀rx 1 ,rx 2 p rx 1 ,rx 2 = 1. For example, when M = 3, p {1,2},{2,3} is the probability that d 1 receives Z 1 Δ = (W [1] , W [2] , ∗) and d 2 receives Z 2 Δ = (∗, W [2] , W [3] ). We consider only stationary and memoryless channels, i.e., {p rx 1 ,rx 2 } does not change with respect to time and the reception events for any distinct time slots t 1 , t 2 , · · · are independent. The above setting is a strict generalization of the (M, 2) erasure broadcast channel in [3], which requires the independence across different receivers and across all M sub-channels.\nWe use p [m] a 1 a 2 to denote the (marginal) reception probabil- ities for the m-th symbol W [m] where each bit a i indicates whether d i receives W [m] or not for i = 1, 2. For example,\nConsider the following communication problem. For any rate vector (R 1 , R 2 ), within n time slots source s would like to send two independent packet streams X i Δ = (X i,1 , X i,2 , · · · , X i,nR i ) ∈ (GF(q)) nR i to destination d i for i = 1, 2. At the end of each time slot, each d i reports back to s which subset of symbols it has received (the rx i value) through the use of ACK or NACK. This channel output feedback setting was not considered in the existing work [3].\nIf we use the input argument \u201c (t)\u201d, t = 1, 2, · · · , n, to distinguish the n channel usages, a network code can be described by n encoding functions: for all t = 1, · · · , n,\nwhere [Z i ] n 1 denotes what d i has received from time 1 to n, and [rx 1 , rx 2 ] t−1 1 denotes the channel output information from time 1 to (t − 1). In (2) we assume that each d i knows 1 how the coded symbols are generated (the functions f t (·, ·, [rx 1 , rx 2 ] t−1 1 )) but does not know the actual information symbols X 1 and X 2 used to generate W(t).\nA network code is linear if the encoders f t are linear with respect to X 1 and X 2 , i.e., (1) can be written as\nwhere C t is an (nR 1 + nR 2 ) × M matrix in GF(q) and X Δ = (X 1 , X 2 ) is an n(R 1 + R 2 )-dimensional row vector consisting of all information symbols. The choice of C t depends on [rx 1 , rx 2 ] t−1 1 . In practice [1], the coding coefﬁcients C t are often embedded in the header of the packets so that a decoder of the form of (2) can be used.\nDeﬁnition 1: A rate vector (R 1 , R 2 ) is achievable by LNC if for any > 0 there exists a linear network code of length n and ﬁnite ﬁeld GF(q) such that Prob( ˆ X i = X i ) < for all i = 1, 2. The LNC capacity region is deﬁned as the closure of all (R 1 , R 2 ) that are achievable by LNC.\nA simple inner bound on the above capacity problem is to perform LNC over the M different SISO broadcast PECs (one for each of the M inputs) separately. We thus have\nLemma 1: A rate vector (R 1 , R 2 ) is achievable by LNC if there exist 2M non-negative variables R [m] 1 and R [m] 2 , for all m = 1, · · · , M, such that the following conditions are satisﬁed.\n⎧ ⎪ ⎨ ⎪ ⎩\nProof: Eq. (4) follows from summing up the per-input LNC rates and (5) follows from the feedback capacity region results for 1-input 2-receiver broadcast PECs [5].\nIf we restrict ourselves to consider only (M, 2) erasure channels in [3], for which all sub-channels are independent, then we can follow the capacity outer bound construction in [8] and use the zero-feedback capacity results in [3] to construct the following capacity outer bound.\nLemma 2: Consider (M, 2) erasure channels. Even when we allow the use of non-linear codes (see (1)), a rate vector (R 1 , R 2 ) is achievable only if there exist 4M non-negative variables R [m,k] i \t for all i, k ∈ {1, 2} and m ∈ {1, · · · , M} such that the following conditions are satisﬁed.\n⎧ ⎪ ⎨ ⎪ ⎩\nFor some special choices of the parameters p [m] a 1 a 2 , either (i) the inner and outer bounds do meet; or (ii) we can design simple LNC solutions that follow the ideas of [5] and attain the outer bound. The capacity region is thus determined for those values of p [m] a 1 a 2 . However, the capacity characterization problem remains open for general p [m] a 1 a 2 . Take the following 2- input, 2-receiver MIMO broadcast PEC for example. Suppose the joint reception probability {p rx 1 ,rx 2 } satisﬁes\nIn this work, we will characterize the LNC capacity region for any general 2 M -input MIMO broadcast PECs without relying on the (existing) outer bound arguments in Lemma 2.\nConsider a ﬁnite index set FTs of 18 elements: FTs Δ =\nIt will be clear in Section V why we consider such an index set. The main results of this work can now be stated as follows.\nProposition 1: A rate vector (R 1 , R 2 ) is in the LNC ca- pacity region of a M -input 2-receiver MIMO broadcast PEC if and only if there exist 18M non-negative variables x [m] b\nfor all b ∈ FTs and m = 1, · · · , M, and 7 non-negative variables y 1 to y 7 such that jointly they satisfy 4 groups of linear conditions:\n\u2022 Group 1, termed the time-sharing conditions, has M equal- ities:\n\u2022 Group 2, termed the rank-conversion conditions, has 7 equalities:\n⎛ ⎜ ⎜ ⎜ ⎝\n⎞ ⎟ ⎟\n⎛ ⎜ ⎜ ⎜ ⎝\n⎞ ⎟ ⎟\n⎛ ⎜ ⎜ ⎜ ⎝\n⎞ ⎟ ⎟\n⎛ ⎜ ⎜ ⎜ ⎝\n⎞ ⎟ ⎟\n⎛ ⎜ ⎜ ⎜ ⎝\n⎞ ⎟ ⎟\n(14) \u2022 Group 3, termed the rank-comparison conditions, has 8 inequalities:\ny 3 ≤ y 6 , y 4 ≤ y 7 \t (15) y 6 ≤ (R 1 + R 2 ), y 7 ≤ (R 1 + R 2 ) \t (16)\ny 1 + y 2 − y 5 ≥ 0 \t (17) y 5 + y 3 − y 6 ≥ y 1 \t (18) y 5 + y 4 − y 7 ≥ y 2 \t (19) y 6 + y 7 − (R 1 + R 1 ) ≥ y 5 . \t (20)\n\u2022 Group 4, termed the decodability conditions, has 2 equalities: y 3 = y 1 and y 4 = y 2 . \t (21)\nCorollary 1: The capacity region of an M -input 2-receiver MIMO broadcast PEC depends only on the per-input marginal probabilities p [m] a 1 a 2 . Whether the reception events of two inputs m 1 and m 2 are independent or not does not affect the capacity.\nWe ﬁrst provide detailed sketches of the proof of Proposi- tion 1 for the case of M = 1. That is, for each time slot, s sends a symbol W (t) = X · c T t where c t is an n (R 1 + R 2 )- dimensional (row) coding vector and c T t is the transpose of c t . We will comment on how to generalize the proof for arbitrary M values in Section VI.\nFor each d i , we deﬁne the knowledge space S i (t) in the end of time t by\nThat is, S i (t) is the linear span of the vectors of those packets that have successfully arrived at d i . One can easily see that in the end of time t, d i is able to compute the value of X · v T for all v ∈ S i (t) by linearly combining Z i (τ) for all τ ≤ t.\nFor j = 1 to n(R 1 + R 2 ), let δ j denote an n (R 1 + R 2 )- dimensional elementary delta (row) vector with its j-th co- ordinate being one and all the other coordinates being zero. Deﬁne Ω Δ = span{δ j : j = 1, · · · , n(R 1 + R 2 )} as the overall message space and deﬁne Ω 1 Δ = span{δ j : j = 1, · · · , nR 1 } and Ω 2 Δ = span{δ j : j = (nR 1 + 1), · · · , n(R 1 + R 2 )} as the individual message spaces for d 1 and d 2 , respectively. Both S i (t) and Ω i are linear subspaces of Ω for i = 1, 2.\nFor any two linear subspaces A, B ⊆ Ω, deﬁne A ⊕ B Δ = span{v : ∀v ∈ A ∪ B} as the linear sum space of A and\nB. From the discussion in the beginning of this subsection, d i can decode the desired X i,1 , · · · , X i,nR i symbols if and only if in the end of time n we have Ω i ⊆ S i (n), or equivalently\nIn the beginning of time t, there are q n(R 1 +R 2 ) different ways of designing the coding vector c t ∈ Ω. To simplify the design choices, we consider the following 7 linear subspaces:\nA 1 Δ = S 1 ; \t A 2 Δ = S 2 ; \t (24) A 3 Δ = S 1 ⊕ Ω 1 ; A 4 Δ = S 2 ⊕ Ω 2 ; A 5 Δ = S 1 ⊕ S 2 ; (25) A 6 Δ = S 1 ⊕ S 2 ⊕ Ω 1 ; \t A 7 Δ = S 1 ⊕ S 2 ⊕ Ω 2 , \t (26)\nfor which we use S 1 and S 2 as shorthand for S 1 (t − 1) and S 2 (t − 1), the knowledge spaces in the end of time t − 1. In the subsequent discussion, we often drop the input argument \u201c (t)\u201d when the time instant of interest is clear in the context.\nWe can now partition the overall message space Ω into 2 7 = 128 disjoint subsets depending on whether c t is in A k or not, for k = 1, · · · , 7. Each subset is termed a coding type and can be indexed by a 7-bit string b = b 1 b 2 · · · b 7 where each b k indicates whether c t ∈ A k or not. For example, type-0010111 contains the coding vectors that are in A 3 ∩ A 5 ∩ A 6 ∩ A 7 , but not in any of A 1 , A 2 , and A 4 , which is denoted by\nΔ = (A 3 ∩ A 5 ∩ A 6 ∩ A 7 )\\(A 1 ∪ A 2 ∪ A 4 ) \t (27) = (A 3 ∩ A 5 )\\(A 1 ∪ A 4 ). \t (28)\nEq. (28) follows from the fact that by (24) to (26) we have A 5 ⊂ (A 6 ∩A 7 ) and A 2 ⊂ A 4 . We can also view b as a base- 2 expression with b 1 (resp. b 7 ) being the most (resp. least) signiﬁcant bit 3 , e.g., type-0010111 is type-23. Note that some of the 128 coding types are always empty, which are termed the infeasible types. For example, type-1000000 is infeasible since there cannot be any v ∈ Ω that is in A 1 = S 1 but not in A 3 = S 1 ⊕ Ω 1 ⊃ A 1 . Overall, there are only 18 Feasible Types (FTs) and the list of them is the FTs deﬁned in (6).\nThis new framework allows us to focus on the \u201ctypes\u201d of the coding choices without worrying about designing the exact values of c t ∈ Ω. Speciﬁcally, we will focus on the following design problem: From which one of the 18 FTs should we choose c t in order to maximize the throughput? We will also analyze the performance of any given scheme by quantifying how frequently a coding vector c t of type- b is sent.\nFix any given linear network code such that d i can decode all X i,1 to X i,nR i in the end of time n for all i = 1, 2. Since the 18 disjoint FTs fully cover 4 Ω, for each time t we can always label the coding choice c t of the given LNC scheme as one of the 18 FTs. Deﬁne x [1] b Δ = 1 n E n t=1 1 {c t ∈TYPE b }\nas the normalized expected number of c t of type b. Since the total number of time slots is n, this time-sharing argument proves that (7) holds for the case of M = 1.\nConsider the linear spaces A k , k = 1 to 7, in the beginning of time 1 and in the end of time n, and denote them by A k (0) and A k (n), respectively. Consider A 6 = S 1 ⊕ S 2 ⊕ Ω 1 for example. By (22) we have Rank(A 6 (0)) = Rank(Ω 1 ) = nR 1 . We then note that when source s sends a c t ∈ TYPE b for some b with b 6 being 0, then that c t is not in A 6 = S 1 ⊕ S 2 ⊕ Ω 1 . Therefore, whenever one of d 1 and d 2 receives W (t) = X·c T t\nsuccessfully, the rank of A 6 will increase by one. We thus have Rank(A 6 (0)) +\nDeﬁne y k Δ = 1 n E {Rank(A k (n))} as the normalized rank of A k (n). Taking the normalized expectation of (29), counting only the FTs, and by Wald\u2019s lemma, we have proven that (13) must hold for M = 1. By similar rank-conversion arguments, we can also prove (8) to (14) for M = 1.\nFor the following, we will derive the rank comparison inequalities in Group 3. By (24) to (26), in the end of time n we must have\nConsidering the normalized expected ranks of the above inequalities in the end of time n, we have proven (15) and (16). Before continuing, we present the following lemma.\nLemma 3: For any two linear spaces B 1 and B 2 , we have Rank(B 1 ⊕B 2 )+Rank(B 1 ∩B 2 ) = Rank(B 1 )+Rank(B 2 ).\nwhere (31) follows from Lemma 3, and (32) follows from simple set operations. By taking the normalized expectation on (32) in the end of time n, we have proven (18). Similarly, we can derive the following inequalities:\nRank(S 1 ) + Rank(S 2 ) − Rank(S 1 ⊕ S 2 ) ≥ 0 (33) Rank(S 1 ⊕ S 2 ) + Rank(S 2 ⊕ Ω 2 )\n− Rank(S 1 ⊕ S 2 ⊕ Ω 2 ) ≥ Rank(S 2 ) \t (34) Rank(S 1 ⊕ S 2 ⊕ Ω 1 ) + Rank(S 1 ⊕ S 2 ⊕ Ω 2 )\nFinally, since we focus on an LNC scheme that each d i can decode its desired information symbols, we can prove (21) by the decodability condition (23) and by (24)\u2013(26).\nA critical difference between Lemma 2 and the outer bounding part in Proposition 1 is that the latter is a constructive approach while the former is implicitly a cut condition. As will\nbe demonstrated, the optimizing {x ∗ b : ∀b ∈ FTs} and y ∗ 1 to y ∗ 7 in Proposition 1 can be directly translated to a capacity- achieving scheme, while it is not clear how the optimizing R [m,k] i \t in Lemma 2 would guide the LNC design.\nMore explicitly, a capacity achieving LNC solution can now be designed as follows. In the beginning of time t, source s ﬁrst uses the previous reception status [rx 1 , rx 2 ] t−1 1\nto determine the subspaces A 1 to A 7 . Then s simply needs to choose the c t from one of the 18 FTs. As long as we can make the long-term relative frequency of sending c t of type- b equal x ∗ b for all b ∈ FTs, then the aforementioned (outer bound) analysis guarantees that the resulting LNC scheme is throughput optimal.\nA detailed sketch of the proof is as follows. For any (R 1 , R 2 ) in the interior of the capacity, let {x R b } (and the companying y R 1 to y R 7 ) denote the variables that satisfy the conditions in Proposition 1 and we can, without loss of gener- ality, assume that when plugging in {x R b }, the rank comparison inequalities in (15)\u2013(20) are strict inequality, or equivalently, the set/rank inequalities (30)\u2013(35) are strict inequalities. The central question that decides whether we can attain the target frequency {x R b } is: Suppose we are able to achieve the target relative frequency {x R b } up to time (t−1) (which leads to strict inequalities (15)\u2013(20) at time t − 1). Can we freely choose (from the 18 FTs) which coding type to use for time t? If the answer is yes, then we can attain the target frequency x R b and maintain strict inequalities (15)\u2013(20) iteratively throughout the entire n time slots.\nTo answer this question, consider type-23, as deﬁned in (28). For s to be able to choose a c t from TYPE 23 , we must have TYPE 23 = ∅. Note that whether TYPE 23 = ∅ holds can be decided by comparing the sizes of (A 3 ∩A 5 ) and ((A 3 ∩A 5 )∩ (A 1 ∪ A 4 )). Also note that |A 3 ∩ A 5 | = q Rank(A 3 ∩A 5 ) and\nAssuming q ≥ 3, we thus have TYPE 23 = ∅ if and only if Rank(A 3 ∩ A 5 )\n= Rank(S 1 ⊕ S 2 ⊕ Ω 2 ) − Rank(S 2 ⊕ Ω 2 ) = Rank(A 7 ) − Rank(A 4 ).\nThe above analysis shows that when both A 4 ⊂ A 7 and (32) are strict inequalities, TYPE 23 = ∅ and choosing a c t from TYPE 23 is possible. By similar arguments, it can be proven that (i) Each FT is associated with a subset of inequalities of (30)\u2013(35); and (ii) A FT is non-empty if and only if the inequalities in the corresponding subset are all\nstrict. Therefore, when all 8 inequalities in (30)\u2013(35) are strict, all 18 FTs are non-empty. Source s can thus freely select any FT with the goal of maintaining the target relative frequency {x R b }. The central question is thus answered afﬁrmatively.\nTo generalize the proof for arbitrary M , we simply need to consider 18 M different joint coding types since each coding vector c [m] t for the m-th input may belong to one of the 18 FTs. We can then follow similar analysis as in Section V. The ﬁnal step is to notice from the resulting LP conditions that the dependence between any two input sub-channels has no effect on the overall capacity. This observation allows us to rewrite the conditions with the marginal coding types and reduce the number of x variables from 18 M to 18M as in Proposition 1. The proof for general M is thus complete.\nWe have used an LP solver to compute the LNC capacity region for various parameter values p [m] a 1 a 2 and in all our ex- periments the LNC capacity coincides with the outer bound in Lemma 2. We are currently proving the following conjecture.\nConjecture 1: The capacity outer bound in Lemma 2 holds even when the sub-channels are dependent, and it coincides with the LNC capacity for arbitrary M values.\nNote that Proposition 1 has established the best LNC throughput. Even if Conjecture 1 is not true, any (R 1 , R 2 ) outside the rate region of Proposition 1 can only be achieved by non-linear codes, which are less favorable in practice.\nThis work has characterized the full LNC capacity of the 2- receiver MIMO broadcast PECs with channel output feedback. One future direction is to generalize the results for an arbitrary number of receivers. This work was supported in parts by NSF grants CCF-0845968 and CNS-0905331."},"refs":[{"authors":[{"name":"P. Chou"},{"name":"Y. Wu"},{"name":"K. Jain"}],"title":{"text":"Practical network coding"}},{"authors":[{"name":"T. M. Cover"}],"title":{"text":"Comments on broadcast channels"}},{"authors":[{"name":"A. Dana"},{"name":"B. Hassibi"}],"title":{"text":"The capacity region of multiple input erasure broadcast channels"}},{"authors":[{"name":"M. Gatzianas"},{"name":"L. Georgiadis"},{"name":"L. Tassiulas"}],"title":{"text":"Multiuser broadcast erasure channel with feedback \u2014 capacity and algorithms"}},{"authors":[{"name":"L. Georgiadis"},{"name":"L. Tassiulas"}],"title":{"text":"Broadcast erasure channel with feedback \u2014 capacity and algorithms"}},{"authors":[{"name":"D. Koutsonikolas"},{"name":"C.-C. Wang"},{"name":"Y. Hu"},{"name":"N. Shroff"}],"title":{"text":"FEC-based AP downlink transmission schemes for multiple ﬂows: Combining the reliability and throughput enhancement of intra- and inter-ﬂow coding"}},{"authors":[{"name":"S.-Y. Li"},{"name":"R. Yeung"},{"name":"N. Cai"}],"title":{"text":"Linear network coding"}},{"authors":[{"name":"L. Ozarow"},{"name":"S. Leung-Yan-Cheong"}],"title":{"text":"An achievable region and outer bound for the Gaussian broadcast channel with feedback"}},{"authors":[{"name":"C.-C. Wang"}],"title":{"text":"Capacity of 1-to- K broadcast packet erasure channels with channel output feedback"}}]},"file":{"jsonClass":"File","file":"/home/arnfred/Code/trailhead/resources/isit2012/1569565311.pdf"},"links":[],"meta":{"jsonClass":"HashMap$HashTrieMap","sessionid":"S12.T1.3","endtime":"12:30","authors":"Chih-Chun Wang, David Love","date":"1341490200000","papertitle":"Linear Network Coding Capacity Region of 2-Receiver MIMO Broadcast Packet Erasure Channels with Feedback","starttime":"12:10","session":"S12.T1: Network Coding for Wireless","room":"Kresge Rehearsal B (030)","paperid":"1569565311"},"cluster":{"jsonClass":"Map$EmptyMap$"}}
