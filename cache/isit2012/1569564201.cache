{"id":"1569564201","paper":{"title":{"text":"Rotating-table game and construction of periodic sequences with lightweight calculation"},"authors":[{"name":"Min Zeng"},{"name":"Yuan Luo"},{"name":"Guang Gong"}],"abstr":{"text":"Abstract\u2014 A well-known operator of vectors over ﬁnite ﬁeld is the derivative, which is used to investigate the complexity of vectors in game theory, communication theory and cryptogra- phy. According to the operator, a corresponding complexity of the vector is called (the ﬁrst) depth, which also contributes to two other deﬁnitions (the second and the third depths) by using polynomial factor and high order difference, respectively. For an n-dimensional vector over F q (a ﬁnite ﬁeld with q elements and characteristic p), the three depths are the same as its linear complexity if n = p r (r ≥ 0).\nIn this paper, by investigation on vectors s of length n (or equivalent sequences of period n) with inﬁnite third depth, and the cyclic-left-shift-difference operator E-1 on s, long least ultimate period sequences {(E−1) i ( s) } i ≥0 are constructed with high probability over big alphabet using lightweight calculation. Furthermore, distributions of sequences s with period n = p r −1 (r > 0), are described in terms of the least ultimate periods of {(E − 1) i ( s) } i ≥0 .\nIn addition, we depict circulant matrix structure of the operator (E − 1) i for 0 < i < n and determine its rank. Some upper bounds on the ultimate period of {(E − 1) i ( s) } i ≥0 and a method to determine the least ultimate period are provided. The least ultimate period presents an adversary a sufﬁcient condition to win the rotating-table game with rapid counteraction (RGRC)."},"body":{"text":"The linear complexity of sequences is an important mea- sure for stream cipher systems. Various authors investigated the linear complexity by using the linear recurrence relations among terms of sequences (e.g., LFSR) [2]\u2013[4], [6]\u2013[9]. For sequences with ﬁnite lengths (i.e., vectors), Etzion studied a complexity by using differences of adjacent terms of the vectors (e.g., difference sequences [1]), which he called (the ﬁrst) \u2018depth\u2019. He proved that the depth of a binary vector with length 2 r (r > 0) is equal to its linear complexity, and also showed that the depth distribution of the nonzero codewords of an [n, k] linear code consists of exactly k nonzero values [5]. Luo, Fu and Wei studied more counting properties about the depth distributions of linear codes [10]. Meanwhile, Roth studied another complexity (the second depth) of a vector in\nterms of the factors of its generating function [5]. Mitchell extended the ﬁrst depth for sequences with inﬁnite length, which is called the third depth in this research. The third depth of a vector (or a sequence) is either ﬁnite or inﬁnite. He showed that the set of binary sequences with inﬁnite length and ﬁnite third depth, is equal to the set of binary sequences with period 2 r for some r ≥ 0. The corresponding depth distributions of all cyclic codes were also provided by Mitchell [11]. For an n-dimensional vector over F q (a ﬁnite ﬁeld with q elements and characteristic p), the three depths are the same as its linear complexity if n = p r (r ≥ 0) [5], [12].\nIn fact, (the third) depth was introduced by Yehuda, Etzion, and Moran for studying a classic rotating-table game [12], in which two players, A (an adversary) and B, play a game consisting of manipulations of vectors of length n over F q . They showed that the player B can win the game if and only if n and q are powers of the same prime, and provided a general sufﬁcient condition in form of the minimum number of rounds, i.e., the ﬁnite third depth of the initial vector, about the adversary A to lose the classic rotating-table game.\nEvidently, if the third depth is inﬁnite, this game is endless (inﬁnite loop), which implies the victory of the adversary. A new intriguing problem is to ﬁnd the minimum number of rounds to ensure the victory of the adversary. We consider a simpliﬁed strategy called rotating-table game with rapid counteraction (RGRC) . Two players, an adversary and a system manager, seat by a rotating round table with n roulettes of q sides each. Denote the sides of the roulettes by 0, 1, . . . , q −1, which mean the statuses of the roulettes. The game starts after the system manager has selected a side for each roulette on the table (i.e., selecting an n-dimensional vector s). For each round, the adversary is allowed to do once such operation: revolve the table counterclockwise by a unit- angle 360 ◦ /n and then rotate each roulette by an angle to counteract the status of previous roulette at the same location at once (i.e., performing an operator (E − 1)(s) which is a cyclic-left-shift-difference operator on s). The adversary wins the game if he ﬁnds that some nonzero repeated vectors ap- pear (i.e., the ultimate period of a sequence {(E−1) i ( s) } i ≥0 appears).\nMotivated by the game RGRC, this paper focuses on the n-dimensional vector s (or the sequence of period n) with inﬁnite third depth , especially on the case of n = p r − 1 (r > 0). The vector s is further investigated by de- termining the least ultimate period of the corresponding sequence {(E − 1) i ( s) } i ≥0 .\nThe operators of a vector, such as the derivative, the cyclic- left-shift, and the cyclic-left-shift-difference, are used in con- nection with its complexity. Their matrix representations are presented in (2.1), (2.2), and (2.4), respectively. Deﬁnition 4, Deﬁnition 5, and Deﬁnition 6 are of the three kinds of depths.\nDeﬁnition 1: [10] The derivative D: V n (q) → V n −1 (q) is deﬁned as follows:\nD(s 0 , s 1 , . . . , s n −1 ) = (s 1 − s 0 , s 2 − s 1 , . . . , s n −1 − s n −2 ). Thus D(s) = sA n where\n            \n. .. ... . ..\n            \nDeﬁnition 2: [12] The cyclic-left-shift E: V n (q) → V n (q) is deﬁned as follows:\nE(s) = E(s 0 , s 1 , . . . , s n −1 ) = (s 1 , . . . , s n −1 , s 0 ). Thus E(s)=sT where\n        \n.. . 0 .. . .. . . . . 0 0\n        \nNote that E i ( s) = E(E i −1 ( s)) = sT i (i ≥ 1) and E 0 ( s) = s. An immediate consequence of (2.2) is the following for-\nDeﬁnition 3: [12] The cyclic-left-shift-difference E-1: V n (q) → V n (q) is deﬁned as follows:\n( E − 1)(s) = (s 1 − s 0 , s 2 − s 1 , . . . , s 0 − s n −1 ). Thus (E − 1)(s) = sA where\n              \n0 \t 1 −1 . .. 0 \t 0 \t 0 .. . .. . .. . . .. .. . .. . .. .\n              \n(2.4) Note that (E −1) i ( s) = (E −1)((E−1) i −1 ( s)) = sA i (i ≥ 1) and (E − 1) 0 ( s) = s.\nUsing the above operators, Etzion initially presented the ideas of depths in [5] and [12]. To distinguish these concepts over F q , we classify them into three kinds as follows.\nDeﬁnition 4: Let s = (s 0 , s 1 , s 2 , . . . , s n −1 ) ∈ V n (q). If there exists the smallest nonnegative integer m such that D m ( s) = [0 n −m ], the ﬁrst depth of s is deﬁned to be m, which is denoted by l 1 ( s), otherwise the depth is deﬁned to be n. Obviously, l 1 ( s) ≤ n.\nDeﬁnition 5: Let s = (s 0 , s 1 , s 2 , . . . , s n −1 ) ∈ V n (q) and s(x) =\ns i x i . The second depth of s is deﬁned to be the smallest nonnegative integer m such that (x − 1) m s(x) ≡ 0 (mod (x − 1) n ), which is denoted by l 2 ( s). Obviously, l 2 ( s) ≤ n.\nDeﬁnition 6: Let s = (s 0 , s 1 , s 2 , . . . , s n −1 ) ∈ V n (q). If there exists the smallest nonnegative integer m such that (E − 1) m ( s) = [0 n ], the third depth of s is deﬁned to be m, which is denoted by l 3 ( s), otherwise the depth is deﬁned to be inﬁnite.\nExample 1: Let s = (0, β, 1, 0, 0, β, 1) ∈ V 7 (4), where β is a root of f (x) = x 2 + x + 1 over F 4 . Then l 1 ( s) = 4, l 2 ( s) = 3, and l 3 ( s) = ∞\nB. The deﬁnition of Sequence {(E − 1) i ( s) } i ≥0 and the structure of operator (E − 1) i\n( s ⊤ , (( E − 1)(s)) ⊤ , (( E − 1) 2 ( s)) ⊤ , . . . , (( E − 1) i ( s)) ⊤ , . . .), where ((E − 1) i ( s)) ⊤ is the ith term of the sequence S. Sequence S is an ultimately periodic sequence. Its least ultimate period, denoted by P(S), is the least positive integer P such that ∃M, for all i ≥ M,\nRemark 1: With the notation in Deﬁnition 7, for s with inﬁnite third depth and M = 0, if we interpret each term of S as an element in F q n , then we obtain a new sequence with least period P(S) over F q n , which is denoted by S \u2032 .\nWe ﬁrst prove Proposition 1 which will be used in dis- cussing the ultimate periods of sequences in Section IV.\n                \n.. . .. . α\n. . . 0 .. . .. . 0 . . . .. . . . . α\ni,0 \t 0 0\n                \nWe next determine the rank of A i (1 ≤ i ≤ n − 1) which will be used in Section V.\nProposition 2: Let p be the characteristic of F q and L = max {k : p k |n, k ≥ 0} where n is the order of A. Then rank( A i ) = n − i if 1 ≤ i ≤ p L , and rank(A i ) = n − p L if p L < i < n.\nTo investigate the vectors s in V n (q) with inﬁnite third depth, or equivalently periodic sequences (s, s, . . .) in V ∞ (q) with inﬁnite third depth, this section provides a relation among s and its difference vectors (E − 1) i ( s) (i ≥ 1). The relation is of the least ultimate period of Sequence {(E − 1) i ( s) } i ≥0 , which provides the adversary a sufﬁcient condition in form of the minimum number of rounds to win the RGRC.\nRecall Deﬁnition 7, Sequence {(E − 1) i ( s) } i ≥0 has ulti- mate period P if there exist P and M such that (E −1) i ( s) = ( E − 1) i+P ( s) for all i ≥ M. For general n, Proposition 3 gives an upper bound on the ultimate period of Sequence {(E−1) i ( s) } i ≥0 . Theorem 1 provides a method of determin- ing the least ultimate period of Sequence {(E − 1) i ( s) } i ≥0 for any ﬁxed s.\nProposition 3: Let s ∈ V n (q) and p be the characteristic of F q . Then p L \u2032 − p L is an ultimate period of Sequence {(E − 1) i ( s) } i ≥0 , where L = max {k : p k |n, k ≥ 0}, L \u2032 = L + ϕ( n p L ), and ϕ(x) is the Euler phi-function.\nRemark 2: Proposition 3 implies that for a given n there does exist an upper bound (e.g., p L \u2032 − p L ) on the ultimate period of Sequence {(E − 1) i ( s) } i ≥0 for all s ∈ V n (q).\nFrom Proposition 3, for some special n, we have the following corollary.\nCorollary 1: Let s ∈ V n (q) and p be the characteristic of F q .\n1) If p n, then there exists an r = ϕ(n) such that n |p r − 1 and p r − 1 is an ultimate period of {(E − 1) i ( s) } i ≥0 .\n2) If p |n, but p 2 n, then n |p(p r − 1) where r = ϕ( n p ) and p(p r − 1) is an ultimate period of {(E − 1) i ( s) } i ≥0 .\nWe next study the least ultimate period of Sequence {(E − 1) i ( s) } i ≥0 . By Deﬁnition 7, the least ultimate period of Sequence {(E−1) i ( s) } i ≥0 (i.e., S) can be clearly deﬁned as follows:\n(4.8) However, it is inconvenient to determine the least ultimate period by using its deﬁnition. Theorem 1 presents a simple method on determining P(S).\nTheorem 1: For a vector s ∈ V n (q) with third depth l 3 ( s) = ∞, let\nand let I(s) be the unique i < J (s) such that (E − 1) i ( s) = ( E −1) J ( s) ( s). Then the least ultimate period P(S) is J(s)− I( s).\nRemark 3: In Theorem 1, the calculation of (4.9) needs to ﬁnd the ﬁrst j (increasing from 0) such that there exists i < j satisfying (E −1) i ( s) = (E −1) j ( s). Then P(S) = j−i and the preperiod is i.\nExample 2: Let s = (2, 0, 2, 2, 0, 0, 0, 1) ∈ V 8 (3). Since n = 8 = 3 2 − 1, we obtain from Corollary 1 1) and Proposition 3, respectively, that 8 and 80 are ultimate periods of {(E − 1) i ( s) } i ≥0 . Furthermore, it is easy to verify from Theorem 1 that P(S) = 4.\nFinally in this section, recall the game RGRC in Section I. For example, the system manager selects the vector in Example 2, i.e., s = (2, 0, 2, 2, 0, 0, 0, 1) ∈ V 8 (3). It is clear that the least ultimate period of the corresponding sequence {(E − 1) i ( s) } i ≥0 is 4 and the preperiod is 1, which implies that the adversary certainly wins the game if the number of rounds is larger than or equal to 5.\nRemark 4: A sufﬁcient condition for the adversary to win the RGRC is that the number of rounds is larger than or equal to the sum of the least ultimate period and the preperiod of Sequence {(E − 1) i ( s) } i ≥0 where l 3 ( s) = ∞.\nTheorem 2: Let p = 2 be the characteristic of F q and s ∈ V n (q). Suppose that n = p r − 1=\nw n i i where w i \u2019s are distinct prime factors of n and n i \u2019s are all positive integers. Then the least ultimate period spectrum of {(E − 1) i ( s) } i ≥0 is the set\nTheorem 3: Let p ̸= 2 be the characteristic of F q and s ∈ V n (q). Suppose that n = p r − 1=\nw n i i where w i \u2019s are distinct prime factors of n and n i \u2019s are all positive integers.\nThen the least ultimate period spectrum of {(E − 1) i ( s) } i ≥0 is the set\nand the distribution of n-dimensional vectors over F q in terms of the least ultimate period of {(E − 1) i ( s) } i ≥0 is the set\nExample 3: For s ∈ V 8 (3), the least ultimate period spectrum is {1, 4, 8} (without 2) and the corresponding distribution is {9, 72, 6480}, where the set of vectors with P(S) = 1 and l 3 ( s) = ∞ is given as follows.\n{(0, 1, 0, 1, 0, 1, 0, 1), (0, 2, 0, 2, 0, 2, 0, 2), (1, 0, 1, 0, 1, 0, 1, 0), (1, 2, 1, 2, 1, 2, 1, 2),\nRecall Remark 1 that if we interpret each term of periodic sequence S as an element in F q n , then we obtain a new sequence S \u2032 with least period P(S) over F q n . That is to say, the inﬁnite third depth provides a way to construct a long least period sequence over F q n from a vector over F q . For example, let s = (1, 2, 0, 2, 1) ∈ V 5 (3), then l 3 ( s) = ∞ and P(S) = 80. And let f(x) = x 5 + x 4 + x 2 + 1 be a primitive polynomial over F 3 and β a root of f (x) over F 3 5 . Thus the terms in the ﬁrst period of S \u2032 are given as follows.\nIn this section, for all s ∈ V n (q), we introduce an algorithm of determining their distribution in terms of the least ultimate period of {(E − 1) i ( s) } i ≥0 , and then illustrate that we can construct a long least period sequence over F q n from a vector over F q with a high probability.\n2: Output: The distribution of n-dimensional vectors s over F q in terms of the least ultimate periods of S\n4: Step 2: Determine L = max {k : p k |n, k ≥ 0} and L \u2032 = L + ϕ( n p L ) where ϕ(x) is the Euler phi-function of a positive integer x.\n19: Step 5: Generate all cyclic codes C P from G P , respec- tively.\nRecall Deﬁnition 8, from the inclusion-exclusion principle, the following proposition holds. Note that we call x a maximal factor of y if x |y and for ∀z(̸= x, y)|y, we have x z.\nExample 4: For s ∈ V 63 (2), we have P max = 63 and D 63 = 2 63 − 2 21 − 2 9 + 2 3 .\nTherefore, we have such an assertion that D Pmax q n approx- imately equals to 1 if q is large. That is, if n = p r − 1, we can select a vector s over F q with a high probability to construct a sequence S \u2032 of least period P max (i.e., n) over F q n . Since these sequences S \u2032 are long period sequences over the extension ﬁeld and the difference operator in the method is simple, they could be used in lightweight cipher applications.\nThis research is on the period of {(E − 1) i ( s) } i ≥0 where s has inﬁnite third depth. An application of the inﬁnite third depth is in the rotating-table game with rapid counteraction (RGRC). If the number of rounds is larger than or equal to the sum of the least ultimate period and the preperiod of Sequence {(E − 1) i ( s) } i ≥0 where l 3 ( s) = ∞, the adversary wins the game. Another application is to provide two efﬁ- cient methods of constructing long least period sequences that could be used in lightweight cipher applications. One is to construct sequences over F q n from vectors over F q with a high probability, and the other is to construct difference interleaved sequences from m-sequences, which is not dis- cussed here owing to the limitation of space."},"refs":[{"authors":[],"title":{"text":"R"}},{"authors":[],"title":{"text":"A fast algorithm for determining the linear complexity of sequences over GF (p m ) with period p n "}},{"authors":[],"title":{"text":"C"}},{"authors":[],"title":{"text":"Linear complexity of de Bruijn sequences-old and new results"}},{"authors":[],"title":{"text":"The depth distribution-a new characterization for linear codes"}},{"authors":[],"title":{"text":"A fast algorithm for determining the complexity of a binary sequence with period 2 n "}},{"authors":[],"title":{"text":"S"}},{"authors":[],"title":{"text":"S"}},{"authors":[],"title":{"text":"R"}},{"authors":[],"title":{"text":"On the depth distribution of linear codes"}},{"authors":[],"title":{"text":"On integer-valued rational polynomials and depth dis- tributions of binary codes"}},{"authors":[],"title":{"text":"Rotating-table games and derivatives of words"}}]},"file":{"jsonClass":"File","file":"/home/arnfred/Code/trailhead/resources/isit2012/1569564201.pdf"},"links":[],"meta":{"jsonClass":"HashMap$HashTrieMap","sessionid":"S7.T6.4","endtime":"16:00","authors":"Min Zeng, Yuan Luo, Guang Gong","date":"1341330000000","papertitle":"Rotating-table game and construction of periodic sequences with lightweight calculation","starttime":"15:40","session":"S7.T6: Sequences and Their Properties","room":"Kresge Rehearsal A (033)","paperid":"1569564201"},"cluster":{"jsonClass":"Map$EmptyMap$"}}
