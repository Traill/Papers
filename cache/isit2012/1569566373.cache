{"id":"1569566373","paper":{"title":{"text":"From Glauber Dynamics To Metropolis Algorithm: Smaller Delay in Optimal CSMA"},"authors":[{"name":"Chul-Ho Lee"},{"name":"Do Young Eun"},{"name":"Se-Young Yun"},{"name":"Yung Yi"}],"abstr":{"text":"Abstract\u2014Glauber dynamics, a method of sampling a given probability distribution via a Markov chain, has recently made considerable contribution to the MAC scheduling research, pro- viding a tool to solve a long-standing open issue \u2013 achieving throughput-optimality with light message passing under CSMA. In this paper, we propose a way of reducing delay by studying generalized Glauber dynamics parameterized by β ∈ [0, 1], rang- ing from Glauber dynamics ( β = 0) to the Metropolis algorithm ( β = 1). The same stationary distribution is sustained across this generalization, thus maintaining the long-term optimality. However, a different choice of β results in a signiﬁcantly different second-order behavior (or variability) that has large impact on delay, which is hardly captured by the recent research focusing on delay in the large n (the number of nodes) asymptotic. We formally study such second-order behavior and its resulting delay performance, and show that larger β achieves smaller delay. Our results provide new insight into how to operate CSMA for large throughput and small delay in real, ﬁnite-sized systems."},"body":{"text":"Since the seminal work by Tassiulas and Ephremides on throughput-optimal scheduling [19], referred to as Max- Weight, a huge array of research has been made to develop distributed MAC scheduling with high performance guarantee and low complexity. The tradeoff between complexity and efﬁciency has been, however, observed in many cases, or even throughput-optimal algorithms with polynomial complexity have turned out to require heavy message passing (see, e.g., [20]). A breakthrough has been recently made, where just locally controlling the classical CSMA parameters, which is modeled by Glauber dynamics ∗ , is enough to achieve throughput-optimality, see e.g., [4], [8], [12], [17]. We call this \u201coptimal CSMA\u201d for brevity.\nIn addition to throughput or utility, delay is another key performance metric in MAC scheduling. Delay research in MAC scheduling with performance guarantee has been studied with mathematical tools such as large deviation theory, heavy trafﬁc approximation, and Lyapunov bound (see, e.g., [20] and references therein). However, delay in Glauber-dynamics based CSMA (or optimal CSMA) has been under-explored, where only a small set of work has been published with emphasis on the asymptotic results. Shah et al. [15] showed that it is unlikely to expect a simple MAC protocol such as CSMA to have high throughput and low delay. Motivated\nby such a \u201cnegative\u201d result, Shah and Shin [16] proposed a modiﬁed CSMA requiring coloring operation that achieves O(1) delay with throughput-optimality for networks with geometry (or polynomial growth). Lotﬁnezhad and Marbach [9] proved that a reshufﬂing approach, which periodically reshufﬂes all on-going schedules under time synchronized CSMA \u2020 , leads to both throughput-optimality and O(1) delay for torus (inference) topologies. Jiang et al. [3] proved that a discrete-time parallelized Glauber dynamics achieves O(log n) delay for a limited set of arrival rates.\nDespite these nice results on the delay asymptote for large- scale networks, it still remains questionable how to improve the delay performance of (standard) Glauber-dynamics based CSMA for unscaled, ﬁxed networks without loss of other important metrics such as throughput and complexity . It is also unclear which tools to use for such purpose. While mixing time has been a popular toolkit for delay analysis [16], [3], it was shown very recently [18] that mixing time based approach may not be the right way to capture delay dynamics even in the asymptotic sense. On the other hand, the development of optimal CSMA, in principle, is equivalent to constructing a (re- versible) Markov chain to achieve a given, desired stationary distribution under some constraints due to the interference. We note that Glauber dynamics is just one such instance. There can be many other Markov chains with the same stationary distribution (thus leading to throughput-optimality) and no additional complexity, but potentially higher efﬁciency for smaller delay under the same constraints.\nIn this paper, we propose, as extensions of the Glauber dynamics, a class of algorithms with a tunable parameter β ∈ [0, 1], named generalized Glauber dynamics, ranging from the Glauber dynamics ( β = 0) to the Metropolis algorithm ( β = 1). We then show that the generalized Glauber dynamics or corresponding reversible Markov chain achieves the same stationary distribution regardless of the choice of β, while the Markov chain, when β ∈ (0, 1], is more efﬁcient than that under the Glauber dynamics ( β = 0) in the sense of Peskun ordering , i.e., a partial order between off-diagonal elements of transition matrices of different Markov chains. Due to the invariant stationary distribution property, the generalized Glauber dynamics, when it comes into play for the problem of optimal CSMA, guarantees the same long-term throughput and also achieve throughput-optimality under mild conditions. Despite the same long-term throughput, their \u2018second-order\u2019 behavior can be quite different. This in turn leads to different\nqueueing delay performance, especially under the network of a reasonable size, which is hardly captured by any asymptotic order-wise analysis. However, thanks to the Peskun ordering and its relationship with efﬁciency ordering, we are able to demonstrate, in theory and simulation, that the original Glauber dynamics ( β = 0) in fact gives the worst queueing delay performance among the generalized Glauber dynamics, and there are inﬁnitely many different variants that have the same long-term throughput, but with better queueing delay performance as β increases, culminating in the \u2018Metropolised\u2019 version with β = 1 for any ﬁnite-sized networks.\nConsider a connected, undirected graph G = (N , E) with a ﬁnite set of nodes (or vertexes) N = {1, 2, . . . , n} and an edge set E. Let N v = {w ∈ N : (v, w) ∈ E} be the set of neighbors of node v. We deﬁne by σ a conﬁguration of the nodes in G, which is given by σ = {σ v , v ∈ N } with σ v ∈ {0, 1} for all v. A conﬁguration is said to be feasible if the set {v ∈ N : σ v = 1} is an independent set of G where no two nodes in the set are adjacent (or neighbor of each other), i.e., if σ v + σ w ≤ 1 for all (v, w) ∈ E. Let Ω ⊆ {0, 1} n also be the set of all feasible conﬁgurations on G. This model under the constraint of independent sets is called the hard-core model [7].\nThe (single-site update) Glauber dynamics for the hard-core model with heterogeneous fugacities {λ v , v ∈ N }, deﬁned in Algorithm 1, leads to a (discrete-time) Markov chain achieving the following stationary distribution π = {π(σ)} over Ω:\nwith a normalizing constant Z = σ ∈Ω v ∈N λ σ v v . Note that λ v > 0 for all v, ensuring that π(σ) > 0 for all σ ∈ Ω. Speciﬁcally, σ (t) = {σ v (t), v ∈ N } denotes the state of the Markov chain (or a feasible conﬁguration by the Glauber dynamics) at time slot t. It is known that {σ(t)} t ≥0 is an irreducible, aperiodic Markov chain achieving the stationary distribution π in (1) on the ﬁnite state space Ω [7], [17], [16]. The Markov chain {σ(t)} is also reversible with respect to π, i.e., π(σ)Q(σ, σ \u2032 ) = π(σ \u2032 )Q(σ \u2032 , σ) for all σ, σ \u2032 ∈ Ω, where Q(σ, σ \u2032 ) is the transition probability from state σ to state σ \u2032 .\nWe present how CSMA in wireless multi-hop networks can be modeled by the Glauber dynamics. In the context of wireless multihop scheduling (or, simply scheduling), deﬁne\na link as an (ordered) transmitter-receiver pair. It is said that two links conﬂict with each other if they cannot be \u201cactive\u201d for communication at the same time due to the interference. Consequently, we can deﬁne a conﬂict graph G = (N , E) in which each node represents a link, while an edge between two nodes (or links) exists if they conﬂict with each other. Given a graph G, the scheduling governed by Glauber dynamics determines which nodes to be active or available for commu- nication, forming one instance of independent sets (feasible conﬁguration) over G at each time t in a distributed manner. For each node v ∈ N , if σ v (t) = 1, then node v is active, i.e., the transmitter of link (or node) v can transmit a packet to its receiver pair, and node v should be silent, if otherwise. See Fig. 1 for an illustrative example. Throughout this paper, the graph G refers to a conﬂict graph.\nThe Glauber dynamics in the context of scheduling is typically considered under continuous-time (or asynchronous) setting as used in [17], [16], which is also our target scenario. Speciﬁcally, each node is equipped with its own Poisson clock of rate 1, leading to the uniform node selection in Algorithm 1, and then decides its transmission schedule (or updates its status) accordingly. Here, the \u2018master\u2019 clock is Poisson with rate n and each (master) clock tick corresponds to a discrete-time slot in Algorithm 1. It is not difﬁcult to see that the Glauber dynamics captures the following CSMA features: 1) random back-off : the transmitter of link v waits an exponentially distributed period of time with mean (1+λ v )/λ v before transmitting (provided that the channel is sensed \u2018idle\u2019); 2) channel holding time: once the transmitter of link v grabs the channel for transmission, it keeps the channel for an exponential distributed period of time with mean 1 + λ v . It is worth noting that in the continuous-time setting, since the master clock rate is n, the time scale is scaled down by a factor of 1/n, implying the similar parallel-update effect to the discrete-time parallel Glauber dynamics in [12], [3]. Although our target scenario is such continuous-time update for scheduling, in our subsequent analysis, time unit of interest is the unit of master clock ticks (so discrete time).\nThere are potentially many other (discrete-time) reversible Markov chains with the same π in (1), all of which translate into distributed algorithms just like the one in Algorithm 1, as will be shown later. One important question would be how to compare these reversible Markov chains. As these algorithms have the same π, they all guarantee the same long-term throughput, while their \u2018second-order\u2019 behavior can be quite different, leading to different queueing delay performance.\nMixing time has been a popular criterion to compare competing reversible Markov chains with the same stationary distribution. The mixing time of a (reversible) Markov chain indicates the speed of convergence to its stationary distribution and is mainly determined by the second largest eigenvalue modulus (SLEM) of its transition matrix [7]. Note that smaller SLEM leads to smaller (faster) mixing time. In this paper, however, we look at the comparison of reversible Markov chains from a different, but important perspective. This is done based on the following Peskun ordering and its relationship with efﬁciency ordering.\nDeﬁnition 1 (Peskun ordering): [13] For two irreducible Markov chains on a ﬁnite state space S with transition matrices P = {P (i, j)} i,j ∈S and ˜ P = { ˜ P (i, j)} i,j ∈S , it is said that ˜ P dominates P off the diagonal, written as P \t ˜ P, if P (i, j) ≤ ˜ P (i, j) for all i, j ∈ S (i = j). \t ✷\nLet {X(t)} t ≥0 and { ˜ X(t)} t ≥0 be irreducible Markov chains on a ﬁnite state space S = {1, 2, . . . , n} with transition matrices P and ˜ P, respectively. Suppose that the Markov chains {X(t)} and { ˜ X(t)} have the same stationary distri- bution π = {π(1), π(2), . . . , π(n)}. For a function f : S → R, deﬁne an estimator ˆ µ m \t m t =1 f (X(t))/m for µ = E π (f ) =\nf (i)π(i). It is well known that lim m →∞ ˆ µ m = µ for any function f with E π (|f |) < ∞ [5], [7]. The asymptotic variance of the estimate ˆ µ m is deﬁned as\nwhich is independent of the distribution of the initial state X(0) [13]. We similarly deﬁne ν( ˜ P , f ) for the chain { ˜ X(t)} with ˜ P. As mentioned before, the estimate ˆ µ m based on any ﬁnite, irreducible Markov chain with the same π always becomes µ, as m goes to inﬁnity. However, since the asymp- totic variance decides approximately how many samples are required to achieve a certain accuracy of the estimate ˆ µ m , \u2021 it has been an important criterion to rank the efﬁciency among competing Markov chains with the same π, especially for the MCMC samplers [13], [11]. It is also said that { ˜ X(t)} is at least as efﬁcient as {X(t)} if ν(P, f ) ≥ ν( ˜ P , f ) for any f with VAR π (f ) < ∞ [11]. In particular, this efﬁciency ordering is still in effect even when both chains are already in their stationary regimes (already mixed). The efﬁciency ordering will be the key component in the delay analysis later in the paper. It is known that the Peskun ordering between two reversible P and ˜ P with the same π provides a sufﬁcient condition for the efﬁciency ordering as follows.\nLemma 1: [13] If P and ˜ P are reversible with respect to π, and P \t ˜ P, then ν(P, f ) ≥ ν( ˜ P , f ) for any f with VAR π (f ) < ∞. \t ✷\nIt is worth nothing that efﬁciency ordering does not imply mixing time ordering in general, although there are related with each other [11]. (See more review on mixing time, Peskun ordering, and efﬁciency ordering in our technical report [6].)\nWe now introduce a class of algorithms with a controllable parameter β ∈ [0, 1], named generalized Glauber dynamics, as extensions of the (standard) Glauber dynamics in Algorithm 1. As shall be shown below, this generalization indicates that the Glauber dynamics is nothing but one of many possible ways to achieve the desired stationary distribution in (1) under the independent set constraints, while its extensions lead to more efﬁcient reversible Markov chains in the sense of Peskun ordering (and efﬁciency ordering).\nThe generalized Glauber dynamics is summarized in Algo- rithm 2. This is achieved by judiciously employing a gener- alization of the procedures by Hastings [2] for constructing a reversible Markov chain with a given, desired stationary distribution, which was originally introduced for the devel- opment of an MCMC sampler. The details are omitted owing to space constraints but can be found in [6]. As a special case, if β = 0, then Algorithm 2 becomes identical to Algorithm 1 \u2013 the original Glauber dynamics for the hard-core model. Also, if β = 1, then it means that the Metropolis algorithm [10] is applied properly for the hard-core model. The only difference between the generalized Glauber dynamics with β ∈ (0, 1] and the original Glauber dynamics ( β = 0) is that for a randomly chosen node v, if σ u (t−1) = 0 for all u ∈ N v , then σ v (t) is decided based on σ v (t−1) for any β ∈ (0, 1], while σ v (t) is determined independently of σ v (t−1) for β = 0. Note also that the node-selection probability distribution {q v } in Algorithm 2 can be arbitrary as long as q v > 0 for all v and v ∈N q v = 1.\nFor any given {q v }, let σ(t, β) be a conﬁguration at time t by the generalized Glauber dynamics with β ∈ [0, 1]. One can see that {σ(t, β)} t ≥0 is a ﬁnite Markov chain with a transition matrix Q β = {Q β (σ, σ \u2032 )} σ ,σ \u2032 ∈Ω . We say that the Markov chain is ergodic if π(σ \u2032 ) = lim t →∞ Q t β (σ, σ \u2032 ), where Q t β (σ, σ \u2032 ) is the t-step transition probability from state σ to state σ \u2032 . We then have the following properties of the generalized Glauber dynamics.\nTheorem 1: For any given {q v } and β ∈ [0, 1], the Markov chain {σ(t, β)} with Q β is ergodic and reversible with respect to π in (1). In addition, for any given {q v } and 0 ≤ β 1 ≤ β 2 ≤ 1, Q β 1 Q β 2 . \t ✷\nWhile our focus in this paper is to analyze the performance of each queue per node (in a conﬂict graph) when the generalized Glauber dynamics comes into play for the problem of optimal CSMA, we here brieﬂy explain the throughput- optimality of the generalized Glauber dynamics. Theorem 1 says that the stationary distribution π of the Markov chain {σ(t, β)} is invariant with respect to β ∈ [0, 1] and {q v }. Thus, if the fugacity of each node λ v can be chosen so that the long-term service rate (or capacity) at each queue is larger than its packet arrival rate, which is the typical case for delay analysis [3], [18], then \u2018throughput-optimality\u2019 or \u2018per-node stability\u2019 is achieved irrespective of the choice of β ∈ [0, 1] and {q v }. However, in reality, it may not be possible for each node v to adjust its fugacity λ v based on the measured arrival and service rates. Hence, in the literature, the throughput- optimality has been deﬁned and shown under the following setting, especially for the original Glauber dynamics ( β = 0): the fugacity is now a function of time t, which is given by λ v (t) = exp(f (W v (t))) where f is some weighted function and W v (t) is the queue-length at node v at time t.\nEven in this dynamic fugacity set-up, one can establish the throughput-optimality of the generalized Glauber dynamics with any given β ∈ [0, 1] and {q v }. There are two different ways to prove the throughput-optimality in the literature. The ﬁrst (and most popular) way is based on the time-scale decomposition under which the system quickly converges to its stationary regime before its dynamics changes (see, e.g., [4], [12]). Under this condition, Theorem 1 immediately implies that the generalized Glauber dynamics is throughput-optimal. On the other hand, the second approach in [17] is done without the time-scale decomposition when q v = 1/n for all v and β = 0, but by choosing a proper weighted function f such as f (·) = log log(·+ e), so that f (W v (t)) changes much slower than the system dynamics. The proof technique in [17] can be similarly used to establish the throughput-optimality of the generalized Glauber dynamics. A rigorous treatment on the throughput-optimality without the time-scale decomposition is another research topic beyond the scope of this paper.\nWhile not much is known yet about the queueing delay performance of optimal CSMA algorithms, we emphasize that the time-varying behavior of λ v (t) (in the dynamic fugacity set-up) makes the analysis even more intractable. So, as used in [3], [18], we here focus on the following case for delay analysis: the fugacity of each node λ v is given and ﬁxed, but possibly heterogeneous over v ∈ N , such that the long-term service rate at each queue is larger than its packet arrival rate. We then demonstrate that higher efﬁciency in the extensions of Glauber dynamics, the choices of β ∈ (0, 1], give rise to better queueing delay performance, while maintaining the same long-term throughput. Speciﬁcally, the original Glauber dynamics with β = 0 in fact gives the worst queueing delay performance, and there are inﬁnitely many different variants\nof \u2018throughput-optimal\u2019 algorithms with better queueing delay performance as β increases, culminating in the \u2018Metropolised\u2019 version with β = 1. We also support our analytical ﬁndings for the dynamic fugacity case through extensive simulations under various network topologies and arrival rates.\nFix {q v } and β ∈[0, 1]. Since we are interested in the long- term behavior of the queueing delay performance, without loss of generality, we can assume that the system is in its stationary regime. § Thus, the Markov chain {σ(t, β)} t ≥0 is in the steady- state, i.e., P {σ(t, β) = σ} = π(σ) for all t ≥ 0. We consider that a packet arrives in each node v at the beginning of each time slot according to a stationary 0\u20131 process {A v (t)} with rate µ v in which A v (t) = 1 if there is a packet arrival to node v with probability P{A v (t) = 1} = µ v at time t, and A v (t) = 0, otherwise. ¶ On the other hand, whenever node v is available for communication, i.e., σ v (t) = 1, it transmits one packet backlogged in its FIFO queue (if any) during time slot t. The communication (or service) availability at node v is modeled as a 0\u20131 valued process governed by the generalized Glauber dynamics. That is,\nfor t = 0, 1, . . ., where B v \t {σ ∈ Ω : σ v = 1} ⊆ Ω. We deﬁne π B v \t σ ∈B\nπ(σ), the long-term proportion of communication availability at node v or its \u2018service rate\u2019. From the stationarity of the Markov chain {σ(t, β)}, we have P {S v (t) = 1} = P{σ(t, β) ∈ B v } = π B v for all t. Thus, {S v (t)} t ≥0 is a stationary 0\u20131 process. Also, {S v (t)} is independent of {A v (t)}. As mentioned before, we assume that π B v > µ v for all v ∈ N , ensuring that utilization is strictly less than one at each queue.\nWithout loss of generality, we below examine the queueing delay at an arbitrarily chosen node v. From now on, our exposition will be all about the queue in node v. So, for the sake of notational simplicity, we drop the subscript v and use µ, A(t), S(t), B, and π B instead of µ v , A v (t), S v (t), B v and π B v , respectively, unless stated otherwise. We ﬁrst evaluate the time interval between the two successive communication availabilities at node v, which corresponds to the service time of a single-server queueing model. To this end, we deﬁne\nTheorem 2: For a given {q v }, E{τ i } = 1/π B for all β, and E {(τ i ) 2 } is decreasing in β ∈ [0, 1]. \t ✷\nFor a ﬁxed {q v }, the average recurrent time, E{τ i }, remains the same for all β due to the invariance property of π with respect to β in Theorem 1, while the variance of the recurrence time is decreasing in β. In the standard queueing literature, the variance of the service time plays a major role in queueing performance. For example, it is well-known that, for M/G/1 queue, the variance of the service time solely determines the average queueing delay if the average service time is kept the same. Similarly, even for G/G/1 queue, more \u2018variable\u2019 service time leads to larger queueing delay [14]. However, our system is far more complicated than these standard queueing systems; the recurrence times {τ i } can be possibly correlated over i for |B| > 1, as the time instant T i +1 depends on the conﬁguration σ (T i , β) ∈ B at time T i . Such dependency, thus, makes the exact analysis of queueing delay performance intractable.\nNonetheless, for a given {q v }, the \u2018marginal\u2019 distribution of the service time τ i has smaller variance as β increases (with the same mean regardless of the choice of β), suggesting that larger β would lead to better delay performance.\nIn addition, we demonstrate that the efﬁciency ordering of Q β for different β can still order the performance of queueing dynamics by directly taking into account the dependency structure in {τ i } sequence. To proceed, let W (t) be the queue length (or workload) at time t, satisfying Lindley recursion:\nW (t+1) = max{0, W (t) + A(t+1) − S(t+1)}. (4) From the large deviation theory, in considerable generality, the tail distribution of the steady-state queue length W is asymptotically exponential [1] with the asymptotic decay rate η given by\nLet I(t) = A(t)−S(t) be the net input into the queue at time t. Let I t \t t i =1 I(i), A t \t t i =1 A(i), and S t \t t i =1 S(i). Clearly, E {I t } = E{A t } − E{S t } = t(µ − π B ) < 0. In this setup, we have the following:\nTheorem 3: Suppose that the distribution of I t is Gaussian for large t with lim t →∞ VAR {A t }/t = ν ∗ < ∞. Then, η in (5) is increasing in β ∈ [0, 1]. \t ✷\nSince I t = t i =1 (A(i) − S(i)) is the sum of t random variables, as long as their dependency over i is not so strong, it is reasonable to assume that I t is roughly Gaussian for large t. Then, Theorem 3 tells us that larger β leads to faster decay of the tail distribution of the steady-state queue-length, again suggesting better queueing performance while preserving the throughput-optimality. The Gaussian approximation and The- orem 3 are also corroborated by simulation results.\nAs mentioned before, it may not be possible for each node v to choose its fugacity λ v based on the measured arrival and service rates for per-node stability. Instead, the fugacity of each\nnode needs to be an appropriate function of its (time-varying) queue-length. Nonetheless, if the corresponding temporal dy- namics is relatively slow or is in \u2018almost-stationary\u2019 regime, from Theorems 2 and 3, we expect that the average queueing delay per node decreases in β ∈ [0, 1] for a given {q v }, which is also supported by simulation results. Due to space constraints, all simulation results are omitted and can be found in [6].\nWe took a different direction, instead of relying on asymp- totic delay analysis prevalent in recent studies, to achieve smaller delay in Glauber-dynamics based CSMA (or optimal CSMA) for ﬁnite-sized networks. By carefully exploring all possible variants of the traditional Glauber dynamics, we proposed generalized Glauber dynamics with no additional complexity, maintaining the same stationary distribution and thus rendering the long-term optimality unchanged in the context of scheduling. We then showed that our extensions lead to better queueing delay performance, by directly taking into account the second-order system behavior via a notion of Peskun (or efﬁciency) ordering and large deviation techniques."},"refs":[{"authors":[{"name":"P. W. Glynn"},{"name":"W. Whitt"}],"title":{"text":"Logarithmic asymptotics for steady-state tail probabilities in a single-server queue"}},{"authors":[{"name":"W. K. Hastings"}],"title":{"text":"Monte Carlo sampling methods using markov chains and their applications"}},{"authors":[{"name":"L. Jiang"},{"name":"M. Leconte"},{"name":"J. Ni"},{"name":"R. Srikant"},{"name":"J. Walrand"}],"title":{"text":"Fast mixing of parallel Glauber dynamics and low-delay CSMA scheduling"}},{"authors":[{"name":"L. Jiang"},{"name":"J. Walrand"}],"title":{"text":"A distributed CSMA algorithm for throughput and utility maximization in wireless networks"}},{"authors":[{"name":"G. L. Jones"}],"title":{"text":"On the Markov chain central limit theorem"}},{"authors":[{"name":"C.-H. Lee"},{"name":"D. Y. Eun"},{"name":"S.-Y. Yun"},{"name":"Y. Yi"}],"title":{"text":"From Glauber dynamics to Metropolis algorithm: smaller delay in optimal CSMA"}},{"authors":[{"name":"D. A. Levi"},{"name":"Y. Pere"},{"name":"E. L. Wilme"}],"title":{"text":"Markov chains and mixing times "}},{"authors":[{"name":"J. Liu"},{"name":"Y. Yi"},{"name":"A. Proutiere"},{"name":"M. Chiang"},{"name":"H. V. Poor"}],"title":{"text":"Towards utility- optimal random access without message passing"}},{"authors":[{"name":"M. Lotﬁnezhad"},{"name":"P. Marbach"}],"title":{"text":"Throughput-optimal random access with order-optimal delay"}},{"authors":[{"name":"A. Mira"}],"title":{"text":"Ordering and improving the performance of Monte Carlo Markov chains"}},{"authors":[{"name":"J. Ni"},{"name":"B. Tan"},{"name":"R. Srikant"}],"title":{"text":"Q-csma: Queue-length based CSMA/CA algorithms for achieving maximum throughput and low delay in wireless networks"}},{"authors":[{"name":"P. H. Peskun"}],"title":{"text":"Optimum Monte-Carlo sampling using Markov chains"}},{"authors":[{"name":"S. M. Ros"}],"title":{"text":"Stochastic processes, 2nd ed"}},{"authors":[{"name":"D. Shah"},{"name":"D. N. C. Tse"},{"name":"J. N. Tsitsiklis"}],"title":{"text":"Hardness of low delay net- work scheduling"}},{"authors":[{"name":"D. Shah"},{"name":"J. Shin"}],"title":{"text":"Delay optimal queue-based CSMA"}},{"authors":[{"name":"J. Shin"},{"name":"D. Shah"},{"name":"S. Rajagopalan"}],"title":{"text":"Network adiabatic theorem: An efﬁcient randomized protocol for contention resolution"}},{"authors":[{"name":"V. Subramanian"},{"name":"M. Alanyali"}],"title":{"text":"Delay performance of CSMA in networks with bounded degree conﬂict graphs"}},{"authors":[{"name":"L. Tassiulas"},{"name":"A. Ephremides"}],"title":{"text":"Stability properties of constrained queueing systems and scheduling for maximum throughput in multihop radio networks"}},{"authors":[{"name":"Y. Y"},{"name":"M. Chian"}],"title":{"text":"Next-Generation Internet Architectures and Protocols "}}]},"file":{"jsonClass":"File","file":"/home/arnfred/Code/trailhead/resources/isit2012/1569566373.pdf"},"links":[{"id":"1569566381","weight":2},{"id":"1569565383","weight":2},{"id":"1569566725","weight":2},{"id":"1569564635","weight":2},{"id":"1569565067","weight":2},{"id":"1569564669","weight":2},{"id":"1569565691","weight":2},{"id":"1569559617","weight":2},{"id":"1569565097","weight":4},{"id":"1569566227","weight":4},{"id":"1569559259","weight":2},{"id":"1569566597","weight":2},{"id":"1569566591","weight":2},{"id":"1569552245","weight":2},{"id":"1569565931","weight":2},{"id":"1569563411","weight":2},{"id":"1569559541","weight":2},{"id":"1569566467","weight":2},{"id":"1569566999","weight":2},{"id":"1569566843","weight":2},{"id":"1569566173","weight":2},{"id":"1569565455","weight":2},{"id":"1569566709","weight":2},{"id":"1569566523","weight":2},{"id":"1569565321","weight":2},{"id":"1569564647","weight":7},{"id":"1569561085","weight":2},{"id":"1569566905","weight":2},{"id":"1569566753","weight":2},{"id":"1569566311","weight":4},{"id":"1569566759","weight":2},{"id":"1569565841","weight":4},{"id":"1569566531","weight":2},{"id":"1569565833","weight":2},{"id":"1569566489","weight":21},{"id":"1569566325","weight":4},{"id":"1569566437","weight":2},{"id":"1569553909","weight":2},{"id":"1569552251","weight":2},{"id":"1569553519","weight":2},{"id":"1569566209","weight":2},{"id":"1569566371","weight":2},{"id":"1569564333","weight":2},{"id":"1569566629","weight":2},{"id":"1569566257","weight":9},{"id":"1569563897","weight":4},{"id":"1569557083","weight":2},{"id":"1569555879","weight":4},{"id":"1569558509","weight":2},{"id":"1569564851","weight":2},{"id":"1569567033","weight":2},{"id":"1569565739","weight":2},{"id":"1569565311","weight":2},{"id":"1569564097","weight":4},{"id":"1569566407","weight":2},{"id":"1569566387","weight":4},{"id":"1569563395","weight":2},{"id":"1569551347","weight":2},{"id":"1569555367","weight":2},{"id":"1569566383","weight":4},{"id":"1569565155","weight":2},{"id":"1569565885","weight":4},{"id":"1569566929","weight":2},{"id":"1569565665","weight":4},{"id":"1569565611","weight":2},{"id":"1569566779","weight":2},{"id":"1569566479","weight":4},{"id":"1569566129","weight":2},{"id":"1569566261","weight":7},{"id":"1569565919","weight":2},{"id":"1569565181","weight":2},{"id":"1569566267","weight":2},{"id":"1569564131","weight":2},{"id":"1569561221","weight":2},{"id":"1569566917","weight":2},{"id":"1569566035","weight":2},{"id":"1569566691","weight":2},{"id":"1569566651","weight":2},{"id":"1569566137","weight":2},{"id":"1569565041","weight":2},{"id":"1569566713","weight":2},{"id":"1569565293","weight":2},{"id":"1569551905","weight":2},{"id":"1569561185","weight":2},{"id":"1569560235","weight":2},{"id":"1569567483","weight":2},{"id":"1569557851","weight":2},{"id":"1569562367","weight":2},{"id":"1569560785","weight":2},{"id":"1569565561","weight":2},{"id":"1569566847","weight":2},{"id":"1569565089","weight":7},{"id":"1569567013","weight":2},{"id":"1569566583","weight":2},{"id":"1569565337","weight":2},{"id":"1569566807","weight":2},{"id":"1569565889","weight":2},{"id":"1569566375","weight":2},{"id":"1569566987","weight":2},{"id":"1569558697","weight":2},{"id":"1569565139","weight":2},{"id":"1569564419","weight":2},{"id":"1569565579","weight":2},{"id":"1569566067","weight":2},{"id":"1569563007","weight":4}],"meta":{"jsonClass":"HashMap$HashTrieMap","sessionid":"S15.T4.4","endtime":"11:10","authors":"Chul-Ho Lee, Do Young Eun, Se-Young Yun, Yung Yi","date":"1341571800000","papertitle":"From Glauber Dynamics To Metropolis Algorithm: Smaller Delay in Optimal CSMA","starttime":"10:50","session":"S15.T4: Delay and Distributed Scheduling","room":"Stratton 20 Chimneys (306)","paperid":"1569566373"},"cluster":{"jsonClass":"Map$EmptyMap$"}}
