{"id":"1569566649","paper":{"title":{"text":"Wireless Device-to-Device Communications with Distributed Caching"},"authors":[{"name":"Negin Golrezaei"},{"name":"Alexandros G. Dimakis"},{"name":"Andreas F. Molisch"}],"abstr":{"text":"Abstract\u2014We introduce a novel wireless device-to-device (D2D) collaboration architecture that exploits distributed storage of popular content to enable frequency reuse. We identify a funda- mental conﬂict between collaboration distance and interference and show how to optimize the transmission power to maximize frequency reuse. Our analysis depends on the user content request statistics which are modeled by a Zipf distribution. Our main result is a closed form expression of the optimal collaboration distance as a function of the content reuse dis- tribution parameters. We show that if the Zipf exponent of the content reuse distribution is greater than 1, it is possible to have a number of D2D interference-free collaboration pairs that scales linearly in the number of nodes. If the Zipf exponent is smaller than 1, we identify the best possible scaling in the number of D2D collaborating links. Surprisingly, a very simple distributed caching policy achieves the optimal scaling behavior and therefore there is no need to centrally coordinate what each node is caching."},"body":{"text":"Wireless mobile data trafﬁc is expected to increase by a factor of 40 over the next ﬁve years, from the current 93 Petabytes to 3600 Petabytes per month in the next ﬁve years [1]. This explosive demand is fueled mainly by mobile video trafﬁc that is expected to increase by a factor of 65 times, and become the by far dominant source of data trafﬁc. Modern smartphones and tablets have signiﬁcant storage capacity often reaching several gigabytes. Recent breakthroughs in dense NAND ﬂash will make 128GB smartphone memory chips available in the coming months. In this paper we show how to exploit these storage capabilities to signiﬁcantly reduce wireless capacity bottlenecks.\nThe central idea in this paper is that, for most types of mobile video trafﬁc, we can replace backhaul connectivity with storage capacity. This is true because of content reuse, i.e. , the fact that popular video ﬁles will be requested by a large number of users. Distributed storage enhances the opportunities for user collaboration.\nWe recently introduced the idea of femtocaching helpers [2] [3], small base stations with a low-bandwidth (possibly wire- less) backhaul link and high storage capabilities. In this paper we take this architecture one step further: We introduce a device-to-device (D2D) architecture where the mobiles are used as caching storage nodes . Users can collaborate by caching popular content and utilizing local device-to-device communication when a user in the vicinity requests a popular ﬁle. The base station can keep track of the availability of the cached content and direct requests to the most suitable nearby\ndevice. Storage allows users to collaborate even when they do not request the same content at the same time. This is a new dimension in wireless collaboration architectures beyond relaying and cooperative communications.\nOur contributions: In this paper we introduce the novel D2D architecture and formulate some theoretical problems that arise. Speciﬁcally, we identify a conﬂict between collaboration distance and interference. We show how to optimize the D2D collaboration distance and analyze the scaling behavior of D2D beneﬁts. The optimal collaboration distance depends on the content request statistics which are modeled by a Zipf distribution. Our main result is a closed form expression of the optimal collaboration distance as a function of the content reuse distribution parameters. We show that if the Zipf exponent of the content reuse distribution is greater than 1, it is possible to have a number of D2D interference-free collaboration pairs that scales linearly in the number of nodes.\nIf the Zipf exponent is smaller than 1, we identify the best possible scaling in the number of D2D collaborating links. Surprisingly, a very simple distributed caching policy achieves the optimal scaling behavior and therefore there is no need to centrally coordinate what each node is caching.\nThe remainder of this paper is organized as follows: In Sec- tion II we setup the D2D formulation and explain the tradeoff between collaboration distance and interference. Section III contains our two main theorems, the scaling behavior for Zipf exponents greater and smaller than 1. In Section IV we discuss future directions, open problems and conclusions. Finally, in the Appendix we include some interesting technical parts of our proofs. Due to space constraints we omit the complete proofs from this version of the paper.\nWe consider n users distributed uniformly in a unit square and consider this as single cell. The base station (BS) might be aware of the stored ﬁles and channel state information of the users and control the D2D communications. For simplicity, we neglect inter-cell interference and consider one cell in isolation. We further assume that the D2D communication does not interfere with communication between the BS and users. This assumption is justiﬁed if the D2D communications occur in a separate frequency band (e.g., WiFi). For the device- to-device throughput, we henceforth do not need to consider explicitly the BS and its associated communications.\nThe communication is modeled by random geometric graph G(n, r(n)) where two users (assuming D2D communication is possible) can communicate if their physical distance is smaller\nthan some collaboration distance r(n) [4], [5]. The maximum allowable distance for D2D communication r(n) is determined by the power level for each transmission. Figure 1 illustrates an example of random geometric graph (RGG).\nWe assume that users may request ﬁles from a set of size m that we call a \u201clibrary\u201d. The size of this set should increase as a function of the number of users n. Intuitively, the set of YouTube videos requested in Berkeley in one day should be smaller than the set of requested in Los Angeles. We assume that this growth should be sublinear in n, e.g. m could be Θ(log(n)).\nEach user requests a ﬁle from the library by sampling independently using a popularity distribution. Based on nu- merous studies, Zipf distributions have been established as good models to the measured popularity of video ﬁles [6], [7]. Under this model, the frequency of the ith popular ﬁle, denoted by f i , is inversely proportional to its rank:\nThe Zipf exponent γ r characterizes the distribution by con- trolling the relative popularity of ﬁles. Larger γ r exponents correspond to higher content reuse, i.e., the ﬁrst few popular ﬁles account for the majority of requests.\nEach user has a storage capacity called cache which is populated with some video ﬁles. For our scaling law analysis we assume that all ﬁles have the same size, and each user can store one ﬁle. This yields a clean formulation and can be easily extended for larger storage capacities.\nOur architecture works as follows: If a user requests one of the ﬁles stored in neighbors\u2019 caches in the RGG, neighbors will handle the request locally through D2D communication; otherwise, the BS should serve the request. Thus, to have D2D communication it is not sufﬁcient that the distance between two users be less than r(n); users should ﬁnd their desired ﬁles locally in caches of their neighbors. A link between two users will be called potentially active if one requests a ﬁle that the other is caching. Therefore, the probability of D2D collaboration opportunities depends on what is stored and requested by the users.\nThe decision of what to store can be taken in a distributed or centralized way. A central control of the caching by the BS allows very efﬁcient ﬁle-assignment to the users [8]. However, if such control is not desired or the users are highly\nmobile, caching has to be optimized in a distributed way. The simple randomized caching policy we investigate makes each user choose which ﬁle to cache by sampling from a caching distribution. It is clear that popular ﬁles should be stored with a higher probability, but the question is that how much redundancy we want to have in our distributed cache.\nWe assume that all D2D links share the same time-frequency transmission resource within one cell area. This is possible since the distance between requesting user and user with the stored ﬁle will typically small. However, there should be no destructive interference of a transmission by others on an active D2D link. We assume that (given that node u wants to transmit to node v) any transmission within range r(n) from v (the receiver) can introduce interference for the u − v transmission. Thus, they cannot be activated simultaneously. This model is known as protocol model; while it neglects important wireless propagation effects such as fading [9], it can provide fundamental insights and has been widely used in prior literature [4].\nTo model interference given a storage conﬁguration and user requests we start with all potential D2D collaboration links. Then, we construct the conﬂict graph as follows. We model any possible D2D link between node u as transmitter to node v as a receiver with a vertex u − v in the conﬂict graph. Then, we draw an edge between any two vertices (links) that create interference for each other according to the protocol model. Figure 2 shows how the RGG is converted to the conﬂict graph. In Figure 2(a), receiver nodes are green and transmitter nodes are yellow. The nodes that should receive their desired ﬁles from the BS are gray. A set of D2D links is called active if they are potentially active and can be scheduled simultaneously, i.e., form an independent set in the conﬂict graph. The random variable counting the number of active D2D links under some policy is denoted by L.\nFigure 2(b) shows the conﬂict graph and one of maximum independent sets for the conﬂict graph. We can see that out of 14 possible D2D links 9 links can co-exist without interfer- ence. As is well known, determining the maximum indepen- dent set of an arbitrary graph is computationally intractable (NP complete [10]). Despite the difﬁculty of characterizing the number of interference-free active links, we can determine the best possible scaling law in our random ensemble.\nWe are interested in determining the best collaboration distance r(n) and caching policy such that the expected number of active D2D links is maximized. Our optimization is based on balancing the following tension: The smaller the transmit power, the smaller the region in which a D2D communication creates interference. Therefore, more D2D pairs can be packed into the same area allowing higher frequency reuse. On the other hand, a small transmit power might not be sufﬁcient to reach a mobile that stores the desired ﬁle. Smaller power means smaller distance and hence smaller probability of collaboration opportunities. The optimum way to solve this problem would be to assign different transmit\npower to each node dynamically, to maximize the number of non-interfering collaborating pairs. However this approach would be intractable and non-practical.\nOur approach is to enforce the same transmit power for all the users and show how to optimize it based on the content request statistics. Our analysis involves ﬁnding the best compromise between the number of possible parallel D2D links and the probability of ﬁnding the requested content. Our results consist of two parts. In the ﬁrst part (upper bound), we ﬁnd the best achievable scaling for the expected number of active D2D links. In the second part (achievability), we determine an optimal caching policy and r(n) to obtain the best scaling for the expected number of active links E[L].\nThe best achievable scaling for the expected number of ac- tive D2D links depends on the extend of content reuse. Larger Zipf distribution exponents correspond to more redundancy in the user requests and a small number of ﬁles accounts for the majority of video trafﬁc. Thus, the probability of ﬁnding requested ﬁles through D2D links increases by having access to few popular ﬁles via neighbors.\nWe separate the problem into two different regions depend- ing on the Zipf exponent: γ r > 1 and γ r < 1. For each of these regimes, we ﬁnd the best achievable scaling for E[L] and the optimum asymptotic r(n) denoted by r opt (n). We also show that a simple distributed caching policy with the properly chosen caching distribution has optimal scaling, i.e., matches the scaling behavior that any centralized caching policy could achieve 1 .\nOur ﬁrst result is the following theorem: Theorem 1: If the Zipf exponent γ r > 1,\nusing a Zipf caching distribution with exponent γ c > 1 then E[L] = Θ(n).\nThe ﬁrst part of the theorem 1 is trivial since the number of active D2D links can at most scale linearly in the number of users. The second part indicates that if we choose r opt (n) = Θ( 1 n ) and γ c > 1, E[L] can grow linearly with n. There is some simple intuition behind this result: We show that in this regime users are surrounded by a constant number of users in expectation. If the Zipf exponent γ c is greater than one, this sufﬁces to show that the probability that they can ﬁnd their desired ﬁles locally is a non-vanishing constant as n grows. Our proof is provided in the Appendix A.\nFor the low content reuse region γ r < 1, we obtain the following result:\ni) Upper bound: For any caching policy, E[L] = O( n m η ) where η = 1−γ r 2−γ\nii) Achievability: If r opt (n) = Θ( m η+ n ) and users cache ﬁles randomly and independently according to a Zipf dis- tribution with exponent γ c , for any exponent η + , there exists γ c such that E[L] = Θ( n m η+ ) where 0 < < 1 6 and γ c is a solution to the following equation\nWe show that when there is low content reuse, linear scaling in frequency re-use is not possible. At a high level, in order to achieve the optimal scaling, on average a user should be surrounded by Θ(m η ) users. Comparing with the ﬁrst region where γ r > 1, we can conclude that when there is less redundancy, users have to see more users in the neighborhood to ﬁnd their desired ﬁles locally. Due to space constraints we omit this proof.\nThe study of scaling laws of the capacity of wireless networks has received signiﬁcant attention since the pioneering work by Gupta and Kumar [4] (e.g. see [11]\u2013[13]). The ﬁrst result was pessimistic: if n nodes are trying to communicate (say by forming n/2 pairs), since the typical distance in a 2D random network will involve roughly Θ(\nthroughput per node must vanish, approximately scaling as 1/\ning rigorous analysis that sharpens the bounds and numerous interesting model extensions. One that is particularly relevant to this project is the work by Grossglauser and Tse [12] that showed that if the nodes have inﬁnite storage capacity, full mobility and there is no concern about delay, constant (non-vanishing) throughput per node can be sustained as the network scales.\nDespite the signiﬁcant amount of work on ad hoc networks, there has been very little work on ﬁle sharing and content distribution over wireless ( [2], [14]) beyond the multiple unicast trafﬁc patters introduced in [4]. Our result shows that if there is sufﬁcient content reuse, non-vanishing throughput per node can be achieved, even with constant storage and delay.\nIn our recent work [15] we empirically analyzed the optimal collaboration distance for ﬁxed number of users.\nOn a more technical note, the most surprising result is per- haps the fact that in Theorem 2, a simple distributed policy can match the optimal scaling behavior E[L] = O( n m η ). Further, for both regimes, the distributed caching policy exponent γ c should not match the request Zipf exponent γ r , something that we found quite counter intuitive.\nOverall, even if linear frequency re-use is not possible, we expect the scaling of the library m to be quite small (typically logarithmic) in the number of users n. In this case we obtain near-linear (up to logarithmic factors) growth in the number of D2D links for the full spectrum of Zipf exponents. Our results are encouraging and show that distributed caching can enable collaboration and mitigate wireless content delivery problems.\nThe ﬁrst part of the theorem is easy to see since the number of D2D links cannot exceed the number of users.\nvirtual square clusters. Figure 3(a) shows the virtual clusters in the cell. The cell side is normalized to 1 and the side of each cluster is equal to r(n) √ 2 . Thus, all users within a cluster can communicate with each other. Based on our interference model, in each cluster only one link can be activated. Thus, to prove the theorem, it is enough to show that in a constant fraction of virtual clusters, there are active D2D links that do not introduce interference to each other. This is because r(n) = Θ( 1 n ) and there are Θ(n) virtual clusters in the cell. When there is an active D2D link within a cluster, we call the cluster good. But not all good clusters can be activated simultaneously. One good cluster can at most block 16 clusters (see Figure 3(b)). The maximum interference happens when a user in the corner of a cluster transmits a ﬁle to a user in the opposite corner. So, we have E[L] ≥ E[G] 17 where E[G] is the expected number of good clusters. Since we want to ﬁnd the lower bound for E[L], we can limit users to communicate with users in virtual clusters they belong to. Therefore, we have\nwhere 2 r(n) 2 is the total number of virtual clusters. K is the number of users in the cluster, which is a binomial random variable with n trials and probability of r(n) 2 2 , i.e., K = B(n, r(n) 2 2 ). Pr[K = k] is the probability that there are k users in the cluster and Pr[good|k] is the probability that the cluster is good conditioned on k. The probability that a cluster is good depends on what users cache. Therefore,\nwhere U is a random vector of stored ﬁles by users in the clus- ter. u is a realization of U and |u| denotes the length of vector u. The ith element of u denoted by u i ∈ {1, 2, 3, . . . , m} indicates what user i in the cluster stores.\nwhere ˜ u = ∪ |u| j=1 u j and ∪ is the union operation. Actually v(u) is the sum of popularities of the union of ﬁles in u. The cluster is considered to be good if at least a user i in the cluster requests one of the ﬁles in ˜ u − {u i }. Note the possibility of self-requests , i.e., a user might ﬁnd the ﬁle it requests in its own cache; in this case clearly no D2D communication will be activated by this user. Accounting for these self-requests, the probability that user i ﬁnds its request ﬁles locally within the cluster is (v(u) − f u i ). Thus, we obtain:\nLet us only consider cases where at least one user in the cluster caches ﬁle 1 (the most popular ﬁle). Then, from (2) and (3), the following lower bound is achieved:\nwhere x = u |u| = k and 1 ∈ u . Let us further deﬁne a random variable V which is sum of popularities of the union of ﬁles stored by users in the cluster. Then, in equation (4), we can take the expectation with respect to V , i.e.,\nwhere A k 1 is the event that at least one of k users in the cluster caches ﬁle 1 and E V [.] is the expectation with respect to V .\nLet A k 1,h for 1 ≤ h ≤ k denote the event that h users out of k users in the cluster cache ﬁle 1. Then, we get:\nwhere p j represents the probability that ﬁle j is cached by a user based on Zipf distribution with exponent γ c . To calculate E V [(V − f 1 )|A k 1,h ], we deﬁne an indicator function 1 j for each ﬁle j ≥ 2. 1 j is equal to 1 if at least one user in the cluster stores ﬁle j. Hence,\nSubstituting E V [(V −f 1 )|A k 1,h ] in (5) and limiting the interval of k, we can obtain:\nwhere 0 < δ < 1 and I = [nr(n) 2 (1−δ)/2, nr(n) 2 (1+δ)/2]. Deﬁne k ∗ ∈ I such that it minimizes the expression in the last line of (6). Considering that r(n) = Θ( 1 n ), k ∗ is Θ(1). Then from (6), we have:\nwhere 0 < δ 1 < 1. We apply the Chernoff bound in (7) to de- rive (8) [16]. Since the exponent nr(n) 2 δ 2 /6 is Θ(1), we can select the constant c 1 such that the term (1 − 2e −nr(n) 2 δ 2 /6 ) becomes positive.\nLet us deﬁne h ∗ ∈ [k ∗ p 1 (1 − δ 1 ), k ∗ p 1 (1 + δ 1 )] such that it minimizes the expression in the last line of (8). From (1) and lemma 1, p 1 is Θ(1) and as a result, h ∗ is also Θ(1). Using the Chernoff bound in (8), we get:\nk ∗ − h ∗ should be greater than 1 which results in a constant lower bound for c 1 . The second exponent, i.e., k ∗ p 1 δ 2 1 /3 is Θ(1). The term (1 − 2e −k ∗ p 1 δ 2 1 /3 ) is a positive constant if\nTo show that E[G] scales linearly with n, the term m j=2 f j p j should not be vanishing as n goes to inﬁnity. It can been shown that if γ r , γ c > 1, m j=2 f j p j = Θ(1) (see lemma 1).\nLemma 1: If γ > 1, a = o(b), and a = Θ(1), then H(γ, a, b) = Θ(1) and b j=a f j p j = Θ(1) where"},"refs":[{"authors":[],"title":{"text":"http://www.cisco.com/en/us/solutions/collateral/ns341/ns525/ns537 /ns705/ns827/white paper c11-520862.html."}},{"authors":[{"name":"N. Golrezaei"},{"name":"K. Shanmugam"},{"name":"A. Dimakis"},{"name":"A. Molisch"},{"name":"G. Caire"}],"title":{"text":"Femtocaching: Wireless video content delivery through distributed caching helpers"}},{"authors":[],"title":{"text":"Wireless video content delivery through coded distributed caching"}},{"authors":[{"name":"P. Gupta"},{"name":"P. Kumar"}],"title":{"text":"The capacity of wireless networks"}},{"authors":[{"name":"M. Penros"},{"name":"O. U. Pres"}],"title":{"text":"Random geometric graphs"}},{"authors":[{"name":"M. Cha"},{"name":"H. Kwak"},{"name":"P. Rodriguez"},{"name":"Y. Ahn"},{"name":"S. Moon"}],"title":{"text":"I tube, you tube, everybody tubes: analyzing the world\u2019s largest user generated content video system"}},{"authors":[],"title":{"text":"http://traces.cs.umass.edu/index.php/network/network."}},{"authors":[{"name":"N. Golrezaei"},{"name":"A. Dimakis"},{"name":"A. Molisch"}],"title":{"text":"Asymptotic throughput of base station assisted device-to-device communications"}},{"authors":[{"name":"A. Molisc"}],"title":{"text":"Wireless communications"}},{"authors":[{"name":"E. Lawler"},{"name":"J. Lenstra"},{"name":"A. Kan"},{"name":"E. U. E. Institute"}],"title":{"text":"Generating all maximal independent sets: Np-hardness and polynomial-time algo- rithms"}},{"authors":[{"name":"A. Ozgur"},{"name":"O. L´evˆeque"},{"name":"D. Tse"}],"title":{"text":"Hierarchical cooperation achieves linear capacity scaling in ad hoc networks"}},{"authors":[{"name":"M. Grossglauser"},{"name":"D. Tse"}],"title":{"text":"Mobility increases the capacity of ad- hoc wireless networks"}},{"authors":[{"name":"M. Franceschetti"},{"name":"M. Migliore"},{"name":"P. Minero"}],"title":{"text":"The capacity of wire- less networks: information-theoretic and physical limits"}},{"authors":[{"name":"Y. Chen"},{"name":"C. Caramanis"},{"name":"S. Shakkottai"}],"title":{"text":"On ﬁle sharing over a wireless social network"}},{"authors":[{"name":"N. Golrezaei"},{"name":"A. Molisch"},{"name":"A. Dimakis"}],"title":{"text":"Base station assisted device- to-device communications for high-throughput wireless video networks"}},{"authors":[{"name":"H. Chernoff"}],"title":{"text":"A measure of asymptotic efﬁciency for tests of a hypoth- esis based on the sum of observations"}},{"authors":[{"name":"J. Conrey"}],"title":{"text":"The riemann hypothesis"}}]},"file":{"jsonClass":"File","file":"/home/arnfred/Code/trailhead/resources/isit2012/1569566649.pdf"},"links":[{"id":"1569566381","weight":2},{"id":"1569564889","weight":2},{"id":"1569566385","weight":5},{"id":"1569565067","weight":2},{"id":"1569559665","weight":2},{"id":"1569564669","weight":8},{"id":"1569566875","weight":2},{"id":"1569566683","weight":2},{"id":"1569559259","weight":5},{"id":"1569566597","weight":2},{"id":"1569566761","weight":2},{"id":"1569565495","weight":5},{"id":"1569564481","weight":2},{"id":"1569565613","weight":2},{"id":"1569564897","weight":2},{"id":"1569559541","weight":2},{"id":"1569566319","weight":2},{"id":"1569566941","weight":2},{"id":"1569558459","weight":2},{"id":"1569564203","weight":5},{"id":"1569556713","weight":5},{"id":"1569562685","weight":2},{"id":"1569566157","weight":2},{"id":"1569566843","weight":5},{"id":"1569565455","weight":8},{"id":"1569566795","weight":2},{"id":"1569551763","weight":2},{"id":"1569565953","weight":2},{"id":"1569566895","weight":2},{"id":"1569566749","weight":2},{"id":"1569564647","weight":2},{"id":"1569564311","weight":2},{"id":"1569566679","weight":5},{"id":"1569566733","weight":2},{"id":"1569566759","weight":2},{"id":"1569559995","weight":2},{"id":"1569565213","weight":2},{"id":"1569566511","weight":2},{"id":"1569565841","weight":5},{"id":"1569566531","weight":11},{"id":"1569564611","weight":2},{"id":"1569566811","weight":2},{"id":"1569566687","weight":2},{"id":"1569566403","weight":2},{"id":"1569566231","weight":5},{"id":"1569566513","weight":2},{"id":"1569554881","weight":5},{"id":"1569562821","weight":2},{"id":"1569565559","weight":2},{"id":"1569566473","weight":2},{"id":"1569564857","weight":2},{"id":"1569565929","weight":2},{"id":"1569558509","weight":2},{"id":"1569565185","weight":2},{"id":"1569566553","weight":2},{"id":"1569562207","weight":2},{"id":"1569566191","weight":2},{"id":"1569567029","weight":2},{"id":"1569566695","weight":2},{"id":"1569555787","weight":2},{"id":"1569565739","weight":2},{"id":"1569566667","weight":5},{"id":"1569560997","weight":2},{"id":"1569566407","weight":2},{"id":"1569560349","weight":2},{"id":"1569565741","weight":2},{"id":"1569566481","weight":2},{"id":"1569566857","weight":5},{"id":"1569566387","weight":2},{"id":"1569566949","weight":2},{"id":"1569563395","weight":2},{"id":"1569566383","weight":2},{"id":"1569566929","weight":2},{"id":"1569565549","weight":2},{"id":"1569566983","weight":5},{"id":"1569566097","weight":2},{"id":"1569557275","weight":5},{"id":"1569566129","weight":2},{"id":"1569565575","weight":2},{"id":"1569565661","weight":2},{"id":"1569566887","weight":2},{"id":"1569566691","weight":2},{"id":"1569566651","weight":2},{"id":"1569566823","weight":2},{"id":"1569566137","weight":2},{"id":"1569565013","weight":2},{"id":"1569565829","weight":2},{"id":"1569565375","weight":8},{"id":"1569566713","weight":2},{"id":"1569566641","weight":2},{"id":"1569564437","weight":2},{"id":"1569564861","weight":2},{"id":"1569561185","weight":2},{"id":"1569565669","weight":2},{"id":"1569560235","weight":2},{"id":"1569564157","weight":2},{"id":"1569566389","weight":2},{"id":"1569567483","weight":5},{"id":"1569566911","weight":8},{"id":"1569565367","weight":2},{"id":"1569566299","weight":2},{"id":"1569565769","weight":2},{"id":"1569565561","weight":2},{"id":"1569566847","weight":2},{"id":"1569566583","weight":2},{"id":"1569566555","weight":2},{"id":"1569566987","weight":2},{"id":"1569564419","weight":2},{"id":"1569566067","weight":5},{"id":"1569564807","weight":2},{"id":"1569566609","weight":2}],"meta":{"jsonClass":"HashMap$HashTrieMap","sessionid":"S16.T1.5","endtime":"13:10","authors":"Negin Golrezaei, Alex Dimakis, Andreas Molisch","date":"1341579000000","papertitle":"Wireless Device-to-Device Communications with Distributed Caching","starttime":"12:50","session":"S16.T1: Coded Storage and Caching","room":"Kresge Rehearsal B (030)","paperid":"1569566649"},"cluster":{"jsonClass":"Map$EmptyMap$"}}
