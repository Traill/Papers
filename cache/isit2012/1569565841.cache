{"id":"1569565841","paper":{"title":{"text":"Broadcasting Private Messages Securely"},"authors":[{"name":"László Czap"},{"name":"Vinod M. Prabhakaran"},{"name":"Suhas Diggavi"},{"name":"Christina Fragouli"}],"abstr":{"text":"Abstract\u2014Consider a source, Alice, broadcasting private mes- sages to multiple receivers through a broadcast erasure channel; users send back to Alice public feedback that she causally uses to decide the coding strategy for her following transmissions. Recently, the multiple unicast capacity region for this problem has been exactly characterized for a number of special cases; namely the 2-user, 3-user, symmetric K-user, and one-sidedly fair K-user [1], [2].\nIn this paper, we show that for all the cases where such characterizations exist, we can also optimally characterize the \u201csecure\u201d communication rates, where the message that Alice transmits to each user is information theoretically secure from the other users, even if these collude. We show that a simple, two-phase strategy, where appropriate amounts of secret keys are ﬁrst generated and then consumed, matches a new outer bound we derive."},"body":{"text":"Wireless communication channels are easier to eavesdrop and harder to secure \u2013 even towards unintentional eavesdrop- pers. As an example consider a sender, Alice, who wants to send private messages to multiple (say three) receivers, Bob, Calvin and David, within her transmission radius, and assume public feedback from the receivers to Alice. When Alice broadcasts a message W 1 intended for Bob, Calvin and David should also try to overhear, as the side information they possibly collect can enable Alice to make her following broadcast transmissions more efﬁcient; but then, this collected side information would allow Calvin and David to learn parts of Bob\u2019s message. Even worse, Calvin and David could try to put together the parts they overheard, to extract increased information about Bob\u2019s message. Can we, in such a setting, keep the message for each user information theoretically se- cure from the other users, even if these collaborate? Moreover, can we do so, when the users can only communicate through shared wireless broadcast channels?\nIn this paper we answer these questions when communica- tion happens through broadcast erasure channels. We exactly characterize the capacity region in all the cases where the problem has been solved with no security constraints, namely, the 2-user, 3-user, symmetric K-user, and one-sidedly fair K- user [2]. For each such case, we present a new outer bound and a simple achievability scheme that matches it.\nOur achievability scheme has two phases, a key-generation and a key-consumption phase. We ﬁrst create, using the erasure channel properties, a common key between Alice and each user, that is secure from the remaining users (even if they collude). Key generation comes at cost since it occupies the wireless channel without actually conveying information; we thus need to calculate how much key we need, and efﬁ- ciently create it (we construct the key using similar techniques proposed in our earlier work [3], [4]). How much key we need depends on how we use it. A straightforward approach would be to use each secret key as a one-time pad; this is too pessimistic. Indeed, assume Alice transmits information to Bob: Calvin and David (jointly) are going to receive only a fraction of the packets intended for Bob and thus we only need to create an amount of key that allows protection of this fraction. This is exactly what the scheme we propose does.\n\u2022 we design a simple two phase protocol, that generates and consumes keys;\n\u2022 we derive an outer bound that explicitly mirrors the balance between key generation and key consumption, and show that our achievability scheme matches it for all the cases where the communication problem is solved without security requirements;\n\u2022 as a side result, we provide an alternative proof for the outer bound of the non-secure communication problem.\nSecure transmission of messages using noisy channel prop- erties was pioneered by Wyner [5], who characterized the secret message capacity of wiretap channels. This led to a long sequence of research on information-theoretic security on various generalizations of the wiretap channel [6], [7]. Notably, when the eavesdropper and legitimate channel are statistically identical, then the wiretap framework yields no security. The fact that feedback can give security even in this case was ﬁrst observed for secret key agreement by Maurer [8] and further developed by Ahlswede-Csiszár [9] \u2013 but secure key agreement is not the same as secure transmission of speciﬁc messages. The wiretap channel with secure feedback and its variants for message security have been studied in [10], [11], [12]; some conclusive results are developed in special cases when there is a secure feedback inaccessible to the eavesdropper. Security of private message broadcasting with- out feedback has been studied in [13], where some conclusive results have been established. As mentioned earlier, the use\nof feedback and broadcast for private message transmission, without security requirements has been studied in [14], [15]. We believe that ours are the ﬁrst conclusive results that use insecure (and very limited) feedback for information-theoretic security of multiple private messages.\nA sender, Alice, wants to send private messages to a set of K receivers: she wants to send message W i to receiver i, so that, no other receiver learns W i , even if all other receivers collude. For simplicity, we describe our system for the case of three receivers, which we will refer to as Bob, Calvin and David, respectively, but the model extends to K receivers.\na) Communication model: Communication takes place over a 1-to-3 broadcast erasure channel, with input at Alice and an output each at Bob, Calvin, and David. The channel input alphabet consists of all possible vectors of length L over a ﬁnite ﬁeld F q . For convenience, we usually call each such vector a packet. We denote by X i the ith transmission over the channel, and by Y 1,i , Y 2,i , Y 3,i the corresponding outputs observed by Bob, Calvin and David. We use X n to denote the vector (X 1 , X 2 , . . . , X n ) and we use a similar notation for other vectors as well. The broadcast channel is made up of three independent component erasure channels with erasure probabilities δ 1 , δ 2 , δ 3 :\nj , \t Y j =⊥, where ⊥ is the symbol of an erasure.\nFurther, we assume that the (erasure) state S i of the channel during the ith transmission (i.e., which receivers experienced erasures) is strictly causally available to all parties; we use when needed the notation S i = CD to denote that Calvin and David have correctly received X i , while Bob experienced an erasure, and similarly for the other cases.\nb) Reliability and security: The messages W 1 , W 2 and W 3 are deﬁned as vectors of length N 1 , N 2 and N 3 over pack- ets. We assume that messages are independent and uniformly distributed over their respective message space. Beside the messages, Alice may also generate some private randomness, which we denote Θ A .\nDeﬁnition 1. A rate tuple (R 1 , R 2 , R 3 ) ∈ R 3 + is achievable over the 1-to-3 broadcast channel deﬁned above, if for any ǫ > 0 and a sufﬁciently large n there exist encoding maps f i (·), and decoding maps φ 1 (·), φ 2 (·), φ 3 (·) such that\nX i = f i (W 1 , W 2 , W 3 , S i−1 , Θ A ), i = 1 . . . n \t (1) Pr φ j (Y n j S n ) = W j < ǫ, ∀j ∈ {1, 2, 3} (2)\nDeﬁnition 2. The rate tuple (R 1 , R 2 , R 3 ) ∈ R 3 + is securely achievable, if beside (1)-(3)\nI (W 1 ; Y n 2 Y n 3 S n ) < ǫ \t (4) I (W 2 ; Y n 1 Y n 3 S n ) < ǫ \t (5) I (W 3 ; Y n 1 Y n 2 S n ) < ǫ \t (6)\nDeﬁnition 3. The secrecy capacity region of the 1-to-3 broad- cast erasure channel with state-feedback is the set of all securely achievable rate tuples as described in Deﬁnition 2.\nOur main result is the characterization of the secrecy capacity region for sending private messages to K receivers over a broadcast erasure channel, for all the cases where the capacity without secrecy constraints has been characterized, namely, the 2-user, 3-user, symmetric K-user and one-sidedly fair K-user (for exact deﬁnitions see [2]).\nOur ﬁrst result, provided in Section V-A, is a new alternative converse proof for the following known theorem [2], [1], which characterizes the capacity region in the case of non- secure communication.\nTheorem 1. Any achievable rate tuple (R 1 , R 2 , R 3 ) ∈ R 3 + as deﬁned in Deﬁnition 1 satisﬁes\nwhere the maximization is over all permutations π of {1, 2, 3}, and π i denotes the ith element in the permutation.\nWe build on this to characterize the capacity region in the case of secure communication.\nTheorem 2. A rate tuple (R 1 , R 2 , R 3 ) ∈ R 3 + falls into the se- crecy capacity region of the 1-to-3 broadcast erasure channel with state-feedback as deﬁned in Deﬁnition 3 if and only if\nis satisﬁed, where the latter maximum is taken over all possible permutations.\nThe ﬁrst term in (8) captures the key generation phase while the second term, which is the same as the left-hand side of (7), the encrypted transmission phase. To prove this theorem we provide in Section IV a scheme that achieves any rate tuple in the region deﬁned by (8), and in Section V a matching outer bound.\nFor all cases where we have a non-secure capacity achieving scheme as in Theorem 1, we also have a matching secure capacity characterization using similar techniques to those in Theorem 2. This is the case for K = 2, if the channel param- eter δ i is the same for every receiver (symmetric channel) or when the rate vector is one-sidedly fair [2]. In the remaining of the paper we focus on the K = 3 case, but indicatively, we state the following result without proof.\nTheorem 3. For a symmetric channel or for a one-sidedly fair rate tuple (R 1 , . . . , R K ) ∈ R K + , the secrecy capacity region of the 1-to-K broadcast erasure channel with state-feedback is characterized by the following inequality:\n) (1 − δ j ) K k=1 δ k δ\nwhere the second maximization is over all permutations π of {1, . . . , K}.\nWe ﬁrst give a slightly modiﬁed version of the non-secure capacity achieving scheme in [2], that we will use as a building block.\nStep (a) Alice repeats each message packet W 1,1 , . . . , W 1,N 1 , W 2,1 , . . . , W 2,N 2 and W 3,1 , . . . , W 3,N 3 until at least one of the three receivers correctly receives it.\nStep (b) Alice sends linear combinations of the packets that are not received by their intended receiver in Step (a).\nA key contribution of [2] is in specifying how to construct the linear combinations in Step (b) \u2013 we refer the reader to [2] for the exact constructions, and highlight here the two important properties we rely on:\n\u2022 A message packet successfully delivered to its intended receiver in Step (a) is never used in Step (b).\n\u2022 The scheme achieves any rate point within the region in (7).\n1) Key generation. We create three different keys, each key shared between Alice and one receiver, and perfectly secure from the remaining two receivers even if they collude.\n2) Encrypted broadcast. Using the keys set up in the ﬁrst phase, we employ an encrypted version of the non- secure 1-to-3 broadcast scheme described.\nTo describe each phase in detail, we deﬁne a few parameters. The length of the secret keys we aim to set up for the receivers\n(expressed in terms of packets) are k 1 , k 2 and k 3 , and the length of Phase 1 in terms of transmissions is n 1 . We deﬁne\nLet K B denote the key between Alice and Bob, and similarly for K C and K D .\nAlice transmits n 1 random packets X 1 , . . . , X n 1 generated uniformly at random over F L q . K B is the vector of the ﬁrst k 1 packets X i for which S i = B. If there are less than k 1 such packets, we stop and declare an error. Similarly, key K C (and K D ) are created using the ﬁrst k 2 (k 3 ) packets for which S i = C (S i = D), or an error is declared whenever there are too few such packets. In other words, Alice transmits random packets, and we treat a packet received by only one receiver as a shared secret between Alice and that receiver.\nWe now follow the two transmission steps in the non-secure protocol IV-A, with the following modiﬁcations: in Step (a), we encrypt the message packets using key packets as we specify in the following; in Step (b), we simply reuse the already encrypted packets from Step (a) to create the required linear combinations \u2013 we do not use additional key packets.\nStep (2.a): Before transmitting each message packet to receiver i, Alice encrypts it by XOR-ing it with a key packet that has either not been used for encryption in the past, or if used, none of the other users received the corresponding transmitted packet.\nConsider the transmissions to Bob. Initially Alice encrypts Bob\u2019s ﬁrst packet as W 1,1 ⊕ K B,1 and transmits it until it is received by at least one of the receivers. If only Bob receives this encrypted packet, she reuses the same key packet K B,1 to encrypt the next message packet. Subsequently, if for some i and j < N 1 , k < k 1 : X i = W \u2032 1,j = W 1,j ⊕ K B,k , then\n  \nW \u2032 1,j+1 = W 1,j+1 ⊕ K B,k , \t if S i = B W \u2032 1,j+1 = W 1,j+1 ⊕ K B,k+1 , otherwise.\nIn other words, a key is reused until a packet encrypted using it is received by either Calvin and David. We declare an error if the k 1 key packets are not sufﬁcient to encrypt all the N 1 message packets of W 1 . Similarly for the other keys and messages.\nStep (2.b): At the end of Step (2.a), Bob, Calvin and David have received as side information encrypted packets that are not intended for them; we use the same encoding as in Step (b) of the non-secure protocol IV-A to deliver these packets to their intended receivers.\nCondition (1) is clearly satisﬁed by our scheme. We show the other required properties for Bob; the same arguments apply to Calvin and David.\nWe ﬁrst argue that our scheme satisﬁes (4). From construc- tion, we create at the end of Phase 1 a key K B with\nIn Step (2.a), every packet W \u2032 1,j that Calvin and/or David receive has been encrypted using a different key packet K B,i ; these key packets, from (9), are secret from Calvin and David. Thus the packets received by Calvin and David are one- time-pad encrypted and perfectly secret to them, even if they collude. In Step (2.b), Alice transmits linear combinations of packets W \u2032 1,j that have not been received by Bob, but have already been received either by Calvin and/or David \u2013 thus, assuming these receivers collude, they do not receive any innovative W \u2032 1,j . This concludes our argument.\nWe next prove (2). Trivially, if no error is declared, Bob can retrieve W 1 from W \u2032 1 using his key K B . We next show that the probability of declaring an error can be made arbitrarily small. It is enough to consider the following two error events since the other error events are similar: (i) we do not obtain k 1 key packets for Bob in Phase 1, and (ii) k 1 key packets are not sufﬁcient in Step (2.a).\n(i) Denote by κ the number of packets in Phase 1 that are received only by Bob. Then, κ is the sum of n 1 i.i.d. Bernoulli variables drawn from Ber(p), where p = (1 − δ 1 )δ 2 δ 3 . Thus,\nfor some constant c > 0. The last inequality follows from the Chernoff-Hoeffding bound. Selecting N 1 sufﬁciently large, this error probability can be made arbitrarily small.\n(ii) is similar, it occurs if the number of packets that only Bob receives is signiﬁcantly less than its expected value, and the same technique applies.\nWith this we have shown that the scheme satisﬁes (1)- (6). A straightforward calculation with the given parameters together with the capacity achieving property of the second phase shows that our proposed schemes achieves any rate tuple within the region given by (8), which concludes the proof of achievability of Theorem 2.\nWe show that the above scheme is optimal in terms of the securely achieved rates by giving a matching outer bound on the achievable rates that holds for any scheme.\nTheorem 4. Any securely achievable rate tuple (R 1 , R 2 , R 3 ) ∈ R 3 + as deﬁned in Deﬁnition 2 satisﬁes\n1 − δ π 1 δ π 2 δ π 3 ≤ L log q (10) holds, which implies the statement of the theorem. Also, to avoid cumbersome notation we show (10) for j = 1 and π = (1, 2, 3). With simple relabeling, the same argument holds for any j and π.\n+ I(X i ; Y i−1 2 |Y i−1 1 S i−1 ) \t (12) + I(X i ; Y i−1 3 |Y i−1 1 Y i−1 2 S i−1 ) \t (13) + I(X i ; W 1 W 2 W 3 |Y i−1 1 Y i−1 2 Y i−1 3 S i−1 ) \t (14)\nIn the following Lemmas 1-4 we give bounds on each of the terms (11)-(14). Combining these results together gives (10) and in turn the statement of the theorem. For the detailed proofs of our lemmas we refer to the extended version of this paper [16].\nProof: It is sufﬁcient to prove the inequality for π = (1, 2, 3). By relabeling, the same argument holds for any π. By repeating the ﬁrst steps of the proof of Theorem 4 and bounding term (11) with 0, we have\nLemmas 2-4 give bounds on terms (15)-(17) respectively. Combining these gives the stated inequality.\nE 7 is an error constant speciﬁed in Lemma 7.\nProof: The statement of the lemma follows from com- bining the results of Lemma 5 and Lemma 7.\nLemma 4. From conditions (1)-(3) it follows that n (R 1 + R 2 + R 3 )\nIn our security model we assume honest-but-curious adver- saries. This means that the security of our scheme relies on the honest feedback from every party. Related relevant problems are when the adversary is a passive eavesdropper and does not give any feedback, or when the feedback she gives can be dishonest. Interestingly enough, in the case of one or two parties the capacity region does not change compared to the honest-but-curious adversary. These problems are addressed in [4], [17], however their generalization for more than two parties is not trivial."},"refs":[{"authors":[{"name":"M. Gatzianas"},{"name":"L. Georgiadis"},{"name":"L. Tassiulas"}],"title":{"text":"Multiuser broadcast erasure channel with feedback-capacity and algorithms"}},{"authors":[{"name":"C. Wang"}],"title":{"text":"Capacity of 1-to-k broadcast packet erasure channels with channel output feedback"}},{"authors":[{"name":"M. Jafari Siavoshani"},{"name":"S. Diggavi"},{"name":"C. Fragouli"},{"name":"U. K. Pulleti"},{"name":"K. Ar- gyraki"}],"title":{"text":"Group secret key generation over broadcast erasure channels"}},{"authors":[{"name":"L. Czap"},{"name":"V. Prabhakaran"},{"name":"C. Fragouli"},{"name":"S. Diggavi"}],"title":{"text":"Secret message capacity of erasure broadcast channels with feedback"}},{"authors":[{"name":"A. D. Wyner"}],"title":{"text":"The wire-tap channel"}},{"authors":[{"name":"I. Csiszár"},{"name":"J. Körner"}],"title":{"text":"Broadcast channels with conﬁdential mes- sages"}},{"authors":[{"name":"Y. Liang"},{"name":"H. V. Poor"},{"name":"S. Shamai"}],"title":{"text":"Information theoretic security."}},{"authors":[{"name":"U. Maurer"}],"title":{"text":"Secret key agreement by public discussion from common information"}},{"authors":[{"name":"R. Ahlswede"},{"name":"I. Csiszár"}],"title":{"text":"Common randomness in information theory and cryptography - I: Secret sharing"}},{"authors":[{"name":"R. Ahlswed"},{"name":"N. Ca"},{"name":"S. Springe"}],"title":{"text":"Transmission, Identiﬁcation and Common Randomness Capacities for Wire-Tape Channels with Secure Feedback from the Decoder"}},{"authors":[{"name":"L. Lai"},{"name":"H. E. Gamal"},{"name":"H. Poor"}],"title":{"text":"The wiretap channel with feedback: Encryption over the channel"}},{"authors":[{"name":"E. Ardestanizadeh"},{"name":"M. Franceschetti"},{"name":"T. Javidi"},{"name":"Y. Kim"}],"title":{"text":"Wiretap channel with secure rate-limited feedback"}},{"authors":[{"name":"H. D. Ly"},{"name":"T. Liu"},{"name":"Y. Liang"}],"title":{"text":"Multiple-Input Multiple-Output Gaus- sian broadcast channels with common and conﬁdential messages."}},{"authors":[{"name":"L. Georgiadis"},{"name":"L. Tassiulas"}],"title":{"text":"Broadcast erasure channel with feedback-capacity and algorithms"}},{"authors":[{"name":"M. Maddah-Ali"},{"name":"D. Tse"}],"title":{"text":"Completely stale transmitter channel state information is still very useful"}},{"authors":[{"name":"L. Czap"},{"name":"V. Prabhakaran"},{"name":"S. Diggavi"},{"name":"C. Fragouli"}],"title":{"text":"Broadcasting private messages securely."}},{"authors":[{"name":"L. Czap"},{"name":"V. M. Prabhakaran"},{"name":"S. Diggavi"},{"name":"C. Fragouli"}],"title":{"text":"Secure capacity region for erasure broadcast channels with feedback"}}]},"file":{"jsonClass":"File","file":"/home/arnfred/Code/trailhead/resources/isit2012/1569565841.pdf"},"links":[],"meta":{"jsonClass":"HashMap$HashTrieMap","sessionid":"S3.T4.1","endtime":"15:00","authors":"László Czap, Vinod M Prabhakaran, Suhas Diggavi, Christina Fragouli","date":"1341240000000","papertitle":"Broadcasting Private Messages Securely","starttime":"14:40","session":"S3.T4: Secure Communications","room":"Stratton 20 Chimneys (306)","paperid":"1569565841"},"cluster":{"jsonClass":"Map$EmptyMap$"}}
