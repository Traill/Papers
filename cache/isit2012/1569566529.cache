{"id":"1569566529","paper":{"title":{"text":"Properties of Network Polynomials"},"authors":[{"name":"Javad B. Ebrahimi"},{"name":"Christina Fragouli"}],"abstr":{"text":"Abstract\u2014It is well known that transfer polynomials play an important role in the network code design problem. In this paper we provide a graph theoretical description of the terms of such polynomials. We consider acyclic networks with arbitrary number of receivers and min-cut h between each source-receiver pair. We show that the associated polynomial can be described in terms of certain subgraphs of the network. 1"},"body":{"text":"It is well known in the network coding literature that the problem of designing a linear network code that allows to multicast information from a source to a set of receivers over a speciﬁc network, can be reduced to the problem of assigning values to variables so that a multivariate polynomial becomes nonzero [2], [4]. Thus, inherently, each linear network coding instance over a network is mapped to a polynomial, which we will call network polynomial.\nIn this paper we try to understand how the structure of these polynomials relates to the underlying network graph. We show that every monomial of the network polynomial is associated with a subgraph of the network with certain properties. For example, for networks with one receiver we show that there is, in fact, a bijection between the monomials of the network polynomial and sets of edge-disjoint paths.\nNetwork polynomials play a signiﬁcant role in network code design. In the seminal paper [2] it was shown that the existence of a network code over a graph relates to the roots of such polynomials. The size of the network coding alphabet used also depends on algebraic properties of such polynomials [5], [6]. These polynomials arise not only in graphs, but also in deterministic networks [1], [3], [5].In this paper as well, we provide a new method that relates alphabet size and code construction for special classes of networks to polynomial structure and properties. Thus we believe that studying properties of such polynomials is interesting, not only from a theoretical point of view, but also because of possible applications.\nThe rest of this paper is organized as follows. Section II re- views the algebraic framework, using a line-graph perspective; Section III looks at transfer polynomials of a single receiver;\nSection IV looks at multiple receivers; Section V presents a speciﬁc application and Section VI concludes the paper.\nIn this section we describe the network model, and brieﬂy review known results from [2], [4] from a line graph perspec- tive; we use similar notation to [4].\na) Setup: We consider a directed acyclic graph G = (V, E), where a source S would like to multicast information to N receivers R 1 , . . ., R N . We use the terms \u201cgraph\u201d and \u201cnetwork\u201d interchangeably. We are interested in scalar linear coding over a ﬁnite ﬁeld F q , i.e., the source has h symbols {u 1 , . . . , u h } that she would like to send to all receivers, and intermediate network nodes are allowed to linearly combine their incoming symbols using coefﬁcients from the ﬁeld F q . The min-cut from the source to each receiver is greater or equal to h, i.e., there exist h edge-disjoint paths from the source to each receiver.\nb) Line Graph: Unless otherwise speciﬁed, in this paper we will work with the line graph of the original network. Given a graph G = (V, E), the associated line graph is deﬁned as the graph H = (V L , E L ) whose vertex set V L is the same as the edge set of the graph G, i.e., V L = E. Two vertices e, e \u2032 ∈ V L are connected by an arc if and only if the starting point(head) of e \u2032 is the same as the ending point(tail) of e in the graph G.\nWithout loss of generality, we can assume that H has h nodes, known as source nodes [4], each of which has a symbol u i from a ﬁnite ﬁeld F q to send to each receiver. Each receiver has also h associated receiver nodes, through which it receives information from the network. In the original graph G, the h source nodes in H can be thought of as h auxiliary edges, entering the source node and each bringing one of the symbols u i ; the h receivers nodes in H correspond in G to h incoming edges each receiver has.\nNote that in the graph H, for each receiver, there exist h vertex disjoint paths, where each path starts from one source node and ends at one of the receiver nodes; these correspond to the h edge-disjoint paths from the source to the receiver that exist in G. We will come back to these paths in Section IV. Also note that if G is directed and acyclic, so is H [4].\nDeﬁnition 2.1 (h-minimal graph): A graph L is called h- minimal with respect to a source S and a set of receivers if\nthe min-cut from S to each of the receivers is at least h and no proper subgraph of L has this property.\nc) Transfer and Network Polynomial: In linear network coding over F q , intermediate nodes in the network G linearly combine their received information using coding coefﬁcient {x k } from the ﬁeld F q . These coefﬁcients are the unknown variables in the algebraic formulation of the network code design problem. In the line graph notation, we have one variable x i associated with each edge of the graph H; thus we have ν ≜ |E L | such variables.\nLet X ∈ F h q be a vector that collects the source symbols {u 1 , . . . , u h }, and Y ∈ F h q a vector that collects the symbols receiver i observes, then Y = A(R)X where A(R) is the h ×h transfer matrix from the source to the receiver R [2], [4]. The transfer matrix can be efﬁciently calculated, and captures the linear transformation that the network operations impose on the sent source symbols.\nDeﬁnition 2.2: The transfer polynomial p i for a receiver R i is deﬁned as\nDeﬁnition 2.3: The network polynomial p associated with a multicast network coding instance is the product of the transfer polynomials of all receivers, i.e.,\nd) Network Code Design: In the framework we discuss, the network code design problem asks to ﬁnd an assignment of values to the unknown variables {x i } so that the network polynomial evaluates to a nonzero value. Indeed, in this case, the transfer polynomial to each receiver evaluates to a nonzero value; the transfer matrix to each receiver is full rank; and thus each receiver can invert the transfer matrix and decode the source symbols. It is well known (see for example [2]) that such an assignment is always possible provided that the ﬁeld size is larger than the number of receivers.\nWe now focus on a single receiver R i . For simplicity, we will use A and p (instead of A(R i ) and p i ) for the transfer matrix and the transfer polynomial, respectively.\nWe will work with the line graph of the original network; thus, as mentioned in Section II, we assume that we have a set S = {s 1 , s 2 , . . . , s h } of h source nodes with in-degree 0 and a set R = {r 1 , r 2 , . . . , r h } of h receiver nodes. We also assume that there are h vertex disjoint paths from the elements of S to the elements of R.\nAs we discussed earlier, with every edge e ∈ E of the line graph we have an associated variable x e ; thus with every path P = e i 1 , e i 2 , . . . , e i k we can associate the monomial\nLet P (i,j) denote the set of all (s i , r j ) paths, i.e., all paths that connect source node s i to receiver node r j . We then deﬁne\nIt is well known (and straightforward) that the entry (i, j) of the transfer matrix A is nothing but the polynomial f (i,j) .\nWe now deﬁne some new notation that will be useful in stating our results. Consider a permutation π of the set {1, 2, . . . , h} and denote π(i) the i-th element in the particular permutation (recall there are h! possible permutations).\nDeﬁnition 3.1 (PQM): A Perfect Quasi-Matching (PQM) is a set of h paths in which each path starts from a different node s i and ends at a different node r π(i) , for some permutation π, so that no two paths have the same starting or ending node. The (sgn) of a PQM is deﬁned as the sign of π.\nDeﬁnition 3.2 (DPQM): A PQM is called Disjoint PQM (DPQM), if the h paths are vertex-disjoint.\nA DPQM corresponds to a set of edge-disjoint paths in the original graph.\nOur ﬁrst result says that each monomial appearing in the transfer polynomial corresponds to a DPQM. In partic- ular, each monomial is of the form f (P 1 ) . . . f (P h ) where P 1 , . . . , P h are paths corresponding to a DPQM (i.e., edge- disjoint paths in the original graph). More formally:\nin which the ﬁrst summation is taken over all permutations π and the second summation is taken over all DPQMs.\nThus, one alternative way of ﬁnding the transfer polynomial, would be to ﬁnd all DPQMs in the network, and sum the corresponding terms. Reversely, if we were given the transfer polynomial, simply by counting the monomials it has, we can learn how many DPQM\u2019s the network has towards this receiver; and we can identify for example intersection of DPQM\u2019s by identifying their common variables. Next we give an example, and then we prove Theorem 3.1.\nExample 3.1: In the line network depicted in Figure. 1, the min-cut from the source to the receiver is two, the nodes v 1 , v 2 are the source nodes that bring the two source symbols, and the nodes v 10 , v 11 are the receiver nodes that the receiver observes. Let x i \u2019s be the variables associated with the edges of the network of Figure 1, as shown in that Figure. The transfer polynomial is:\nExample 3.2: Let G be the network in Figure 2. For every receiver, there are exactly two different set of disjoint PQM\u2019s. The transfer polynomial of the ﬁrst receiver (the lowest re- ceiver in Figure 2) is equal to x 1 y 3 a 1 a 3 p 1 q 1 −x 3 y 1 a 1 a 3 p 1 q 1 = a 1 a 3 p 1 q 1 (x 1 y 3 − x 3 y 1 ).\nWe start from the following lemma, which states that the only terms that can possibly appear as monomials in the transfer polynomial are of the form f (P 1 ) . . . f (P h ) where P 1 , . . . , P h are paths corresponding to a PQM.\nProof: The proof is straightforward and follows from expanding the determinant of the transfer matrix A(G).\nNext, we need to prove that in fact only the terms corre- sponding to disjoint paths (that form a DPQM) will appear in the transfer polynomial; all other terms will cancel out. For this proof, we need to introduce ﬁrst some notation.\nLet V be a partial order on the set of vertices of H such that v V v \u2032 if and only if there exists a directed path from v to v \u2032 . This partial order can be extended to a total order on the set V . For simplicity, we use the same notation V for the total order. Similarly, we can deﬁne the total order E for the set of edges of G.\nWe can also deﬁne a partial order P on the set of source- receiver simple paths as follows. P 1 P P 2 if s 1 V s 2 in which s i is the starting point of the path P i for i = 1, 2.\nLet P 1 , P 2 be two source-receiver paths with different end points. We say that P 1 , P 2 are crossing paths if they share a common vertex. If P 1 , P 2 are crossing path and v is a common vertex of P 1 , P 2 , we say (v, {P 1 , P 2 }) is a crossing pattern. Suppose that (v, {P 1 , P 2 }) is a crossing pattern and assume that P i = Q i Q \u2032 i for i = 1, 2 in which P i is an (s i , r i ) path, Q i is an (s i , v) path and Q \u2032 i is an (v, r i ) path. By the dual of (v, {P 1 , P 2 }) pattern we refer to the crossing pattern (v, {Q 1 Q \u2032 2 , Q 2 Q \u2032 1 }). It is easy to observe that Q 1 Q \u2032 2\nand Q 2 Q \u2032 1 are source-receiver paths that intersect at v and also it can be easily checked that the dual of the pattern (v, {Q 1 Q \u2032 2 , Q 2 Q \u2032 1 }) is (v, {P 1 , P 2 }). Furthermore, it is easy to see that the dual of each pattern can not be identical as the pattern.\nf (P i ) cancel each other when the paths P i are not pairwise vertex disjoint. We will show that we can pair up all the crossing PQM\u2019s into pairs so that both PQM\u2019s in a pair use the same set of edges but have opposite sgn\u2019s. As a result, their corresponding terms in the expansion of P (G) will cancel each other.\nWe deﬁne the dual of a crossing PQM P = {P 1 , P 2 , . . . , P h } as follows. Let C = {v 1 , v 2 , . . . , v k } ⊂ V\nbe the set of all the vertices of the network that belong to more than one of the paths P i , i = 1, . . . , h. Let v 1 be the minimum of the elements of C with respect to the order V . Let P 1 , P 2 , . . . , P l , l ≥ 2 be all the elements of P which pass trough v 1 . Also, assume that P 1 , P 2 are the smallest elements of P 1 , P 2 , . . . , P l with respect to the order P . Clearly (v 1 , {P 1 , P 2 }) is a crossing pattern. Let v 1 , {Q 1 , A 2 } be the dual of this pattern. Now, we deﬁne the dual of P to be the following PQM:\nIn Figure 2, let P 1 = v 1 v 4 v 10 and P 2 = v 2 v 4 v 9 v 8 v 11 . Then (v 4 , {P 1 , p 2 }) is a crossing pattern.\nThe only nontrivial parts of the above are the last two parts. For the part (4), notice that the end points of the paths of P \u2032 are matched the same way as the endpoints of the paths in P with one exception for the endpoints of the paths P 1 , P 2 and Q 1 , Q 2 which are matched differently.\nTo see the last part, notice that if v 1 is the smallest crossing point of P, it is also the smallest crossing point of P \u2032 . Also, since P 1 , P 2 are the two smallest elements of P and Q 1 , Q 2 have the same set of the starting points as of P 1 , P 2 , by deﬁnition of P , Q 1 , Q 2 are the two smallest elements of P \u2032 . This means that the dual of the dual of a crossing pattern is the original pattern. Therefore, the dual of P \u2032 is P.\nIn the case of a single receiver the terms in the transfer polynomial corresponded to h disjoint paths, i.e., a subgraph of the network with some special properties. Similarly, in the case of N receivers, each term of the network polynomial now also corresponds to a subgraph with some special properties.\nFor simplicity we describe for the case of two receivers, R 1 and R 2 . Consider an acyclic line network with one source set S = {s 1 , s 2 , . . . , s h } ⊂ V and two receiver sets R 1 = {r 1 , r 2 , . . . , r h } and R 2 = {r \u2032 1 , r \u2032 2 , . . . , r \u2032 h }. As discussed in Section II, the network polynomial can be calculated as\nAs we already showed, each monomial of p 1 (and p 2 ) cor- responds to a DPQM with respect to the set S and the set R 1 ( R 2 ). Therefore, each monomial of p corresponds to a subgraph which is a union of two DPQM\u2019s, one with respect to the sets S, R and the other one with respect to the set S, R \u2032 . Notice that the converse of this statement is not necessarily true. This is due to the fact that one subgraph of the network can be decomposed as the union of two DPQM\u2019s in two different ways and therefore, in the network polynomial some terms might appear several times and they can possibly cancel each other. Thus it is important to classify those subgraphs of the network that correspond to a monomial in the network polynomial.\nWe next attempt to extract properties that these subgraphs have; the following lemma summarizes some such easy prop- erties.\nLemma 4.1 (Properties): Consider a subgraph L that cor- responds to a term appearing in the network polynomial of a network with two receivers.\n1) The edges of L can be decomposed into two DPQM\u2019s; one for each receiver.\n2) Each vertex of L has in-degree 0,1 or 2. If it has in- degree 0, then it is a source node. If it has in-degree 1 and the its out-degree is 2, then its incoming edge must appear in both DPQM\u2019s.\n3) Each vertex of L has out-degree 0,1 or 2. If it has out- degree 0, then it is a receiver node. If it has out-degree 1 and the its in-degree is 2, then its outgoing edge must appear in both DPQM\u2019s.\n5) The power of each variable in a monomial indicates whether the corresponding edge (in the original graph) appears in one of the DPQM\u2019s or both.\nProof: Before we prove these properties, notice that each term of the network polynomial is product of two terms of transfer polynomials of the receivers.\n1) This property is a direct implication of the previous sentence.\n2) Each DPQM is a subgraph of the graph for which the in- degree and out-degree of each vertex is 0 or one. For the union of two DPQM\u2019s, the in-degree and out-degree of each vertex is 0,1 or 2. The second part of this property is also clear.\n4) This property is a direct consequence of the ﬁrst prop- erty.\nNotice that these properties can be naturally extended for arbitrary number of receivers.\nThroughout this section we assume that the ﬁeld F q is of characteristic 2. For the case of two receivers, we have a more concise characterization of these subgraphs.\nTheorem 4.1: In the expansion of the product of the transfer polynomials of the two receivers, each monomial appears either only once or even number of times. In particular, if the ﬁeld F q has characteristic 2, then the subgraphs corresponding to the monomials of the network polynomial can be uniquely decomposable into two DPQM\u2019s.\nTheorem 4.2: Suppose that H is an acyclic line-network with the source set S and the receiver sets R 1 , R 2 each of which of min-cut h. Also, assume that the edges of H can be decomposed into two DPQM\u2019s, one for each receiver. The following statements are equivalent:\ni) There exist at least two different ways for decomposing the edges of H into two DPQM\u2019s.\nii) There are even number of ways that H can be decom- posed into two DPQM\u2019s.\niii) If the characteristic of the ﬁeld is 2, then there is no term in the network polynomial corresponding to the edges of H.\nThe proof is provided in [7], along with the proof of the following lemma.\nLemma 4.2: If H is an h-minimal subgraph of G then the network polynomial has a unique monomial corresponding to the edges of H.\nCorollary 4.1: An h-minimal subgraph H of G is uniquely decomposable into DPQM\u2019s.\nAs a direct application of 4.2, we get an alternative proof for the following known result.\nCorollary 4.2: For every network with two receivers, there is always a network code for the multicast network coding problem over the binary ﬁeld.\nWe now give an example of why studying the structure of network polynomials is useful. We look at a special case of combination networks, and using a simple combinatorial argument, we provide an alternative code construction as well as an associated bound on the ﬁeld size this construction uses, that matches the best known such bound.\nNetwork polynomial of combination network: The line graph of a combination network with h = 2 is a 4-layered network. The ﬁrst layer has two source nodes s 1 , s 2 . The second layer consists of m nodes v 1 , v 2 , . . . , v m . For each i = 1, 2, j = 1, 2, . . . , n, s i is connected to v j . Let x i (y i ) be the variable associated with the edge s 1 , v i (s 2 , v i ). The third layer has also n nodes w 1 , w 2 , . . . , w m . Each v i is connected to w i . Let a i be the variable associated with that edge. The last layer contains N pairs of receiver nodes. The i-the pair has 2\nnodes r i , t i . Each pair has two in-neighbors from w j \u2019s where one is connected to r i and one is connected to t i . Suppose that r i is connected to w f (i) and t i is connected to w g(i) in which f, g are two functions from the set [N ] to the set [m], in which [j] = {1, 2, . . . , j}. In Figure 2 and Example 3.2, we used p i and q i instead of w f (i) and w g(i) for simplicity.\nSuppose that the variable associated to the edge r i , w f (i) is p i and the one associated to the edge t i , w g(i) is q i . As we saw in Example 3.2, the transfer polynomial of each receiver can be computed. Therefore, the network polynomial of G is:\nFigure 2 shows the line graph of a combination network with h = 2, m = 4, N = 5.\nAlphabet Size: We use the results of the previous sections to prove the following theorem.\nTheorem 5.1: For every combination network with N re- ceivers and min-cut 2 to every receiver, there exists a network code over any ﬁeld of size larger than\nProof: Let G be a combination network. The network polynomial of G is expressed in 2. We must ﬁnd an assignment of the values to the variables so that I evaluates to a non- zero value. Set a i = p i = q 1 = x g(i) = x f (i) = 1 for all i = 1, 2, . . . , m.\nThus, we only need to show that if the ﬁeld size is larger than\ni \u2019s such that y f (i) ̸= g(i) , for i ∈ [m]. Let F be a ﬁnite ﬁeld of size larger than\ni appears in certain number of parenthesis. Without loss of generality suppose that y 1 is a variable that appears in the minimum number of parenthesis. Let\u2019s assume that y 1 appears in l 1 parenthesis.\nWe remove all the parenthesis containing y 1 from the product and again without loss of generality, we assume that y 2 is the least appeared variable among the remaining terms. Let\u2019s assume that y 2 appears in l 2 of the remaining parenthesis. We exclude all the terms with y 1 , y 2 from the product and we repeat the procedure. What we end up is an ordering of the variables and N numbers l 1 , . . . , l N . Let l k = max {l 1 , . . . , l N }. We show that we can always ﬁnd an assignment to the variables y i from any ﬁeld of size larger than l k such that I is not zero. We assign values to the variables based on the ordering we deﬁned above, in the opposite direction. Namely, we ﬁrst assign an arbitrary value to y N , then we chose an appropriate value for y N −1 and at the end we ﬁnd a right value for y 1 . At each step i we must make sure that we select a value for the variable i such that it is different from the value of every other variable that appears with y i in some parenthesis. Clearly, if the ﬁeld size is larger than l i , we have enough elements in the ﬁeld to select an appropriate value for y i . Since l k is the largest l i , we can ﬁnd\nan appropriate value for all the variables. Thus, it is enough to show that l k ≤\n2N . We prove this inequality using two inequalities.\nThe ﬁrst inequality holds because when we select the k-th variable, there are m −k other variables left. Even if y k appears with all the left variables, it will be appeared m −k times. The second inequality holds because in the k-th step, each of the m −k +1 variables appear at least l k times in the parenthesis. There are at most N parenthesis and each parenthesis has exactly two elements. Therefore, l k (m − k + 1) ≤ 2N and therefrom, we deduce the desired inequality. If we multiply both sides of the two inequalities, we can deduce that l k ≤ √\nIn this paper, we established relationships between the monomials that appear in the transfer and network poly- nomials to graph theoretical properties of the underlying network conﬁguration. Several questions remain open, with most prominent a more exact characterization of the terms of the network polynomial for an arbitrary number of receivers."},"refs":[{"authors":[{"name":"S. Avestimehr"},{"name":"N. Diggavi"},{"name":"C. Tse"}],"title":{"text":"A deterministic approach to wireless relay networks"}},{"authors":[{"name":"R. Koetter"},{"name":"M. M´edard"}],"title":{"text":"Beyond routing: An algebraic approach to network coding"}},{"authors":[{"name":"M. Kim"},{"name":"E. Erez"},{"name":"E. M. Yeh"},{"name":"M. Mdard"}],"title":{"text":"Deterministic network model revisited: An algebraic network coding approach"}},{"authors":[{"name":"C. Fragouli"},{"name":"E. Soljanin"}],"title":{"text":"Network coding: Fundamentals"}},{"authors":[{"name":"J. Ebrahimi"},{"name":"C. Fragouli"}],"title":{"text":"Multicasting algorithms for deterministic networks"}},{"authors":[{"name":"J. Ebrahimi"},{"name":"C. Fragouli"}],"title":{"text":"Algebraic algorithms for vector network coding"}},{"authors":[{"name":"J. Ebrahimi \t"},{"name":"C. Fragouli"}],"title":{"text":"Properties of net- work \t polynomials: \t Technical \t report"}},{"authors":[{"name":"D. B. West"}],"title":{"text":"Introduction to graph theory"}}]},"file":{"jsonClass":"File","file":"/home/arnfred/Code/trailhead/resources/isit2012/1569566529.pdf"},"links":[{"id":"1569566567","weight":6},{"id":"1569565867","weight":12},{"id":"1569559617","weight":6},{"id":"1569565097","weight":6},{"id":"1569559259","weight":6},{"id":"1569564805","weight":6},{"id":"1569558325","weight":6},{"id":"1569565837","weight":6},{"id":"1569566119","weight":6},{"id":"1569560427","weight":6},{"id":"1569566941","weight":6},{"id":"1569566157","weight":6},{"id":"1569565809","weight":6},{"id":"1569566843","weight":6},{"id":"1569565455","weight":6},{"id":"1569566795","weight":6},{"id":"1569561679","weight":12},{"id":"1569566015","weight":12},{"id":"1569565953","weight":6},{"id":"1569566895","weight":12},{"id":"1569565321","weight":12},{"id":"1569566511","weight":6},{"id":"1569565841","weight":12},{"id":"1569565833","weight":18},{"id":"1569565535","weight":12},{"id":"1569559805","weight":6},{"id":"1569566139","weight":6},{"id":"1569566445","weight":18},{"id":"1569566209","weight":6},{"id":"1569566809","weight":6},{"id":"1569565817","weight":6},{"id":"1569563897","weight":6},{"id":"1569566003","weight":18},{"id":"1569565185","weight":18},{"id":"1569566297","weight":25},{"id":"1569566407","weight":6},{"id":"1569565961","weight":6},{"id":"1569566387","weight":6},{"id":"1569565493","weight":6},{"id":"1569566779","weight":12},{"id":"1569566479","weight":6},{"id":"1569565241","weight":6},{"id":"1569565511","weight":6},{"id":"1569566691","weight":6},{"id":"1569566283","weight":6},{"id":"1569566771","weight":6},{"id":"1569563975","weight":12},{"id":"1569566817","weight":6},{"id":"1569566911","weight":6},{"id":"1569564923","weight":18},{"id":"1569566601","weight":18},{"id":"1569557851","weight":6},{"id":"1569567691","weight":6},{"id":"1569567013","weight":6},{"id":"1569565853","weight":12},{"id":"1569566797","weight":6},{"id":"1569566973","weight":12},{"id":"1569565139","weight":25},{"id":"1569565579","weight":12}],"meta":{"jsonClass":"HashMap$HashTrieMap","sessionid":"S8.T1.2","endtime":"17:20","authors":"Javad Ebrahimi, Christina Fragouli","date":"1341334800000","papertitle":"Properties of Network Polynomials","starttime":"17:00","session":"S8.T1: Network Coding:  Code Design and Resource Allocation","room":"Kresge Rehearsal B (030)","paperid":"1569566529"},"cluster":{"jsonClass":"Map$EmptyMap$"}}
