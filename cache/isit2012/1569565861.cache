{"id":"1569565861","paper":{"title":{"text":"Analysis and Design of Ultra-Sparse Non-Binary Cluster-LDPC Codes"},"authors":[{"name":"David DECLERCQ"},{"name":"Valentin SAVIN"},{"name":"Lam PHAM SY"}],"abstr":{"text":"Abstract\u2014This paper continues a previous work on non-binary cluster-LDPC codes. Such codes are deﬁned by locally dense parity-check matrices, with (possibly rectangular) dense clusters of bits, but which are cluster-wise sparse. We derive a lower bound on the minimum distance of non-binary cluster-LDPC codes that is based on the topological properties of the underlying bipartite graph. We also propose an optimization procedure, which allows designing ﬁnite length codes with large minimum distance, even in the extreme case of codes deﬁned by ultra-sparse graphs, i.e. graphs with all symbol-nodes of degree d v = 2. Furthermore, we provide asymptotic thresholds of ensembles of non-binary cluster-LDPC codes, which are computed exactly under the Belief Propagation decoding, and upper-bounded under the Maximum a Posteriori (MAP) decoding. We show that the MAP-threshold upper bounds, which are conjunctured to be tight, quickly approach the channel capacity, which conﬁrms the excellent minimal distance properties of non-binary cluster- LDPC codes."},"body":{"text":"In this paper we consider a very general construction of non-binary low-density codes, known as non-binary cluster- LDPC (NB-cluster-LDPC) codes [1]. The sparse parity check matrix H is organized in clusters of bits, where each cluster is either a full-rank or a zero p × r binary matrix determined by p consecutive rows and r consecutive columns of H. The case p = r corresponds to the family of non-binary LDPC codes deﬁned over general linear groups [2], while the case p > r corresponds to the more general codes studied in this paper. This type of codes has been ﬁrst introduced in [3], in the case of general ensemble of irregular graphs, and can be seen as a non-binary generalization of the GLD codes proposed in [4].\nThe case of codes for which the underlying bipartite graph is ultra-sparse, meaning that each symbol node is connected to exactly d v = 2 linear-constraint nodes, is of particular interest. First, very large girths can be obtained for Tanner graphs with d v = 2 , as demonstrated in [5], [6]. It has also been pointed out [3], [7] that when the size of the non-binary alphabet grows, the best decoding thresholds are obtained for average density of edges closer and closer to d v = 2 . Practically, for NB codes deﬁned over ﬁnite ﬁelds F q with q ≥ 64, the best codes, both asymptotically and at ﬁnite lengths, are ultra-sparse codes. Despite those advantages, ultra-sparse LDPC codes over ﬁnite ﬁelds or general linear groups suffer from a serious drawback, as their minimum distance is limited and grows at best as O(log(N )) , where N is the number of symbol nodes [8].\nIn [1], the authors showed that the new class of NB- cluster-LDPC codes does not suffer from the same limitations. Precisely, it has been proven that the minimum distance of ultra-sparse cluster codes grows linearly with the code length, provided that the minimum distance of the component code, which deﬁnes the generalized parity-checks, is above the second eigenvalue of the graph. Using the Gilbert-Varshamov bound on the minimum distance and the Friedman theorem [9] on the second eigenvalue of regular graphs, it has been shown that there exist ensembles of ultra-sparse cluster codes with linear growing minimum distance. However, for these ensembles the size of clusters could be far too large for practical applications.\nThis work continues the research begun in our previous work [1]. We derive a new lower bound on the minimum distance of cluster-codes that is based on the topological, rather than algebraic, properties of the underlying bipartite graph. Although the bound we propose is sublinear in the code length, it has the advantage of being applicable to any code length and cluster sizes, and it also allows deriving a methodology for the design of ﬁnite length cluster codes. In a second part of the pa- per, we also present an analysis of the asymptotic performance of cluster codes in terms of EXIT curves. By using the area theorem [10], we derive an upper bound on the MAP threshold, which is conjunctured to be tight in quite general settings, especially for codes deﬁned by regular graphs. It is shown that the MAP thresholds of NB-cluster-LDPC codes increases with p, and quickly approaches the Shannon limit. Finally, we propose an optimization procedure for ﬁnite length codes, which allows designing NB-cluster-LDPC codes with large minimum distance, while preserving the constraint of ultra- sparse Tanner graphs. The performance of the designed codes is assessed by Monte-Carlo simulation, which demonstrates the excellent performance of our codes under iterative Belief- Propagation decoding, on both the waterfall and the error-ﬂoor region.\nA NB-cluster-LDPC code is deﬁned by the structure of its binary parity-check matrix H bin , which is organized in dense clusters of bits, but which is globally cluster-wise sparse. We consider two sequences of integers {p i } i=1,...,M and {r j } j=1,...,N that deﬁne the clustering of the parity-check\n. Each cluster h i,j is a binary matrix of size p i × r j , which is either all-zero or full-rank.\nWe further assume that for any full-rank cluster h i,j , we have r j ≤ p i . We note that the binary parity check matrix H bin is of size M bin ×N bin , where M bin = M i=1 p i and N bin = N j=1 r j . The parameter N bin will be referred to as the binary length of the NB-cluster-LDPC code.\nA codeword X = (X 1 , . . . , X N ) is a sequence of binary vectors X j ∈ F r j 2 , verifying the linear system\nh i,j X j = 0, ∀i = 1, . . . , M . We shall also refer to X j as the j th coded symbol. From a non-binary perspec- tive, the i th non-binary linear constraint of the above system corresponds to p i binary parity-checks, while the j th non- binary coded symbol X j corresponds to r j coded bits. Under these settings, each non-zero cluster gives an injective linear transformation h i,j : F r j 2 → F p i 2 , from the alphabet of the j th coded symbol to the vector-space of the i th non-binary constraint.\nLet {h i,j k } k=1,...,d be the non-zero clusters in the i th non- binary linear constraint. They form a binary code C i with length d k=1 r j k bits and co-dimension p i . Throughout the paper, this binary code will be referred to as the i th component code ; hence, C i is the kernel of the binary matrix H c i :\nNote also that two component matrices H c i 1 and H c i 2 might be equal, possibly after some column or row permutation, even if the number and the size of non-zero clusters participating in the non-binary constraints i 1 and i 2 are different. Put differently, the same component matrix H c i 1 = H c i 2 can be clusterized in different manners.\nThe non-binary nature of NB-cluster-LDPC codes is better highlighted through their graphical representation. The bipar- tite (Tanner) graph Γ, associated with the NB-cluster-LDPC code, consists of N symbol-nodes and M constraint nodes, which are connected according to the non-zero clusters h i,j . The j th symbol-node represents a plurality of r j coded bits, while the i th constraint-node represents a plurality of p i binary parity-checks. The nodes are connected by an edge if and only if the cluster h i,j is non-zero, in which case the corresponding edge is considered as being labeled by h i,j . The labels on the edges correspond to the generalization of the non-zero ﬁeld values for usual NB-LDPC codes [11].\nThe Belief Propagation (BP) decoder for NB-cluster-LDPC codes is similar to the one for usual NB-LDPC codes on Galois ﬁelds [7], [12], and is based on local Bayesian update rules following the non-binary constraints structure. As a conse- quence, BP decoding can be performed in the Fourier domain to speed-up the simulations [11], and the low complexity decoders proposed for NB-LDPC codes [13], [14] can be easily extended to NB-cluster-LDPC codes.\nThis section deals with the minimum distance properties of NB-cluster-LDPC codes. We only consider NB-cluster-LDPC codes deﬁned by regular (d v = 2, d c ) graphs, which represents the most problematic case in terms of minimum distance. We\nuse the notation from the previous section, and we also denote by (h i,j ) the image of the linear application:\nSince h i,j is injective, (h i,j ) ⊆ F p i 2 is a vector subspace of dimension r j .\nThe following theorem provides a lower bound on the min- imum distance ∆ of the NB-cluster-LDPC code, depending on the girth g of its Tanner graph, namely the length of its shortest cycle.\nTheorem 1: Assume that (h i,j ) ∩ (h i,j ) = {0} for any two edges i ∼ j and i ∼ j , adjacent to the same constraint node i. Then:\nProof. Let X = (X 1 , . . . , X N ) be a non-zero codeword, where X j = (x j,1 , . . . , x j,r j ) ∈ F r j 2 . Let j 0 be an active symbol node, meaning that X j 0 contains a non-zero bit, and let V be the set of nodes at topological distance from j 0 . Thus, V 0 = {j 0 } , V 1 is the set of constraint-nodes connected to j 0 , V 2 is the set of symbol-nodes connected to j 0 by a path of length 2, etc. Assume that is odd and < g/2. Then any constraint node i ∈ V is connected to a unique symbol node belonging to V −1 and to d c − 1 symbol nodes belonging to V +1 . Consider i ∈ V , such that its parent symbol node j ∈ V −1 is active (i.e. X j contains a non-zero bit). Since X veriﬁes the linear constraint corresponding to i, we have:\nOn the other hand, (h i,j ) ∩ (h i,j ) = {0} , for any j = j. From the above equation, it follows that at least two children symbol nodes (j , j ) ∈ V +1 have to be active. Since there are no cycles of length < g, the minimum distance is lower bounded by the number of active-symbol nodes at distance\nCorollary 2: Under the assumptions of the above theorem, if the bipartite graph Γ is constructed by using the Progressive Edge Growth [15] (PEG) algorithm, then:\nProof. Follows from the above theorem and from [15, Theo- rem1] that states a lower bound on the girth of regular bipartite graphs built by the PEG algorithm.\nThe Theorem 1 provides a lower bound on the minimum distance of NB-cluster-LDPC codes, under the assumption that the labels h i,j of the edges incident to a constraint node i = 1, . . . , M have pairwise disjoint images. If such an\nassumption is met, then for each constraint node i, the images of the labels of the incident edges j ∼ i deﬁne d c vector subspaces { (h i,j )} j∼i of F p i 2 , of dimensions {r j } j∼i , which are pairwise disjoint. Conversely, if for each constraint node i there exist d c pairwise disjoint vector subspaces of F p i 2 , of dimensions {r j } j∼i , then it is possible to label the edges of Γ , so that the assumption of Theorem 1 is met.\nIn order to verify the efﬁciency of this constraint, and then have an indication whether the lower bound of Theorem 1 is tight or not, let us denote by d(r, p) the maximum number of pairwise disjoint vector subspaces of F p 2 , for some given cluster dimension r ≤ p. Clearly, d(1, p) = 2 p − 1 and d(r, p) = 1 for any p\n< r ≤ p . Moreover, for any 1 ≤ r ≤ p , the following inequalities hold:\n≤ d(r, p) ≤ 2 p − 1 2 r − 1 \t (1) The proof is omitted due to space limitation. Now, consider a NB-cluster-LDPC code, and for each constraint node i, let ¯r i = max j∼i r j ≤ p i be the maximum dimension of its neighbor symbol nodes. If d c ≤ d(¯ r i , p i ), ∀i , then for each constraint node i there exist d c pairwise disjoint vector subspaces of F p i 2 , of dimension ¯r i . Since ¯r i ≥ r j , ∀j ∼ i , it follows that it is possible to label the edges of Γ, so that the assumption of Theorem 1 is met, and provides a useful tool for NB-cluster-LDPC code design with good minimum distance. As an example, we give in Table I a set of 16 clusters of size (p = 8, r = 4) with pairwise disjoint images, obtained by selecting columns from the (N bin = 128, K bin = 120) extended-Hamming code with minimum distance 4. Note that the maximum number of clusters indicated by equation (1) is d(4, 8) ≤ 17 .\nThroughout this section, we assume that the transmission takes place over a Binary Erasure Channel (BEC). We consider the ensemble of cluster codes E(λ, ρ, r, p), where λ and ρ denote the edge-perspective degree distribution polynomials of the subjacent bipartite graph, each graph edge corresponding to a full-rank cluster of size p×r (p ≥ r) in the binary parity- check matrix of the code.\nEXtrinsic Information Transfer (EXIT) curves were ﬁrst introduced in [16] as a technique to analyse the convergence of the iterative decoding process of parallel concatenated codes. A more general deﬁnition has been introduced in [10], where the EXIT curve is associated with the sparse graph system rather than the component (concatenated) codes. The advantage of this approach is that it allows deﬁning EXIT curves for any decoding algorithm (e.g. IT or MAP decoding,\nthe last one being equivalent to the Maximum Likelihood decoding over the BEC).\nFor given code length N bin and channel erasure probability ε , we denote by h Nbin (ε) the probability that a bit remains erased after decoding, assuming that the received value (if any) of this particular bit has not been submitted to the decoder. The EXIT function h(ε) is deﬁned as the (pointwise) limit of h Nbin (ε) , when the code length N bin goes to inﬁnity. The BP and MAP thresholds of E(λ, ρ, r, p) are given by:\nwhere subscripts BP and MAP are used to indicate the decoding algorithm.\nExplicit formulae for the computation of the BP-EXIT curve can be derived by using density evolution (DE) techniques, similar to those presented in [17]. We have derived DE equations for NB-cluster-LDPC codes, however, due to space limitation they are not presented here, but will be included in an extended version of this paper. The exact computation of the MAP-EXIT function is generally unworkable. However, using the area theorem [10], we have 1 MAP h MAP (ε) dε = R , where R is the designed coding rate of the given ensemble. Moreover, since the BP decoding is suboptimal with respect to the MAP decoding, we have h BP (ε) ≥ h MAP (ε) . Hence, if for some ¯ MAP , 1 ¯MAP h BP (ε) dε = R , we necessarily have ¯ MAP ≥ MAP . This gives an upper bound on the MAP-threshold, which is known to be tight in the binary case [10].\nTable II shows the BP thresholds and the MAP threshold upper bounds for various ensembles of ultra-sparse cluster codes with designed code rate R = 1/2. Parameters r and p are shown in the table, λ = x (corresponding to d v = 2 ), while ρ is determined, \u201cas regular as possible\u201d, according to parameters λ, r, p, and R. We can observe that for both r = 1 and r = 2, the BP threshold value increases with p for r ≤ p ≤ 4 , and it starts decreasing from this point. This can be explained as follows. By increasing the value of p, we also increase the check-node degree (d v = 2 and R = 1/2, hence d c = 4 p r ). Consequently, component codes become longer and the expected value of the number of erased bits on each component code increases. If the expected value of the number of erased bits on component codes increases faster than their minimal distance, the iterative decoding is penalized, due to the fact that each component code is affected by too many erased bits.\nAs we can observe, the upper bound of the MAP threshold increases with p and quickly approaches the Shannon limit, which shows that the NB-cluster-LDPC codes ensembles are good both for iterative decoding and MLD decoding.\nWe propose in this section an optimization procedure which designs NB-cluster-LDPC codes with large minimum distance, while preserving the constraint of ultra-sparse Tanner graphs with d v = 2 . Let us assume that one wants to design a NB- cluster-LDPC code with a target codeword length N ∗ bin and a target coding rate R ∗ . We also assume that the clusters have constant number of rows (p ∗ 1 , . . . , p ∗ M ) = (p ∗ , . . . , p ∗ ) , while their number of columns might be different (r ∗ 1 , . . . , r ∗ N ) , and not ﬁxed a priori, as long as the constraint on the codeword length i r ∗ i = N ∗ bin is veriﬁed.\nAs indicated by [1, Theorem 1], good NB-cluster-LDPC codes should have bipartite graph with the smallest possible second eigenvalue λ 2 (Γ) , and component codes C i with the largest possible minimum distance δ. Following [1], we refer to δ as the local minimum distance of the NB-cluster-LDPC code. One possible way of designing a NB-cluster-LDPC code with a given local minimum distance δ is by considering a linear code C of length d, dimension (d − p), and minimum distance δ, and labeling the edges incident to each constraint node of Γ by an appropriate clustering of a parity-check matrix H c of C.\nIn order to differentiate the structure of the clusters from one constraint node to another, a simple procedure consists in performing a random permutation of the columns of H c . The permutation is chosen such as to obtain clusters with full rank, which is possible only if the local minimum distance of the component code is large enough: δ ≥ min i (r ∗ i ) .\nWe moreover advise to follow the guidelines of Theorem 1 and form the clusters such that they have pairwise disjoint images. This constraint, together with the minimization of λ 2 (Γ) and the maximization of δ, form the main guidelines of the ﬁrst step of the proposed optimized code design algorithm. The principle of the optimization is to start from a NB- cluster-LDPC with larger length N (0) bin > N ∗ bin and larger rate R (0) > R ∗ , but with the same co-dimension M (0) bin = M ∗ bin , than the ones of the target code. The ﬁrst step of optimization is then to build H (0) bin with the above mentioned guidelines. Then the construction algorithm performs an iterative short- ening of the code by removing columns of the binary parity- check matrix, with the goal of increasing monotonically the minimum distance at each iteration of shortening. At each iteration k, we make use of the improved impulse algorithm [18] to identify low Hamming weight codewords of H (k) bin , and kill them in order to ensure by this careful design that the obtained NB-cluster-LDPC has a large minimum distance. We proceed in an iterative fashion as summarized in Algorithm 1\nLet us discuss ﬁrst the proposed initialization steps. For the step (a) we construct several graphs Γ by using the modiﬁed Random-PEG algorithm [6], which is able to design minimum size graphs for d v = 2 and a given girth g. We then choose a graph Γ with minimum second eigenvalue. For the step (b), we choose a component code H c with the highest possible local minimum distance from existing codes in the literature [19]. Finally, the step (c) consists in selecting columns of H c such as to build clusters with pairwise disjoint images. An efﬁcient implementation of this step is to select at random the clusters from a pre-determined set of clusters with pairwise disjoint images, as the set given on Table I for clusters of sizes (p = 8, r = 4).\nWe now discuss the details of the iterative shortening procedure, which relies heavily on the ability to identify low- weight codewords of a sparse linear code. We have adapted the \u201cimproved impulse method\u201d algorithm proposed in [18] to NB-cluster-LDPC codes. This algorithm ﬁnds the low-weight codewords of sparse linear codes, and was proved to be largely more efﬁcient than other techniques on benchmark LDPC codes. The iterative shortening process ensures that the ﬁnal NB-cluster-LDPC code has no codeword of Hamming weights much smaller than its typical expected minimum distance. We give in Table III an example of the iterative shortening process, for the case of N ∗ bin = 256 and R ∗ = 1/2 . The initial code deﬁned by the parity check matrix H (0) bin is built from a (d v = 2, d c = 16) graph with rate R (0) = 0.75 and clusters of sizes (p, r (0) ) = (8, 4) taken at random from the Table I. We indicate at each step the code rate and length of H (k) bin , as well as the low weight spectrum computed with the improved im- pulse method. The successive 7 steps of shortening gradually improve the low weight spectrum, as the code rate decreases from R (0) = 0.75 to R (7) = R ∗ = 0.5 , reaching a ﬁnal NB-\ncluster-LDPC code with minimum distance ∆ = 23, which is a good value considering that the NB-cluster-LDPC code is based on an ultra-sparse Tanner graph with girth g = 8. Note that a direct design with only the initialization step and no shortening procedure gave a NB-cluster-LDPC code with minimum distance ∆ = 20.\nThe optimization algorithm presented in this section should be used only to design NB-cluster-LDPC codes at short to moderate codeword lengths. For long codes the iterative short- ening steps become cumbersome, and for N ∗ bin > 2000 the NB- cluster-LDPC code design is limited at the initialization step of the optimization algorithm, and other reﬁnement techniques need to be used without relying on the knowledge of low weight codewords.\nIn this section, the performance of NB-cluster-LDPC codes is assessed through Monte-Carlo simulation over the Binary- Input AWGN channel. In Figure 1, we show the comparison of regular binary LDPC codes from [20], and two NB-cluster- LDPC codes with p ∗ = 8 , optimized with Algorithm 1. The BP decoding performs a maximum of 100 iterations and it stops when a valid codeword is found by syndrome computation. As expected, the NB-cluster-LDPC codes combine the two advantages of having good performance in the waterfall region due to the sparse representation of their Tanner graphs, as well as larger minimum distance than other classes of codes. Since it has been shown in [8] that the error ﬂoor of ultra- sparse non-binary LDPC codes with d v = 2 comes from low-weight codewords and not from the presence of the so- called pseudo-codewords, the large minimum-distance of NB- cluster-LDPC codes also determines very good performance in the error ﬂoor region. NB-cluster-LDPC codes did not show any error ﬂoor until FER = 10 −8 , which, coupled with the waterfall performance, is a very good and unpreceding result for iteratively decodable codes at short block-lengths.\nIn this paper, we derived a lower bound on the minimum distance of ultra-sparse NB-cluster-LDPC codes, and provided asymptotic thresholds for the BP and MAP decoders. We also proposed a construction of ﬁnite-length codes with large minimum distances, and we showed that the constructed codes exhibit very good performance under BP decoding on both the waterfall and the error-ﬂoor region."},"refs":[{"authors":[{"name":"V. Savin"},{"name":"D. Declercq"}],"title":{"text":"Linear growing minimum distance of ultra-sparse non-binary cluster-LDPC codes"}},{"authors":[{"name":"V. Rathi"},{"name":"R. Urbanke"}],"title":{"text":"Density evolution, thresholds and the stability condition for non-binary LDPC codes"}},{"authors":[{"name":"L. Sassatelli"},{"name":"D. Declercq"}],"title":{"text":"Non-binary hybrid LDPC codes"}},{"authors":[{"name":"J. J. Boutros"},{"name":"O. Pothier"},{"name":"G. Z´emor"}],"title":{"text":"Generalized low density (Tanner) codes"}},{"authors":[{"name":"X.-Y. Hu"},{"name":"E. Eleftheriou"},{"name":"M. Arnold"}],"title":{"text":"Regular and irregular progressive edge-growth Tanner graphs"}},{"authors":[{"name":"A. Venkiah"},{"name":"D. Declercq"},{"name":"C. Poulliat"}],"title":{"text":"Design of cages with a randomized progressive edge growth algorithm"}},{"authors":[{"name":"C. Davey"},{"name":"D. MacKay"}],"title":{"text":"Low-density parity-check codes over GF(q)"}},{"authors":[{"name":"C. Poulliat"},{"name":"M. Fossorier"},{"name":"D. Declercq"}],"title":{"text":"Design of regular (2, d c )- LDPC codes over GF(q) using their binary images"}},{"authors":[{"name":"J. Friedman"}],"title":{"text":"A proof of Alon\u2019s second eigenvalue conjecture and related problems"}},{"authors":[{"name":"C. Measson"},{"name":"A. Montanari"},{"name":"R. Urbanke"}],"title":{"text":"Maxwell Construction: The Hidden Bridge Between Iterative and Maximum a Posteriori De- doding"}},{"authors":[{"name":"A. Goupil"},{"name":"M. Colas"},{"name":"G. Gelle"},{"name":"D. Declercq"}],"title":{"text":"FFT-based BP decoding of general LDPC codes over abelian groups"}},{"authors":[{"name":"L. Barnault"},{"name":"D. Declercq"}],"title":{"text":"Fast decoding algorithm for ldpc over gf(2 q ) "}},{"authors":[{"name":"D. Declercq"},{"name":"M. Fossorier"}],"title":{"text":"Decoding algorithms for nonbinary ldpc codes over gf(q)"}},{"authors":[{"name":"A. Voicila"},{"name":"D. Declercq"},{"name":"F. Verdier"},{"name":"M. Fossorier"},{"name":"P. Urard"}],"title":{"text":"Low complexity decoding for non-binary ldpc codes in high order ﬁelds"}},{"authors":[{"name":"X. Y. Hu"},{"name":"E. Eleftheriou"},{"name":"D. M. Arnold"}],"title":{"text":"Regular and irregular progressive edge-growth tanner graphs"}},{"authors":[{"name":"S. ten Brink"}],"title":{"text":"Convergence behavior of iteratively decoded parallel concatenated codes"}},{"authors":[{"name":"V. Rathi"},{"name":"R. Urbanke"}],"title":{"text":"Thresholds and the stability condition for non-binary LDPC codes"}},{"authors":[{"name":"D. Declercq"},{"name":"M. Fossorier"}],"title":{"text":"Improved impulse method to evaluate the low weight proﬁle of sparse binary linear codes"}},{"authors":[{"name":"E. Brouwer"},{"name":"T. Verhoeff"}],"title":{"text":"An updated table of minimum-distance for binary linear codes"}},{"authors":[{"name":"D. MacKay"}],"title":{"text":"Webpage"}}]},"file":{"jsonClass":"File","file":"/home/arnfred/Code/trailhead/resources/isit2012/1569565861.pdf"},"links":[{"id":"1569565883","weight":11},{"id":"1569565867","weight":5},{"id":"1569566605","weight":5},{"id":"1569566683","weight":2},{"id":"1569565551","weight":8},{"id":"1569564897","weight":5},{"id":"1569565461","weight":2},{"id":"1569566207","weight":2},{"id":"1569565609","weight":2},{"id":"1569566985","weight":5},{"id":"1569564613","weight":2},{"id":"1569566865","weight":11},{"id":"1569564311","weight":14},{"id":"1569566617","weight":2},{"id":"1569555999","weight":8},{"id":"1569566657","weight":5},{"id":"1569558901","weight":5},{"id":"1569559111","weight":2},{"id":"1569564441","weight":2},{"id":"1569566425","weight":2},{"id":"1569554971","weight":2},{"id":"1569566809","weight":11},{"id":"1569566447","weight":2},{"id":"1569566003","weight":2},{"id":"1569566223","weight":8},{"id":"1569566191","weight":2},{"id":"1569566245","weight":2},{"id":"1569566949","weight":2},{"id":"1569565885","weight":2},{"id":"1569565493","weight":11},{"id":"1569566805","weight":11},{"id":"1569566983","weight":2},{"id":"1569565765","weight":2},{"id":"1569565093","weight":5},{"id":"1569565385","weight":2},{"id":"1569565661","weight":2},{"id":"1569566737","weight":5},{"id":"1569565353","weight":2},{"id":"1569564305","weight":2},{"id":"1569566547","weight":8},{"id":"1569566595","weight":5},{"id":"1569566755","weight":2},{"id":"1569564437","weight":2},{"id":"1569566533","weight":2},{"id":"1569565529","weight":5},{"id":"1569565271","weight":2},{"id":"1569566397","weight":2},{"id":"1569565769","weight":14},{"id":"1569567691","weight":2},{"id":"1569562367","weight":2},{"id":"1569565997","weight":5},{"id":"1569565035","weight":11},{"id":"1569564961","weight":2},{"id":"1569561397","weight":8},{"id":"1569565707","weight":2},{"id":"1569566375","weight":2},{"id":"1569565143","weight":5},{"id":"1569566825","weight":2},{"id":"1569566443","weight":2},{"id":"1569566727","weight":5},{"id":"1569565315","weight":14}],"meta":{"jsonClass":"HashMap$HashTrieMap","sessionid":"S14.T5.2","endtime":"17:20","authors":"David Declercq, Valentin Savin, Lam Pham Sy","date":"1341507600000","papertitle":"Analysis and Design of Ultra-Sparse Non-Binary Cluster-LDPC Codes","starttime":"17:00","session":"S14.T5: New Constructions of LDPC Codes","room":"Kresge Little Theatre (035)","paperid":"1569565861"},"cluster":{"jsonClass":"Map$EmptyMap$"}}
