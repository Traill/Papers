{"id":"1569566925","paper":{"title":{"text":"Improved quantum hypergraph-product LDPC codes"},"authors":[{"name":"Alexey A. Kovalev ∗"},{"name":"Leonid P. Pryadko \u2020"}],"abstr":{"text":"Abstract\u2014We suggest several techniques to improve the toric codes and the ﬁnite-rate generalized toric codes (quantum hypergraph-product codes) recently introduced by Tillich and Z´emor. For the usual toric codes, we introduce the rotated lattices speciﬁed by two integer-valued periodicity vectors. These codes include the checkerboard codes, and the family of minimal single- qubit-encoding toric codes with block length n = t 2 +(t+1) 2 and distance d = 2t + 1, t = 1, 2, . . .. We also suggest several related algebraic constructions which increase the rate of the existing hypergraph-product codes by up to four times."},"body":{"text":"Quantum error correction[1]\u2013[3] made quantum computing (QC) theoretically possible. However, high precision required for error correction [4]\u2013[9] combined with the large number of auxiliary qubits necessary to implement it, have so far in- hibited any practical realization beyond proof-of-the-principle demonstrations[10]\u2013[15].\nFor stabilizer codes, the error syndrome is obtained by measuring the generators of the stabilizer group. The cor- responding quantum measurements can be greatly simpliﬁed (and also done in parallel) in low-density parity-check (LDPC) codes which are specially designed to have stabilizer gener- ators of small weight. Among LDPC codes, the toric (and related surface) codes [5], [9], [16], [17] have the stabilizer generators of smallest weight, w = 4, with the support on neighboring sites of a two-dimensional lattice. These codes have other nice properties which make them suitable for quantum computations with relatively high error threshold. Unfortunately, these code families have very low code rates that scale as inverse square of the code distance.\nRecently, Tillich and Z´emor proposed a ﬁnite-rate general- ization of toric codes[18]. The construction relates a quantum code to a direct product of hypergraphs corresponding to two classical binary codes. Generally, thus obtained LDPC codes have ﬁnite rates and the distances that scale as a square root of the block length. Unfortunately, despite ﬁnite asymptotic rates, for smaller block length, the rates of the quantum codes which can be obtained from the construction[18] are small.\nIn this work, we present a construction aimed to improve the rates of both regular toric[16] and generalized toric codes[18]. For the toric codes, we introduce the rotated tori speciﬁed by two integer-valued periodicity vectors. Such codes include the checkerboard codes [17] (π/4-rotation), and the family [19] of minimal single-qubit-encoding toric codes with block length n = t 2 + (t + 1) 2 and distance d = 2t + 1, t = 1, 2, . . .. For the generalized toric codes[18], we suggest an algebraic construction equivalent to the π/4 rotation of the regular toric\ncodes. The resulting factor of up to four improvement of the code rate makes such codes competitive even at relatively small block sizes.\nWe consider binary quantum error correcting codes (QECCs) deﬁned on the complex Hilbert space H ⊗n 2 where H 2 is the complex Hilbert space of a single qubit α |0⟩+β |1⟩ with α, β ∈ + and |α| 2 + |β| 2 = 1. Any operator acting on such an n-qubit state can be represented as a combination of Pauli operators which form the Pauli group P n of size 2 2n+2 with the phase multiplier i m :\nwhere X, Y , and Z are the usual Pauli matrices and I is the identity matrix. It is customary to map the Pauli operators, up to a phase, to two binary strings, v, u ∈ {0, 1} ⊗n [20],\nwhere X v = X v 1 1 X v 2 2 . . . X v n n and Z u = Z u 1 1 Z u 2 2 . . . Z u n n . A product of two quantum operators corresponds to a sum (mod 2) of the corresponding pairs (v i , u i ).\nAn [[n, k, d]] stabilizer code Q is a 2 k -dimensional subspace of the Hilbert space H ⊗n 2 stabilized by an Abelian stabilizer group S = ⟨G 1 , . . . , G n −k ⟩, − ̸∈ S [21]. Explicitly,\nEach generator G i ∈ S is mapped according to Eq. (2) in order to obtain the binary check matrix H = (A X |A Z ) in which each row corresponds to a generator, with rows of A X formed by v and rows of A Z formed by u vectors. For generality, we assume that the matrix H may also contain unimportant linearly dependent rows which are added after the mapping has been done. The commutativity of stabilizer generators corresponds to the following condition on the binary matrices A X and A Z :\nA more narrow set of Calderbank-Shor-Steane (CSS) codes [22] contains codes whose stabilizer generators can be chosen to contain products of only Pauli X or Pauli Z operators. For these codes the parity check matrix can be chosen in the form:\nThe dimension of a quantum code is k = n − rank H; for a CSS code this simpliﬁes to k = n − rank G X − rank G Z .\nThe distance d of the quantum code is given by the minimum weight of an operator U which commutes with all operators from the stabilizer S , but is not a part of the stabilizer, U ̸∈ S . In terms of the binary vector pairs (a, b), this is equivalent to a minimum weight of the bitwise OR (a |b) of all pairs satisfying the symplectic orthogonality condition,\nWe consider the toric codes[16] in the restricted sense, with qubits located on the bonds of a square lattice L ξ × L η , with periodic boundary conditions along the directions ξ and η. The stabilizer generators A i ≡\nare formed as the products of X j around each plaquette, and Z j around each vertex (this deﬁnes a CSS code). The corresponding block length is n = 2L ξ L η , and there are r A = r B = L ξ L η − 1 independent generators of each kind, which leaves us with the code of size k = n −r A −r B = 2. This code is degenerate: the degeneracy group is formed by products of the generators A i , B i ; its elements can be visualized as (topologically trivial) loops drawn on the original lattice (in the case of products of A i ), or the dual lattice in the case of products of B i . The two sets of logical operators are formed as the products of X (Z) operators along the topologically non-trivial lines formed by the bonds of the original (dual) lattice (see Fig. 1). The code distance d = min(L ξ , L η ) is given by the minimal weight of such operators.\nIn the following, it will be convenient to consider a lattice with qubits placed on the vertices. Then, if we color every other plaquette to form a checkerboard pattern, we can deﬁne the operators A i as products of X operators around the colored\nplaquettes, and the operators B i as products of Z operators around the white plaquettes (see Fig. 2, Left). Now, the checkerboard code with n = L x L y , where both L x and L y are even, can be deﬁned by taking periodic boundary conditions on the sides of a rectangle of size L x ×L y . The condition ensures that we can maintain a consistent checkerboard pattern. Then, the product of all A i (or of all B i ) gives identity. Thus, the stabilizer is formed by n − 2 independent generators, which again gives k = 2 as in the regular toric codes. The two sets of logical operators are formed by the products of X operators along the topologically non-trivial paths drawn through the colored areas, and the products of Z operators along the topologically non-trivial paths through the white areas (see Fig. 2, Left). The distance of the code, d = min(L x , L y ), corresponds to the shortest topologically non-trivial chain of qubits, graphically, a horizontal or a vertical straight line.\nCompared to the regular toric codes, the checkerboard codes use half as many qubits with the same k and distance. The disadvantage is that the distance is always even. This latter restriction can be lifted by introducing periodicity vectors which are not necessarily parallel to the bonds of the lattice. (Note that a similar trick was used in early small-cluster exact diagonalization studies of the Hubbard model[23]).\nLet us deﬁne two integer-valued periodicity vectors L i = (a i , b i ), i = 1, 2, and identify all points on the lattice which can be connected by a vector of the form m 1 L 1 + m 2 L 2 , with integer m i . The checkerboard pattern is preserved iff both ∥L i ∥ 1 ≡ |a i | + |b i | are even, i = 1, 2. Such a cluster contains\nvertices, and, again, we have k = 2 as for the standard checkerboard codes.\nSince the qubits in the positions shifted by L i are the same, it is easy to see that our code is identical to that on a cluster with periodicity vectors, e.g., L 1 , L 1 + L 2 , and, generally, a cluster with periodicity vectors L \u2032 i = g ij L j , where the integer- valued matrix g ij has the determinant det g = ±1.\nFor a periodicity vector L = (a, b) with a + b even, the shortest topologically non-trivial qubit chain has ∥L∥ ∞ ≡ max( |a|, |b|) operators which leads to the code distance:\nExample 1. A family of near-optimal odd-distance checker- board codes can be introduced by taking L 1 = (2t + 1, 1), L 2 = ( −1, 2t + 1), t = 1, 2, . . .. Such codes have the parameters [[1 + (2t + 1) 2 , 2, 2t + 1]]; explicitly: [[10, 2, 3]] (illustrated in Fig. 2, Right), [[26, 2, 5]], [[50, 2, 7]], . . . .\nExample 2. The original toric codes are recovered by taking L i along the diagonals, L 1 = (L ξ , L ξ ), L 2 = ( −L η , L η ), so that ∥L i ∥ 1 are always even, thus n = 2L ξ L η , k = 2, and d = min(L ξ , L η ). For odd distances, taking L ξ = L η = d, we have the codes [[18, 2, 3]], [[50, 2, 5]], [[98, 2, 7]], . . . .\nWe now construct a version of rotated toric codes on clusters with at least one of the periodicity vectors L i violating the checkerboard pattern, e.g., ∥L 1 ∥ 1 odd. Since the checkerboard pattern cannot be maintained, we deﬁne identical stabilizer generators in a non-CSS form, with the stabilizer generators G i = ZXXZ on each plaquette given by the products of Z operators along one diagonal, and X operators along the other diagonal. With periodic boundary conditions, the product of all G i is an identity, and this is the only relation between these operators on a non-bipartite cluster. Thus, here we have only one encoded qubit, k = 1.\nThe operators G i can be viewed as local Clifford (LC) transformed A i or B i operators of the toric code. It is easy to see that the logical operators have to correspond to topologically non-trivial closed chains of qubits, as for the bipartite case. However, in order to close the loop, we have to take only the translation vectors with ∥L∥ 1 even. For example, if ∥L 1 ∥ 1 is odd and particularly small, the minimal chain could wrap twice around the direction given by L 1 . Since the two turns could share some of the qubits, it is difﬁcult to come up with a general expression for the distance.\nExample 3. Checkerboard-like codes can be obtained by taking L x or L y odd. Smallest codes in this family correspond to L x = L y = d; they have parameters [[d 2 , 1, d]], where d = 2t + 1. Explicitly, [[9, 1, 3]], [[25, 1, 5]], [[49, 1, 7]], . . . .\nExample 4. A family of smallest odd-distance rotated toric codes [19] is obtained for L 1 = (t+1, t), L 2 = ( −t, t+1), t = 1, 2, . . .. These codes have the parameters [[t 2 +(t+1) 2 , 1, 2t+ 1]]. Explicitly, [[5, 1, 3]], [[13, 1, 5]], [[25, 1, 7]], [[41, 1, 9]], . . . .\nThe ﬁnite-rate generalization[18] of the toric code relies on hypergraph theory, with the square lattice generalized to a product of hypergraphs (each corresponding to a parity check matrix of a classical binary code). We ﬁrst recast the original construction into an algebraic language.\nLet H 1 (dimensions r 1 × n 1 ) and H 2 (dimensions r 2 × n 2 ) be two binary matrices. The associated (hypergraph-product) quantum code[18] is a CSS code with the stabilizer generators\nHere each matrix is composed of two blocks constructed as Kronecker products (denoted with \u201c ⊗\u201d), and E i and E i , i = 1, 2, are unit matrices of dimensions given by r i and n i , respectively. The matrices G X and G Z , respectively, have r 1 r 2 and n 1 n 2 rows (not all of the rows are linearly independent), and they both have n ≡ r 2 n 1 + r 1 n 2 columns, which gives the block length of the quantum code. The commutativity condition G X G T Z = 0 is obviously satisﬁed by Eq. (9) since the Kronecker product obeys (A ⊗ B)(C ⊗ D) = AC ⊗ BD.\nNote that the construction (9) is somewhat similar to prod- uct codes introduced by Grassl and R¨otteler[24]. The main difference is that here the check matrix and not the generator matrix is written in terms of direct products.\nThe parameters [[n, k, d]] of thus constructed quantum code are determined by those of the four classical codes which use the matrices H 1 , H 2 , H T 1 , and H T 2 as the parity-check matrices. The corresponding parameters are introduced as\nwhere we use the convention [18] that the distance d i (d i ) = ∞ if k i (k i ) = 0. The matrices H i are arbitrary, and are allowed to have linearly-dependent rows and/or columns. As a result, both k i = n i − rank H i and k i = n i − rank H i can be non- zero at the same time as the block length of the \u201ctransposed\u201d code C H T\nSpeciﬁcally, for the hypergraph-product code (9), we have n = r 2 n 1 + r 1 n 2 , k = 2k 1 k 2 − k 1 s 2 − k 2 s 1 with s i = n i − r i , i = 1, 2 (Theorem 7 from Ref. [18]), while the distance d satisﬁes the conditions d ≥ min(d 1 , d 2 , d 1 , d 2 ) (Theorem 9 from Ref. [18]), and two upper bounds (Lemma 10 from Ref. [18]): if k 1 > 0 and k 2 > 0, then d ≤ d 1 ; if k 2 > 0 and k 1 > 0, then d ≤ d 2 .\nThese parameters can also be readily established from the stabilizer generators in the form of Eq. (9). For example, the dimension of the quantum code follows from\nProposition 1. The number of linearly independent rows in matrices G X and G Z given by Eq. (9) is rank G X = r 1 r 2 − k 1 k 2 and rank G Z = n 1 n 2 − k 1 k 2 .\nProof: The matrices G X and G Z have r 1 r 2 and n 1 n 2 rows, respectively. To count the number of linearly-dependent rows in G X , we notice that the equations (a T ⊗ b T ) · (E 2 ⊗ H 1 ) = 0 and (a T ⊗ b T ) · (H 2 ⊗ E 1 ) = 0 are both satisﬁed iff a ∈ C H T\n, thus there are k 1 k 2 linear relations between the rows of G X , and we are left with r 1 r 2 − k 1 k 2 linearly-independent rows. Similarly, there are n 1 n 2 − k 1 k 2 linearly independent rows in G Z .\nTo prove the lower bound on the distance, consider a vector u such that G X · u = 0 and wgt(u) < d. We construct a quantum code in the form (9) from the matrices H \u2032 1 , H \u2032 2 formed only by the columns of respective H i , i = 1, 2, that are involved in the product G X ·u. According to Proposition 1, the reduced code has k = 0, so that the reduced u \u2032 , G \u2032 X · u \u2032 = 0, has to be a linear combination of the rows of G \u2032 Z . The rows of G \u2032 Z are a subset of those of G Z , with some all-zero columns\nremoved; thus the full vector u is also a linear combination of the rows of G Z . Similarly, a vector v such that G Z · v = 0 and wgt(v) < d, is a linear combination of rows of G X .\nThe upper bound is established by considering vectors u ≡ (e ⊗ c, 0) with c ∈ C H 1 , which requires k 1 > 0. Vector e, wgt(e) = 1, for which u is not a linear combination or rows of G Z , exists only when k 2 > 0. The other upper bound is established by considering vectors (0, c ⊗ e) with c ∈ C H 2 .\nIn Ref. [18], only one large family of quantum codes based on the hypergraph-product ansatz (9) is given. Namely, the matrix H 1 is taken as a full-rank parity matrix of a binary LDPC code with parameters C H 1 = [n 1 , k 1 , d 1 ] (r 1 = n 1 −k 1 ), so that the transposed code has dimension zero, k 1 = 0. The second matrix is taken as H 2 = H T 1 , so that C H T\nThen Eq. (9) deﬁnes a quantum LDPC code with parameters Q orig = [[(n 1 − k 1 ) 2 + n 2 1 , k 2 1 , d 1 ]], \t (11)\nwhere the weight of each row of G X , G Z equals to the sum of the row-weight and the column-weight of H 1 .\nExample 5. Let H 1 be a parity-check matrix of the repeti- tion code [d, 1, d]. Then the quantum code has the param- eters [2d 2 − 2d + 1, 1, d]. Explicitly, [[13, 1, 3]], [[25, 1, 4]], [[41, 1, 5]],. . . \u2014 these parameters are inferior compared to the original toric code family, cf. Examples 3, 4.\nInstead of using full-rank parity-check matrices[18], let us start with a pair of binary codes with square parity-check matrices H i , such that d 1 = d 1 , d 2 = d 2 . Then, automatically, k i = k i = n i − rank H i . The hypergraph-product ansatz (9) gives the code with the parameters\nNote that the rate R = k/n of this family is up to twice that of the family originally suggested in Ref. [18], see Sec. IV-B.\nExample 6. The standard toric codes are recovered by taking for H 2 = H 1 the circulant matrix of a repetition code. The code parameters are [[2d 2 1 , 2, d 1 ]], cf. Example 2.\nWe suggest two general ways to obtain suitable square parity check matrices. First, if we start from an [n 1 , k 1 , d 1 ] LDPC code with the full-rank parity check matrix P , we can construct the following symmetric matrix,\nSecond construction assumes that C H i are cyclic LDPC codes. The full circulant matrices H i are constructed from co- efﬁcients of check polynomials h i (x). The check polynomials of the transposed code, h i (x) = h i (x n i −1 ) mod(x n i − 1), are just the original check polynomials reversed, and the original and transposed codes have the same parameters.\nIf we have two symmetric parity-check matrices, H i = H T i , i = 1, 2 [e.g., from Eq. (13)], the full hypergraph-product code (9) can be transformed into a direct sum of two indepen- dent codes, each with the following non-CSS check matrix\nThus, we can reduce by half both the blocklength and the number of encoded qubits, i.e., keeping the rate of Eq. (12) but doubling the relative distance.\nFor a cyclic LDPC code C H with a palindromic check polynomial, x deg h(x) h(1/x) = h(x), such that n − deg h(x) is even, we can always construct a symmetric circulant matrix H from the polynomial x [n −deg h(x)]/2 h(x).\nExample 7. If H 1 = H 2 are symmetric check matrices of a cyclic [n 1 , k 1 , d 1 ] code corresponding to a palindromic polynomial h(x), then the quantum code has parameters [[n 2 1 , k 2 1 , d 1 ]]. In particular, for n 1 = 17 and h(x) = 1 + x 3 + x 4 + x 5 + x 6 + x 9 we obtain [[289, 81, 5, w = 12]] code, and for h(x) = 1 + x, we recover the non-bipartite checkerboard codes from Example 3.\nFinally, let us construct a generalization of the regular \u201cbipartite\u201d checkerboard codes. We start with a pair of binary codes with the parity check matrices of even size\nconstructed from the half-size matrices (\u201ctiles\u201d) a i , b i with the distances of the classical codes C H i and C H T\ngiven by d i and d i , i = 1, 2, where the check matrix H 2 =\nis equivalent to H p 2 and can be rendered to the latter form by row and column permutations. It is convenient to introduce notation for the dimensionality of symmetric subspaces of C H 1 and C H p\n⊗ ( 1 1 ) as k s i ≡ n i /2 − rank(a i + b i ), and for asymmetric subspaces as k a i ≡ k i − k s i , i = 1, 2 (analogously we deﬁne k s i and k a i ). We deﬁne half-size CSS matrices [cf. Eq. (9)]\nwhere the identity matrices E (1/2) i , E (1/2) i \t have dimensions r i /2, n i /2, half-size compared to those in Eq. (9).\nProposition 2. The numbers of linearly independent rows in matrices (17) are rank G X = r 1 r 2 /2 − k s 1 k s 2 − k a 1 k a 2 and rank G Z = n 1 n 2 /2 − k s 1 k s 2 − k a 1 k a 2 .\nProof: To count the number of linearly-dependent rows in G X , we notice that the equations υ T · (E (1/2) 2 \t ⊗ H 1 ) = 0 and υ T · (H 2 ⊗ E (1/2) 1 ) = 0 are both satisﬁed for ansatz\n, thus there are k s 1 k s 2 + k a 1 k a 2 linear relations between the rows in G X , and we are left with rank G X = r 1 r 2 /2 − k s 1 k s 2 − k a 1 k a 2 linearly-independent rows. Similarly, we prove that rank G Z = n 1 n 2 /2 − k s 1 k s 2 − k a 1 k a 2 .\nTheorem 2. A quantum CSS code in Eqs. (16) and (17) has the parameters:\nwhere s i = n i − r i , i = 1, 2. In addition, for k 1 > 0 and k 2 > 0 the upper bound d ≤ d 1 exists and for k 2 > 0 and k 1 > 0 the upper bound d ≤ d 2 exists.\nProof: The number of encoded qubits k follows from Proposition 2. The lower bound on the distance can be established as for the original hypergraph-product codes in Sec. IV-A, except now the reduced binary check matrices H \u2032 1 , H \u2032 2 should preserve the tiled form (16). Hence, for every column involved in the product G X · u, we may need to insert two columns into the reduced matrices; thus we need wgt(u) < d/2 which reduces the lower bound on the distance. The two upper bounds can be established by considering vectors (e ⊗ c, 0) with c ∈ H 1 and (0, c ⊗ e) with c ∈ H 2 , exactly as for the hypergraph-product codes in Sec. IV-A.\nTheorem 3. Suppose a i and b i , i = 1, 2 in Eq. (16) are such that k a i = 0, k s i ̸= 0, r i = n i and binary codes with generator matrices a i + b i and a T i + b T i are not distance 1 codes. Then the quantum code in Eq. (17) has parameters [[n 1 n 2 , 2k 1 k 2 , min(d 1 , d 2 , d 1 , d 2 )]], cf. Eq. (12).\nThe proof is similar to the proof of Theorem 2. The additional restrictions on the binary codes guarantee that a vector u of weight less than d can only overlap with columns of H i in less than d positions even after the symmetric counterparts are added.\nIf we start from distance-d LDPC codes with half size square parity matrices H (1/2) i \t [e.g., from Eq. (13)] then a i = H (1/2) i \t + E (1/2) and b i = E (1/2) in Eq. (16) lead to distance-2d code satisfying Theorem 3. Alternatively, one can start with two cyclic LDPC codes with even blocksize n i , i = 1, 2, and the check polynomials h i (x) that divide x n i /2 −1. The corresponding square circulant parity-check matrices H 1 and H 2 (and H p 2 ) satisfy (16). The generator polynomials,\n(20) and their reversed indicate that k a i = 0.\nExample 8. If H 1 is the square parity matrix of a cyclic [n 1 , k 1 , d 1 ] code corresponding to the polynomial h(x) that divides 1 − x n 1 /2 and H 2 = H 1 then the quantum code has parameters [[n 2 1 , 2k 2 1 , d 1 ]]. For n 1 = 30 and h(x) = 1 + x + x 3 + x 5 we obtain [[900, 50, 14, w = 8]] code. For h(x) = 1 + x, we recover the bipartite checkerboard codes from Sec. III-B.\nWe suggested several simple techniques to improve existing quantum LDPC codes, toric codes, and generalized toric codes with asymptotically ﬁnite rate (quantum hypergraph-product codes[18]). In the latter case we increased the rate of the code family originally proposed in Ref. [18] by up to four times.\nWe are grateful to I. Dumer and M. Grassl for multiple helpful discussions. This work was supported in part by the U.S. Army Research Ofﬁce under Grant No. W911NF-11-1- 0027, and by the NSF under Grant No. 1018935."},"refs":[{"authors":[{"name":"P. W. Sho"}],"title":{"text":"Phys"}},{"authors":[{"name":"E. Knil"},{"name":"R. Laﬂamm"}],"title":{"text":"Phys"}},{"authors":[{"name":"C. Bennet"},{"name":"D. DiVincenz"},{"name":"J. Smoli"},{"name":"W. Wootter"}],"title":{"text":"Phys"}},{"authors":[{"name":"E. Knil"},{"name":"R. Laﬂamm"},{"name":"W. H. Zure"}],"title":{"text":"Science, vol"}},{"authors":[{"name":"E. Denni"},{"name":"A. Kitae"},{"name":"A. Landah"},{"name":"J. Preskil"},{"name":"J. Math"}],"title":{"text":"Phys"}},{"authors":[{"name":"A. M. Stean"}],"title":{"text":"Phys"}},{"authors":[{"name":"A. G. Fowle"},{"name":"C. D. Hil"},{"name":"L. C. L. Hollenber"}],"title":{"text":"Phys"}},{"authors":[{"name":"A. G. Fowle"},{"name":"S. J. Devit"},{"name":"L. C. L. Hollenber"}],"title":{"text":"Quant"}},{"authors":[{"name":"R. Raussendor"},{"name":"J. Harringto"}],"title":{"text":"Phys"}},{"authors":[{"name":"L. M. K. Vandersype"},{"name":"M. Steffe"},{"name":"G. Breyt"},{"name":"C. S. Yannon"},{"name":"R. Clev"},{"name":"I. L. Chuan"}],"title":{"text":"Phys"}},{"authors":[{"name":"L. M. K. Vandersype"},{"name":"M. Steffe"},{"name":"G. Breyt"},{"name":"C. S. Yannon"},{"name":"M. H. Sherwoo"},{"name":"I. L. Chuan"}],"title":{"text":"Nature, vol"}},{"authors":[{"name":"S. Guld"},{"name":"M. Rieb"},{"name":"G. P. T. Lancaste"},{"name":"C. Beche"},{"name":"J. Eschne"},{"name":"H. H¨affne"},{"name":"F. Schmidt-Kale"},{"name":"I. L. Chuan"},{"name":"R. Blat"}],"title":{"text":"Nature, vol"}},{"authors":[{"name":"J. Chiaverin"},{"name":"D. Leibfrie"},{"name":"T. Schaet"},{"name":"M. D. Barret"},{"name":"R. B. Blakesta"},{"name":"J. Britto"},{"name":"W. M. Itan"},{"name":"J. D. Jos"},{"name":"E. Knil"},{"name":"C. Lange"},{"name":"R. Ozer"},{"name":"D. J. Winelan"}],"title":{"text":"Nature, vol"}},{"authors":[{"name":"A. Friedenaue"},{"name":"H. Schmit"},{"name":"J. T. Gluecker"},{"name":"D. Porra"},{"name":"T. Schaet"}],"title":{"text":"Nature Physics, 2008"}},{"authors":[{"name":"K. Ki"},{"name":"M.-S. Chan"},{"name":"S. Korenbli"},{"name":"R. Isla"},{"name":"E. E. Edward"},{"name":"J. K. Freerick"},{"name":"G.-D. Li"},{"name":"L.-M. Dua"},{"name":"C. Monro"}],"title":{"text":"Nature, vol"}},{"authors":[{"name":"A. Y. Kitae"}],"title":{"text":"Ann"}},{"authors":[{"name":"H. Bombi"},{"name":"M. A. Martin-Delgad"}],"title":{"text":"Phys"}},{"authors":[{"name":"J.-P. Tillic"},{"name":"G. Z´emo"}],"title":{"text":"Information Theory, 2009"}},{"authors":[{"name":"A. A. Kovale"},{"name":"I. Dume"},{"name":"L. P. Pryadk"}],"title":{"text":"Phys"}},{"authors":[{"name":"A. R. Calderban"},{"name":"E. M. Rain"},{"name":"P. M. Sho"},{"name":"N. J. A. Sloan"}],"title":{"text":"IEEE Trans"}},{"authors":[{"name":"D. Gottesma"},{"name":"D. thesi"}],"title":{"text":"Ph"}},{"authors":[{"name":"A. R. Calderban"},{"name":"P. W. Sho"}],"title":{"text":"Phys"}},{"authors":[{"name":"E. Dagott"},{"name":"R. Joyn"},{"name":"A. More"},{"name":"S. Bacc"},{"name":"E. Gaglian"}],"title":{"text":"Phys"}},{"authors":[{"name":"M. Grass"},{"name":"M. Rottele"}],"title":{"text":"Information Theory, 2005"}}]},"file":{"jsonClass":"File","file":"/home/arnfred/Code/trailhead/resources/isit2012/1569566925.pdf"},"links":[],"meta":{"jsonClass":"HashMap$HashTrieMap","sessionid":"S2.T9.4","endtime":"12:50","authors":"Alexey Kovalev, Leonid Pryadko","date":"1341232200000","papertitle":"Improved quantum hypergraph-product LDPC codes","starttime":"12:30","session":"S2.T9: Quantum Codes from Classical Codes,","room":"Stratton West Lounge (201)","paperid":"1569566925"},"cluster":{"jsonClass":"Map$EmptyMap$"}}
