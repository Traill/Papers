{"id":"1569565579","paper":{"title":{"text":"On Densifying Coding Opportunities in Instantly Decodable Network Coding Graphs"},"authors":[{"name":"Sameh Sorour"},{"name":"Shahrokh Valaee"}],"abstr":{"text":"Abstract\u2014In this paper, we propose a coding strategy that maximizes the density of the coding opportunities in instantly decodable network coding (IDNC). Using the graph representa- tion of IDNC, we derive the expression for the expected evolutions of coding opportunities after the transmission of any arbitrary coded packet and show that serving the maximum number of receivers, with the largest numbers of missing packets and era- sure probabilities, tends to both maximize the expected number of coding opportunities and increase the expected coding density almost monotonically. Simulation results justify our theoretical ﬁndings and demonstrate the importance of maintaining high coding density when optimizing long-term parameters."},"body":{"text":"Network coding has been widely used in improving the efﬁciency of packet delivery to different receivers of a network [1]\u2013[12]. Some of these works have considered a subclass of NC known as instantly decodable network coding (IDNC), in which coded packets must be decoded at their recep- tion instant and cannot be stored for future decoding. This opportunistic NC scheme has attracted attention due to its desirable properties, such as fast packet recovery, simple XOR coding and decoding, and no buffer requirements. In most of these IDNC works, the selection of targeted receivers and combined packets to optimize a desired parameter for a particular transmission do not consider the effect of this selection on resulting coding opportunities in subsequent trans- missions. Although this selection may optimize the desired parameter in this transmission, this parameter may not be optimized in subsequent transmissions due to fewer resulting coding opportunities. Nonetheless, an apparently sub-optimal solution in one transmission may result in much diverse coding opportunities in subsequent transmissions, which may result in an overall better performance.\nTo give an example, let us assume a network of 4 re- ceivers and 6 packets, in which receivers r 1 , r 2 and r 3 are missing packets p 1 , p 2 and p 3 , respectively, whereas receiver r 4 is missing packets p 4 , p 5 and p 6 . In this system, assume that the available coding opportunities are {p 1 ⊕ p 2 ⊕ p 3 , p 1 ⊕ p 4 , p 2 ⊕ p 5 , p 3 ⊕ p 6 }. Finally, assume that the parameter to be optimized is the completion time, deﬁned as the number of packet transmissions until all re- ceivers correctly receive their missing packets. Intuitively, one may think that the optimal completion time is obtained if\nthe maximum number of missing packet requests is served in each transmission. In this case, the sender should ﬁrst send the packet combination p 1 ⊕ p 2 ⊕ p 3 as it serves the maximum number of requests in the ﬁrst transmission. How- ever, this selection will result in three packets {p 4 , p 5 , p 6 } with no coding opportunities between them, which need 3 additional transmissions to be served. On the other hand, a ﬁrst transmission serving less packet requests (such as p 1 ⊕p 4 ) keeps 2 coding opportunities in the system, which can be satisﬁed by only 2 additional transmissions. Consequently, the selection of coded transmissions that preserve a large number of coding opportunities in the system may result in a better completion time. This can also apply to other optimization parameters, such as throughput, decoding delay and in-order delivery delay, widely studied in the literature.\nDespite its importance illustrated by the aforementioned example, the number of coding opportunities may not be expressive in itself. Indeed, a selected transmission may result in a larger number of coding opportunities because it serves very few packet requests, and thus the number of remaining requests will be also large. Thus, this apparently large number of coding opportunities will not be enough to foster efﬁcient combinations between the large number of remaining requests. Consequently, it is important not only to maximize the number of coding opportunities but to also densify them with respect to the number of remaining packet requests. We thus deﬁne the coding density as the number of actual coding opportunities normalized by the maximum number of coding opportunities that could exist for the same number of packet requests.\nIn this paper, we aim to answer the following question: What are the coding selection strategies that can maximize the coding density after each transmission and over the transmission horizon of a frame of packets? To answer this question, we introduce the multicast graph representation of IDNC, in which the edge set of the graph represents the set of all coding opportunities between all missing requested and undesired packets by all receivers. We then derive an expression for the expectation of the edge set size evolution after ignoring the identities of the packets requested by the different receivers and considering only their numbers. From this expression, we show that the best strategy to increase the expected coding density is to serve the maximum number\nof receivers having the largest number of missing packets and erasure probabilities. Finally, we compare our identiﬁed strategy with several well-known IDNC strategies and show that it achieves a much better coding density and completion delay performance, compared to the widely proposed strategy in the opportunistic NC literature that serves the maximum number of receivers in each transmission. These contributions and ﬁndings demonstrate the importance of coding density in optimizing long-term parameters, which can greatly open paths for future efforts in designing more efﬁcient online NC algorithms, optimizing different performance metrics.\nThe rest of the paper is organized as follows. In Section II, the system model is illustrated. We introduce the IDNC graph in multicast scenarios and our metric of coding density in Section III. We then derive and analyze the expected edge set size evolution in Section IV. The performance of this strategy is compared to other strategies in Section V. Finally, Section VI concludes the paper.\nThe model consists of a wireless sender that is broadcasting a frame (denoted by N ) of N source packets to a set (denoted by M) of M receivers. Different receivers require different (but maybe partially overlapping) subsets of these N broadcasted packets. Deﬁne the demand ratio of a receiver as the ratio of the number of its requested packets in the frame to the frame size N . The sender initially transmits the N packets uncoded in an initial transmission phase. Each sent packet can be successfully received at receiver i with probability q i , which is assumed to be ﬁxed during the frame transmission period. Receivers feed back to the sender a positive one-bit acknowledgement (ACK) for each received packet. At the end of the initial transmission phase, three feedback sets are attributed to each receiver i:\n\u2022 The Has set (H i ) is deﬁned as the set of requested and undesired packets correctly received by receiver i.\n\u2022 The Lacks set (L i = N \\ H i ) is deﬁned as the set of requested and undesired packets not received by i.\n\u2022 The Wants set (W i ⊆ L i ) is deﬁned as the set of requested packets that receiver i has not yet received.\nThe cardinalities of the Has, Lacks and Wants sets of receiver i are denoted by i , ϕ i and ψ i , respectively. After the initial transmission phase, a recovery phase starts, in which the sender exploits the diversity of received packets to transmit network coded combinations. By the deﬁnition of IDNC, these combinations must be either decoded at their reception instant or discarded. The received ACKs at the sender after each transmission are used to update the different sets. This process is repeated until all receivers obtain all the packets.\nThe IDNC graph deﬁnes the set of all feasible instantly decodable packet combinations. An initial idea of the IDNC graph was introduced in [4], [13]. This graph, which we will denote by G ρ (V ρ , E ρ ), is constructed by ﬁrst inducing a vertex v ij in V ρ for each packet j ∈ W i , ∀ i ∈ M. Two vertices v ij\nand v kl in G ρ are connected by an edge in E ρ if any one of the following conditions is true:\nvertex is in the Has set of the receiver of the other vertex. Consequently, each edge between two vertices in the graph represents a coding opportunity, which is deﬁned as an op- portunity of generating an instantly decodable packet for the two receivers inducing these vertices. Given this graph, we can easily deﬁne the set of all feasible packet combinations in IDNC as the set of packet combinations deﬁned by all the cliques in G ρ . The sender can generate an IDNC packet for a given transmission by XORing all the packets identiﬁed by the vertices of a selected clique κ ρ in G ρ .\nIn multicast scenarios, we can enhance the coding opportu- nities at the receivers that are not considered for reception of a requested packet, by delivering undesired packets to them. Although these packets are not requested at these receivers, their reception along the steps of the recovery phase, when they are not targeted with requested packets, will enlarge their Has sets. According to Condition C2, this will increase the chances of creating more coding opportunities that can serve these receivers in the future steps. However, this service of secondary packets should never affect the instant decodability of the requested packets at their intended receivers.\nWe thus introduce a new two-layered graph G(V, E ). The primary layer (or graph) consists of graph G ρ , described above. The secondary layer G σ (V σ , E σ ) is constructed by generating a vertex v ij ∈ V σ for each packet j ∈ L i \\ W i , ∀ i ∈ M, and connecting any two vertices satisfying either C1 or C2. Finally, we connect any two vertices from both subgraphs if either C1 or C2 holds. Figure 1 depicts an example of a feedback table and its corresponding IDNC graph.\nAccording to the design of G, there are no edges between vertices corresponding to the same receiver and thus each receiver can have at most one primary or secondary vertex in any of its cliques. Consequently, the selection of a clique at any transmission is equivalent to the selection of a set\nof receivers to be served by this transmission with one of their missing packets. The determined packets for coding are then implicitly identiﬁed through the selected clique vertices, chosen to optimize the set of targeted receivers.\nSince we mainly aim to deplete the primary graph, we will focus our study on densifying the coding opportunities in it. We deﬁne the coding opportunity density (or coding density for short) D c (G ρ ) for the primary IDNC graph as the ratio of the total number of edges in this graph to the number of edges of a complete graph with the same number of vertices (which corresponds to the deﬁnition of graph density in graph theory). In other words:\nIt is obvious that the maximization of D c (G ρ ) guarantees a large number of coding opportunities with respect to the number of remaining packet requests (i.e. vertices), and thus a large number of receivers and packet requests can be served simultaneously in each IDNC packet.\nFrom the above expression, we can see that, in order to maximize the coding density in each step, the selected cliques should be able to both maximize the number of edges and minimize the vertex set size. The number of vertices is clearly minimized by serving the maximum number of receivers in each transmission (i.e. selecting the maximum clique). However, this selection may decrease the coding density if the numerator is signiﬁcantly reduced. To study this effect, we will derive and analyze the edge set size evolution after any arbitrary transmission. Since clique selection is mainly equivalent to selecting the set of receivers (rather than the set of packets) to be served by this transmission, we will analyze the expected edge set size evolution based on the Has, Lacks and Wants set cardinalities of different receivers. This will be the target of the following section.\nWe ﬁrst introduce the following theorem presenting an expression for the expected evolution of the edge set size of the primary graph when an arbitrary clique is chosen for transmission. Due to space limitations, the proofs of all theorems are omitted from this paper and can be found in [14].\nTheorem 1. Let κ be the clique chosen for transmission at time t in a multicast scenario, and targeting the sets of receivers T ρ (κ) and T σ (κ) with primary and secondary packets, respectively. Deﬁning T (κ) = T ρ (κ) T σ (κ), the expected edge set cardinality of the IDNC primary graph at time t + 1 is expressed as:\nand E ∆ (t) i is the expected degree of a vertex of receiver i at time t.\nFrom the above theorem, we can see that the ﬁrst term in the right-hand side of (2) is the expected edge set cardinality at time t. Thus, the edge set size at time t + 1 beneﬁts from its maximization in all previous times. To determine the policy that maximizes the one-step evolution of the edge set size, we will analyze the second, third and fourth terms.\nThe second term in (2) represents an expected reduction in the edge set size due to the possible disappearance of the primary targeted vertices. This disappearance results in the removal of their adjacent edges at time t, which is reﬂected in the E [∆ t i ] term. It also results in the loss of the potential improvement in these degrees if they were kept in the graph, which is reﬂected in the γ i term. This loss is a natural outcome of the recovery transmission process and is unavoidable. Nonetheless, we can still reduce the effect of this loss component by serving the vertices with smaller degrees. The following theorem compares the expected vertex degrees of two receivers given the sizes of their Has and Wants sets.\nNow, if q i < q h and ψ i > ψ h , 1 2 q i E [∆ i ] < 1 2 q h E [∆ h ]. Consequently, serving receivers with largest Wants sets and erasure probabilities, and smallest Has sets, results in a smaller loss in the resulting edge set size.\nThe third and fourth terms in (2) represent the change in the degrees of the remaining vertices in the primary graph, which are quantiﬁed by ψ i α i and ψ i β i for the targeted and non-targeted receivers, respectively. The following theorem describes the relation between these two terms.\nTheorem 3. The increase in the degrees of the remaining vertices of any receiver is larger when it is targeted than when it is not. In other words, α i ≥ β i ∀ i ∈ M.\nNow, moving a receiver i from the non-targeted set to the targeted set results in adding ψ i 2 (α i − β i ) edges to G ρ . This term is larger when ψ i is larger, and thus moving a receiver with a larger Wants set to the targeted receiver set adds more edges to the primary graph than moving a receiver with a smaller Wants set. Consequently, a larger increase in the expected edge set size is obtained when targeting the maximum number of receivers having larger Wants sets.\nAnother important insight about the values of α i and β i can be inferred from the analysis of their components Φ ik and Λ ik . Since the terms k∈T ρ (κ)\nare subtractive terms in α i and β i , respectively, selecting the receivers with smaller values of Φ ik (q i ) and Φ ik (0) to be the primary targeted receivers increases the values of α i and β i . Now, if q k < q h , ψ k > ψ h and k < h , we have:\nq k ( k − ψ k + 1) < q h ( h − ψ h + 1) \t (8) ⇒ Φ ik (q i ) < Φ ih (q i ) and Φ ik (0) < Φ ih (0) (9)\nConsequently, the receivers having larger Wants sets and erasure probabilities, and smaller Has sets, have smaller values of Φ ik (q i ) and Φ ik (0). Consequently, maximizing the number of such receivers in the set of primary targeted receivers maximizes the values of both α i and β i .\nΛ ik (0) are additive terms to α i and β i , respectively, selecting the receivers with larger values of Λ ik (q i ) and Λ ik (0) to be the secondary targeted receivers increases the values of α i and β i . The values of Λ ik (q i ) and Λ ik (0) are larger for receivers having larger value of q k ψ k and thus having larger Wants sets but lower erasure probabilities.\nFrom the above theorems and discussion, we can infer that, after a given transmission, the edge set size in the primary graph is maximized by targeting the receivers, having the largest Wants sets and erasure probabilities, with primary packets, then targeting the remaining receivers, having the largest Want sets and lower erasure probabilities, with sec- ondary packets. Mathematically, we can express this policy as follows:\nwhere G σ (κ ∗ ρ ) is the subgraph in G σ consisting of vertices that are each adjacent to all the vertices in κ ∗ ρ , and m and n are biasing exponents. We will refer to this strategy as the worst receiver layered targeting (WoRLT) strategy. This strategy both maximizes the coefﬁcients α i and β i for all i ∈ M and multiplies the maximum number of largest ψ i values with their larger coefﬁcients α i . It also removes the vertices with smaller degrees from the graph. All these effects of the WoRLT\nstrategy maximizes the expected coding opportunities at time t + 1.\nIn this section, we study the performances of our identiﬁed strategies in maximizing the coding density of the system during the transmission of a frame, and compare them to other well-known strategies. The simulation scenario consists of 20 packets and 50 receivers having different packet erasure probabilities while maintaining the average erasure probability (ε) constant. These erasure probabilities are assumed to be ﬁxed during the transmission of a frame but change from frame to frame during the simulation. The tested strategies in this simulations are:\n\u2022 MWC-R: Maximum weight clique (MWC) selection, in which the weight of vertex v ij is deﬁned by q i .\n\u2022 MWC-W: MWC selection that follows the WoRLT strat- egy deﬁned in (10) and (11) (n = m = 3).\nAll ﬁgures represent the average coding density of the graph against the transmission index. This average is computed over a large number of iterations, in each of which we compute the graph density after each transmission and average all the densities evaluated at the same transmission index.\nThe left (right) subﬁgure of Figure 2 depicts the coding density evolution inside the IDNC graph for M = 50 and N = 20 (M = 60 and N = 30) for all the aforementioned strategies. The erasure probabilities of different receivers take values in the range of 0.01 to 0.3, such that ε = 0.15. Also, the average demand ratio for each of the receivers is uniformly distributed between 0.4 and 0.6. From Figure 2, we can draw the following observations.\nWe can clearly see that the WoRLT strategy considerably outperforms all other receiver selection strategies. Moreover,\nwe can see that it monotonically increases the coding density, which exhibits its ability to increase the coding density over the full course of the frame transmission. Also, we can see that the coding density of the WoRLT strategy reaches 1 much faster than all the other schemes. Given the deﬁnition of the coding density in (1), reaching a density of 1 means that we have a complete graph, which can thus be satisﬁed with one transmission. Consequently, the WoRLT strategy reaches completion much faster than the other ones, which justiﬁes the importance of maximizing the coding density in the graph.\nAnother important result is that the MC strategy, serving the maximum number of receivers (or requests) in each transmission, and widely considered in most opportunistic NC literature, results in a very bad evolution of coding density. We can infer from Figure 2 that this strategy serves very few large cliques in the very beginning of the recovery phase and then is left with smaller cliques to serve, until it is close to the completion of frame delivery. This can be explained from Theorem 2, showing the high adjacency of vertices with smaller Wants sets. Consequently, the MC strategy mostly targets receivers with smaller Wants sets, which clearly re- duces the edge set size according to Section IV. Despite the common intuition that this strategy can optimize different NC parameters, this result shows that it may not be able to truly do so, especially when the optimized parameter depends on the long term efﬁciency of coding opportunities.\nSince the receiver selection in the WoRLT strategy greatly depends on their erasure probabilities, we test its performance for several erasure probabilities ε w = [0.3, 0.5, 0.7, 0.9] in Figure 3. We can see from the ﬁgure that the WoRLT strategy both always achieves the same monotonically increasing trend of average coding densities, and always outperforms the MC strategy, for all these diverse values of erasure probabilities.\nIn this paper, we investigated the coding strategy that densify the IDNC coding opportunities in wireless multicast scenarios. We ﬁrst derived an expression of the expected edge set size evolution, given feedback set cardinalities. We then analyzed this expression and showed that targeting the maximum number of receivers, having the largest Wants sets and erasure probabilities, tends to both maximize the expected number of coding opportunities and increase the expected coding density almost monotonically. Simulation results justiﬁed our theoretical ﬁndings. They also showed that the commonly considered MC solution in opportunistic NC may not be able to optimize several NC parameters, due to its inability to preserve high coding density throughout the frame transmission. We thus recommend the observance of the coding density increasing strategy when network parameters are optimized over the full course of a frame transmission."},"refs":[{"authors":[{"name":"J. Sundararajan"},{"name":"D. Shah"},{"name":"M. Medard"}],"title":{"text":"Online network coding for optimal throughput and delay - the three-receiver case"}},{"authors":[{"name":"L. Keller"},{"name":"E. Drinea"},{"name":"C. Fragouli"}],"title":{"text":"Online broadcasting with network coding"}},{"authors":[{"name":"E. Drinea"},{"name":"C. Fragouli"},{"name":"L. Keller"}],"title":{"text":"Delay with network coding and feedback"}},{"authors":[{"name":"S. El Rouayheb"},{"name":"M. Chaudhry"},{"name":"A. Sprintson"}],"title":{"text":"On the minimum number of transmissions in single-hop wireless coding networks"}},{"authors":[{"name":"A. Blasiak"},{"name":"R. Kleinberg"},{"name":"E. Lubetzky"}],"title":{"text":"Index coding via linear programming"}},{"authors":[{"name":"P. Sadeghi"},{"name":"R. Shams"},{"name":"D. Traskov"}],"title":{"text":"An optimal adaptive network coding scheme for minimizing decoding delay in broadcast erasure chan- nels"}},{"authors":[{"name":"D. Nguyen"},{"name":"T. Nguyen"},{"name":"X. Yang"}],"title":{"text":"Multimedia wireless transmission with network coding"}},{"authors":[{"name":"H. Seferoglu"},{"name":"A. Markopoulou"}],"title":{"text":"Video-aware opportunistic network coding over wireless networks"}},{"authors":[],"title":{"text":"Opportunistic network coding for video streaming over wireless"}},{"authors":[{"name":"J. Sundararajan"},{"name":"P. Sadeghi"},{"name":"M. M´edard"}],"title":{"text":"A feedback-based adaptive broadcast coding scheme for reducing in-order delivery delay"}},{"authors":[{"name":"S. Sorour"},{"name":"S. Valaee"}],"title":{"text":"On minimizing broadcast completion delay for instantly decodable network coding"}},{"authors":[],"title":{"text":"Minimum broadcast decoding delay for generalized instantly de- codable network coding"}},{"authors":[{"name":"M. Chaudhry"},{"name":"A. Sprintson"}],"title":{"text":"Efﬁcient algorithms for index coding"}},{"authors":[{"name":"S. Sorour"},{"name":"S. Valaee"}],"title":{"text":"Completion delay minimization for instantly decodable network codes"}},{"authors":[{"name":"R. Costa"},{"name":"D. Munaretto"},{"name":"J. Widmer"},{"name":"J. Barros"}],"title":{"text":"Informed network coding for minimum decoding delay"}}]},"file":{"jsonClass":"File","file":"/home/arnfred/Code/trailhead/resources/isit2012/1569565579.pdf"},"links":[],"meta":{"jsonClass":"HashMap$HashTrieMap","sessionid":"S14.T1.2","endtime":"17:20","authors":"Sameh Sorour, Shahrokh Valaee","date":"1341507600000","papertitle":"On Densifying Coding Opportunities in Instantly Decodable Network Coding Graphs","starttime":"17:00","session":"S14.T1: Network Erasure Correction","room":"Kresge Rehearsal B (030)","paperid":"1569565579"},"cluster":{"jsonClass":"Map$EmptyMap$"}}
