{"id":"1569556361","paper":{"title":{"text":"Greedy Codes over ℤ 4"},"authors":[{"name":"Kenza Guenda"},{"name":"T. Aaron Gulliver"},{"name":"S. Arash Sheikholeslam"}],"abstr":{"text":"Abstract\u2014In this paper, we consider the construction of lexi- codes by using a 𝐵-ordering over the ring ℤ 4 . This algorithm can be applied to any multiplicative property over ℤ 4 . It is shown that this construction produces many optimal codes over ℤ 4 and also good binary codes."},"body":{"text":"Surprisingly, many good binary linear codes can be con- structed using the following greedy algorithm with minimum distance as the selection criterion. Starting with the all zero vector, all binary vectors of length 𝑛 are considered in lexico- graphic order, and when the distance of a vector to all other vectors in the code is at least 𝛿, the vector is added to the code. Levenstein [11] proved that the resulting code (called lexicode), is linear. Conway and Sloane [6] proved that the lexicodes are linear over ﬁelds of order 2 2 𝑙 , 𝑙 ∈ ℕ. Moreover, they proved linearity when using a more general selection criterion called a turning-set. Brualdi and Pless [5] discussed another generalization of binary lexicodes. They introduced the concept of 𝐵-ordering, which is used in the greedy algorithm instead of the standard basis. Their starting point is a list of binary vectors of length 𝑛, ordered lexicographically with respect to a basis obtained by adding recursively all previous words to the next basis word. They also proved that the resulting lexicodes are linear. Unfortunately, for ﬁelds other than 𝔽 2 , the lexicodes constructed using a 𝐵-ordering are not always linear. To solve this problem, Bonn [3] introduced another concept called forcing linearity. In this case, a list of all vectors over 𝔽 𝑞 of length 𝑛 is searched. This list need not be ordered in a speciﬁc way. If a vector a satisfying 𝑑(a, y) ≥ 𝛿 is found, then a is added to the lexicode as well as all its multiples without checking the minimum distance condition. Surprisingly, the minimum distance condition is satisﬁed for all added words [3, Proposition 1]. Thus the resulting code, which is forced to be linear over all ﬁnite ﬁelds, has a basis composed of the selected vectors a and has minimum distance greater than or equal to the designed distance 𝛿. Azab et al. [1] presented an almost greedy algorithm over ℤ 4 using a 𝐵- ordering and considering the Lee distance.\nRecently, van Zanten and Nengah Suparta [13] generalized the work of Bonn to a more general selection property over an arbitrary ﬁnite ﬁeld 𝔽 𝑞 . They considered a 𝐵-ordering on 𝔽 𝑛 𝑞 . The basis 𝐵 = {b 1 , . . . , b 𝑛 } is ordered with respect to a lexicographically ordered list in a recursive way. By using a multiplicative selection property 𝑃 , they proved that\nthe resulting lexicode 𝐶(𝐵, 𝑃 ) is linear and each vector x ∈ 𝐶(𝐵, 𝑃 ) satisﬁes the property 𝑃 .\nIn this paper, we consider the construction of lexicodes using a 𝐵-ordering over the ring ℤ 4 and a selection property 𝑃 . We deﬁne multiplicative properties over ℤ 4 and give a greedy algorithm over ℤ 4 . Since the code obtained depends on the 𝐵 ordering and the property 𝑃 , we denote it by 𝐶(𝐵, 𝑃 ). Note that this greedy algorithm can be used with any multiplicative property as deﬁned in this paper. We prove that the code 𝐶(𝐵, 𝑃 ) when using a selection property on the weight has covering radius equal to 𝑑 − 1. Hence via the Gray map 𝒢, we prove that the corresponding binary codes 𝒢(𝐶(𝐵, 𝛿)) meet the Gilbert bound. We compare the lexicodes obtained using our algorithm with the optimal codes in [8]. This shows that many of the codes are optimal over ℤ 4 , and several optimal binary codes are also obtained.\nRecall that a selection property 𝑃 on 𝑉 can be considered as a boolean valued function 𝑃 : 𝑉 −→ {True, False} that depends on one variable. We call 𝑃 a multiplicative property if 𝑃 [x] is true implies 𝑃 [3x] is true for all x ∈ 𝑉 . This is slightly different from the deﬁnition given by van Zanten and Nengah Suparta [13]. Our choice is justiﬁed by the arguments given in Remark 1.\nThe remainder of the paper is organized as follows. In Section II we present the main algorithm, and prove that the codes obtained are linear and the selection criteria 𝑃 is satisﬁed for all codewords. In Section III we consider self- orthogonal codes. We prove that the multiplicative condition 𝑥 ⋅ 𝑥 = 0 which results in self-orthogonal codes over ﬁnite ﬁelds is not sufﬁcient for rings, although self-orthogonal codes may be obtained. In Section IV, lexicodes are given based on the Lee-weight criteria. In Section V we prove that the binary codes obtained as the Gray map of codes constructed using the Lee weight selection property meet the Gilbert bound.\nA linear code 𝐶 of length 𝑛 over ℤ 4 is an additive subgroup over ℤ 𝑛 4 . For x ∈ ℤ 𝑛 4 , denote the number of components of x equal to 𝑎 by 𝑛 𝑎 (x). Hence the Hamming weight of x is 𝑤𝑡 𝐻 (x) = 𝑛 1 (x) + 𝑛 2 (x) + 𝑛 3 (x). The Lee weight of x is 𝑤𝑡 𝐿 (x) = 𝑛 1 (x) + 2𝑛 2 (x) + 𝑛 3 (x), and the Euclidean weight of x is 𝑤𝑡 𝐸 (x) = 𝑛 1 (x) + 4𝑛 2 (x) + 𝑛 3 (x). The Hamming, Lee and Euclidean distances 𝑑 𝐻 (x, y), 𝑑 𝐿 (x, y), 𝑑 𝐸 (x, y) between two vectors x and y are 𝑤𝑡 𝐻 (x − y), 𝑤𝑡 𝐿 (x − y) and 𝑤𝑡 𝐸 (x −\ny), respectively. The minimum Hamming, Lee and Euclidean weights, 𝑑 𝐻 , 𝑑 𝐿 and 𝑑 𝐸 of 𝐶 are the smallest Hamming, Lee and Euclidean weights among all nonzero codewords of 𝐶.\nℤ 𝑛 4 is a linear code over ℤ 4 with basis 𝐵 = {𝑏 1 , . . . , 𝑏 𝑛 }. With respect to this basis, we recursively deﬁne a lexicograph- ically ordered list 𝑉 𝑖 = 𝑥 1 , 𝑥 2 , . . . , 𝑥 4 𝑖 as follows\nIn this way ∣𝑉 𝑖 ∣ = 4 𝑖 , and we can identify ℤ 𝑛 4 by 𝑉 𝑛 . Assume now that we have a property 𝑃 which can test if a vector c ∈ ℤ 𝑛 4 is selected or not. If this property is multiplicative, the following greedy algorithm provides lexicodes over ℤ 𝑛 4 .\n2) select the ﬁrst vector a i ∈ 𝑉 𝑖 ∖ 𝑉 𝑖−1 such that 𝑃 [a i + c] and 𝑃 [2a i + c] for all c ∈ 𝐶 𝑖−1 ;\n3) if such an 𝑎 𝑖 exists, then 𝐶 𝑖 := 𝐶 𝑖−1 , 𝑎 𝑖 + 𝐶 𝑖−1 , 2𝑎 𝑖 + 𝐶 𝑖−1 , 3𝑎 𝑖 + 𝐶 𝑖−1 ; otherwise 𝐶 𝑖 := 𝐶 𝑖−1 ;\nFor 0 < 𝑖 ≤ 𝑛, the codes 𝐶 𝑖 are forced to be linear because we take all linear combinations of the selected vectors 𝑎 𝑖1 , . . . , 𝑎 𝑖𝑙 ; 𝑙 ≤ 𝑖. 𝐶 𝑖 has a generating set formed by the selected vectors 𝑎 𝑖1 , . . . , 𝑎 𝑖𝑙 .\nConsidering the greedy algorithm [13, Algorithm A] for ﬁnite ﬁelds, a natural question that arises is, can a vector x ∈ 𝑉 𝑖 ∖ 𝑉 𝑖−1 exist with 𝑃 [x + c] for all c ∈ 𝐶 𝑖 and x /∈ 𝐶 𝑖 . The following lemma, which is an extension of [13, Theorem 2.1], guarantees that such a vector x does not exist.\nLemma 1: Let 𝑃 be a multiplicative property over ℤ 4 , and let a i ∈ 𝑉 𝑖 be such that 𝑃 [a i +c] and 𝑃 [2a i +c] for all c ∈ 𝐶 𝑖−1 , for 𝑖 ≥ 1. Then every x ∈ 𝑉 𝑖 ∖ 𝑉 𝑖−1 satisfying 𝑃 [x + c] and 𝑃 [2x + c] for all c ∈ 𝐶 𝑖 is in 𝐶 𝑖 .\nProof: The proof is by induction on 𝑖. Let 𝑗 > 0 be the ﬁrst index such that 𝑃 [a j ] and 𝑃 [2a j ]. Hence 𝐶 0 = 𝐶 1 = . . . = 𝐶 𝑗−1 = 0, 𝐶 𝑗 = 0, a j , 2a j , 3a j . Let x ∈ 𝑉 𝑗 ∖ 𝑉 𝑗−1 be a vector such that 𝑃 [x + 𝛼a 𝑗 ] and 𝑃 [2x + 𝛼a 𝑗 ] for 0 ≤ 𝛼 ≤ 3. Since x ∈ 𝑉 𝑗 ∖ 𝑉 𝑗−1 , we can write x = 𝛽a j + v for some 𝛽 ∕= 0 and some v ∈ 𝑉 𝑖−1 . If v = 0, then we have x = 𝛽a 𝑗 . Hence x ∈ 𝐶 𝑗 . If v ∕= 0, we ﬁrst take 𝛼 = −𝛽 and obtain 𝑃 [v], then take 𝛼 = −2𝛽 and obtain 𝑃 [2v]. This contradict the assumption on 𝑗.\nLet a i ∈ 𝑉 𝑖 , 𝑖 > 𝑗, be a selected vector such that 𝑃 [a i + c] and 𝑃 [2a i + c] for all c ∈ 𝐶 𝑖−1 . Assume that the lemma holds for all relevant index values less that 𝑖. Now let x ∈ 𝑉 𝑖 ∖ 𝑉 𝑖−1 such that 𝑃 [x + c] and 𝑃 [2x + c] for all c ∈ 𝐶 𝑖 . Since x ∈ 𝑉 𝑖 ∖ 𝑉 𝑖−1 , we can write x = 𝛽a 𝑖 + v for some v ∈ 𝑉 𝑖−1 and 𝛽 ∕= 0. If we take c = −𝛽a 𝑖 + c \u2032 and c = −2𝛽a i + c \u2032 , it follows that 𝑃 [v + c \u2032 ] and 𝑃 [2v + c \u2032 ] for all c \u2032 ∈ 𝐶 𝑖−1 . From the induction assumption we have that v ∈ 𝐶 𝑖−1 . Since x = 𝛽a i + v, hence x ∈ 𝐶 𝑖 .\nLemma 1 shows that when a vector a i ∈ 𝑉 𝑖 is found satisfying Step 2 of Algorithm A, and after extending the list of codewords in Step 3, we can continue the selection procedure by searching the sublist 𝑉 𝑖+1 ∖𝑉 𝑖 . Thus at the end of Algorithm\n𝐴 we have a nested sequence of linear codes 0 = 𝐶 0 ⊂ 𝐶 1 ⊂ . . . ⊂ 𝐶 𝑛 .\nThe set 𝐵 = {𝑎 𝑖1 , . . . , 𝑎 𝑖𝑙 } is a generating set for the code 𝐶 𝑖 . The code 𝐶 𝑛 is the so-called lexicode. This is a maximal code in the sense that it cannot be contained in a larger code with the same generating set and property. Since the codes 𝐶 𝑖 depend only on the selection property 𝑃 and ordering 𝐵, the code 𝐶 𝑛 is denoted by 𝐶(𝐵, 𝑃 ).\nRemark 1: Our deﬁnition of the multiplicative property differs from that of van Zanten and Nengah Suparta [13]. They deﬁned a multiplicative property over a ﬁnite ﬁeld as a boolean valued function 𝑃 for which 𝑃 [x] implies 𝑃 [𝛼x] for all 𝛼 ∈ 𝔽 𝑞 . Since 𝑃 [a 𝑖 + c] holds, then 𝑃 [a 𝑖 + 𝛼c] from Step 2 of [13, Algorithm A]. If the property 𝑃 is multiplicative, then 𝑃 [𝛼 −1 (a 𝑖 + 𝛼c)] = 𝑃 [𝛼 −1 a 𝑖 + c] for all 𝛼 ∈ 𝐹 𝑞 . This is no longer true over rings since there are zero divisors. Hence there are some vectors c ∈ 𝐶 𝑖 which are missing and may not satisfy the property 𝑃 even if the code is linear and the property is multiplicative. This justiﬁes our modiﬁcation of the multiplicative property and adding the constraint in Step 2 to also satisfy 𝑃 [2a 𝑖 + c].\nTheorem 2: For any basis 𝐵 of ℤ 𝑛 4 and any multiplicative selection criteria 𝑃 , the lexicode 𝐶(𝐵, 𝑃 ) is linear and 𝑃 [x] holds for each codeword x ∕= 0.\nProof: The linearity of the code is assured by the code construction. Since 𝑃 [a i + c], 𝑃 [2a i + c] for all c ∈ 𝐶 𝑖−1 , and the property 𝑃 is multiplicative, then for all c ∈ 𝐶 𝑖−1 , we also have 𝑃 [3a i + 3c], and 𝑃 [2a i + 3c]. Since 𝐶 𝑖−1 is linear, this is equivalent to having that 𝑃 [𝛼a i +c] for all c ∈ 𝐶 𝑖−1 . Applying this result for 𝑖 = 1, 2, . . . , 𝑘 sequentially yields that 𝑃 [x] is true for any codeword x ∕= 0, since the vectors a 1 , a 2 , . . . , a k constitute a generating set for the code 𝐶(𝐵, 𝑃 ).\nLet x = 𝑥 1 . . . 𝑥 𝑛 and y = 𝑦 1 . . . 𝑦 𝑛 be two elements of ℤ 𝑛 4 . The inner product of x and y in ℤ 𝑛 4 is deﬁned as x ⋅ y = 𝑥 1 𝑦 1 + . . . + 𝑥 𝑛 𝑦 𝑛 (mod 4). Let 𝐶 be a ℤ 4 linear code of length 𝑛. The dual code of 𝐶 is deﬁned as 𝐶 ⊥ = {𝑥 ∈ ℤ 4 ∣𝑥 ⋅ 𝑐 = 0 for all 𝑐 ∈ 𝐶}. A code is said to be self-orthogonal if 𝐶 ⊂ 𝐶 ⊥ .\nUsing Algorithm A and the selection property 𝑃 [x] is true if and only if x ⋅ x = 0, we obtain linear lexicodes 𝐶(𝐵, 𝑃 ) over ℤ 𝑛 4 . This is because this property is multiplicative over ℤ 4 , i.e., x ⋅ x = 0 implies that 3x ⋅ 3x = 0. Hence from Theorem 2, we have that the code 𝐶(𝐵, 𝑃 ) for this criteria is linear and 𝑃 [x] holds for all x ∈ 𝐶(𝐵, 𝑃 ). Table I presents a number of codes obtained using this selection property. In the case of lexicodes over ﬁelds, this selection criteria is sufﬁcient to produce self- orthogonal lexicodes. However this is not the case over ℤ 4 , since the argument of [13, Corollary 5.1] is not true over rings, namely we can have x⋅x = 0, y⋅y = 0 and (x+y)⋅(x+y) = 0 without having x ⋅ y = 0. However, this criteria may result in a self-orthogonal code. For instance, the ﬁrst code in Table I is self-orthogonal, whereas the others are not. In this table, 𝐺 𝐶(𝐵,𝑃 ) is the generator set for the code 𝐶(𝐵, 𝑃 ).\nAs mentioned in the Introduction, the ﬁrst lexicodes were obtained using a weight criteria over ﬁnite ﬁelds. The weight criteria with the Lee weight is not multiplicative in ℤ 4 in the sense of [13]. Conversely, with the modiﬁed deﬁnition of the multiplicative property we have the following result.\nLemma 3: Let 𝛿 be a positive integer. We have the property 𝑃 [x] if and only if 𝑤 𝐿 (x) ≥ 𝛿 is a multiplicative property.\nProof: We must show that if 𝑤 𝐿 (x) ≥ 𝛿 then 𝑤 𝐿 (3x) ≥ 𝛿. It is easy to see that 𝑛 1 (3x) = 𝑛 3 (x), 𝑛 3 (3x) = 𝑛 1 (x) and 𝑛 2 (3x) = 𝑛 2 (x). This gives that 𝑤 𝐿 (3x) = 𝑤 𝐿 (x). Hence the result follows.\nCorollary 4: The lexicode 𝐶(𝐵, 𝛿) given by Algorithm A for designed distance 𝛿 is a linear code over ℤ 4 with minimum distance greater than or equal to 𝛿.\nTables II and III presents some lexicodes obtained using the weight criteria. The notation × denotes that the code is not self-dual, 𝑆 denotes that the code is self-dual, and 𝑆𝑂 denotes that the code is self-orthogonal. 𝐺 𝐶(𝐵,𝑃 ) is the generator set of 𝐶(𝐵, 𝑃 ).\nIt was proven by Hammons et al. [9] that some of the best known nonlinear binary codes such as the Nordstrom- Robinson, Kerdock, Preparata, Goethals and Delsarte-Goethals codes are Gray map images of ℤ 4 -linear codes. The Gray map\nThen the Gray map 𝒢 : ℤ 𝑛 4 −→ 𝔽 2𝑛 2 is deﬁned as 𝒢(𝑎 1 , . . . 𝑎 𝑛 ) = (𝒢 \u2032 (𝑎 1 ), . . . , 𝒢 \u2032 (𝑎 𝑛 )).\nLemma 5: The Gray map 𝒢 is the distance-preserving map (ℤ 𝑛 4 , Lee distance) −→ (𝔽 2𝑛 2 , Hamming distance).\nThe covering radius of a code 𝐶 over ℤ 4 with respect to the Lee distance is deﬁned as\nFor 𝑢 ∈ ℤ 𝑛 4 , the coset of 𝐶 is deﬁned to be the set 𝑢 + 𝐶 = {𝑢 + 𝑐∣𝑐 ∈ 𝐶}. A minimum weight vector in a coset is called a coset leader. It is obvious that the covering radius of 𝐶 with respect to the Lee weight is the largest minimum weight among all cosets.\nLemma 6 ([2, Proposition 3.2]): Let 𝐶 be a code over ℤ 4 with 𝒢(𝐶) the Gray map image of 𝐶. Then\nProposition 7: Let 0 = 𝐶 0 ⊂ 𝐶 1 ⊂ . . . ⊂ 𝐶 𝑛 = 𝐶(𝐵, 𝛿) be the set of nested codes obtained by Algorithm 𝐴 for designed distance 𝛿. Hence if 𝐶 𝑖 ⊊ 𝐶 𝑛 is of type 4 𝑘 𝑖1 2 𝑘 𝑖2\nProof: Assume that 𝐶 𝑖 ⊊ 𝐶(𝐵, 𝛿) for some 1 < 𝑖 < 𝑛. Now, let 𝑥 ∈ 𝐶 𝑛 ∖ 𝐶 𝑖 be a codeword of minimum weight. Such a vector must be a coset leader of 𝐶 𝑖 , as 𝐶 𝑖 ⊊ 𝐶(𝐵, 𝛿). Hence 𝜌 𝐿 (𝐶 𝑖 ) ≥ 𝑤𝑡 𝐿 (𝑥) and then 𝜌 𝐿 (𝐶 𝑖 ) ≥ 𝛿. The right side of (1) is obtained from the redundancy bound [2, Theorem 4.6]. Since each vector in ℤ 𝑛 4 has distance 𝛿 − 1 or less to some vector in 𝐶 𝑛 , the covering radius of 𝐶 𝑛 is at most 𝛿 −1. By the construction we have ⌊𝛿/2⌋ ≤ ⌊𝑑/2⌋. The left side of (2) is obtained from the packing radius bound [2, Theorem 4.3].\nAlgorithm 𝐴. Then the binary code 𝒢(𝐶 𝐿 (𝐵, 𝛿)) obtained from 𝐶 𝐿 (𝐵, 𝛿) by the Gray image meets the Gilbert bound.\nProof: Assume that 𝒢(𝐶 𝑛 ) is a binary code of mini- mum distance 𝑑, which is the same as the minimum dis- tance of 𝐶 𝐿 (𝐵, 𝛿) since the Gray map is a weight pre- serving map. Hence we have 𝑑 ≥ 𝛿, and by Lemma 6 𝜌(𝒢(𝐶 𝐿 (𝐵, 𝛿)) = 𝜌 𝐿 (𝐶 𝐿 (𝐵, 𝛿)). Then from Proposition 7 we have 𝜌 𝐿 (𝐶 𝐿 (𝐵, 𝛿)) ≤ 𝛿 −1. Since 𝛿 ≤ 𝑑, 𝒢(𝐶 𝑛 ) has covering radius less than 𝑑 𝐿 − 1. It is well known [10, p. 87], that a code over 𝔽 𝑞 with minimum distance 𝑑 and covering radius 𝑑 − 1 or less meets the Gilbert bound."},"refs":[{"authors":[{"name":"S. Azab"},{"name":"M. Zayed"},{"name":"M. Atrash"},{"name":"M. Ashker"}],"title":{"text":"Linear codes over ℤ 4 using almost-greedy algorithm"}},{"authors":[{"name":"T. Aoki"},{"name":"P. Gaborit"},{"name":"M. Harada"},{"name":"M. Ozeki"},{"name":"P. Sol´e"}],"title":{"text":"On the covering radius of ℤ 4 and their lattices"}},{"authors":[{"name":"J. T. Bonn"}],"title":{"text":"Forcing linearity on greedy codes"}},{"authors":[{"name":"A. Bonnecaze"},{"name":"P. Sol´e"},{"name":"A. R. Calderbank"}],"title":{"text":"Quaternary quadratic residue codes and unimodular lattices"}},{"authors":[{"name":"R. A. Brualdi"},{"name":"V. Pless"}],"title":{"text":"Greedy codes"}},{"authors":[{"name":"J. H. Conway"},{"name":"N. J. A. Sloane"}],"title":{"text":"Lexicographic codes: Error- correcting codes from game theory"}},{"authors":[{"name":"J. H. Conwa"},{"name":"N. J. A. Sloan"}],"title":{"text":"Sphere-packing, lattices and groups New York:Springer-Verlag, 1988"}},{"authors":[{"name":"S. T. Dougherty"},{"name":"A. Gulliver"},{"name":"Y. H. Park"}],"title":{"text":"Optimal linear codes over ℤ 𝑚 "}},{"authors":[{"name":"A. R. Hammons"},{"name":"P. V. Kumar"},{"name":"A. R. Calderbank"},{"name":"N. J. A. Sloane"},{"name":"P. Sol´e"}],"title":{"text":"The ℤ 4 -linearity of Kerdock, Preparata, Goethals and related codes"}},{"authors":[{"name":"W. C. Huffma"},{"name":"V. Ples"}],"title":{"text":"Fundamentals of Error-correcting Codes, New York:Cambridge Univ"}},{"authors":[{"name":"V. I. Levenstein"}],"title":{"text":"A class of systematic codes"}},{"authors":[{"name":"A. J. van Zanten"}],"title":{"text":"Lexicographic order and linearity"}},{"authors":[{"name":"A. J. van Zanten"},{"name":"I. Nengah Suparta"}],"title":{"text":"On the construction of linear 𝑞-ary lexicodes"}}]},"file":{"jsonClass":"File","file":"/home/arnfred/Code/trailhead/resources/isit2012/1569556361.pdf"},"links":[{"id":"1569559967","weight":3},{"id":"1569564805","weight":6},{"id":"1569565355","weight":3},{"id":"1569564469","weight":3},{"id":"1569565775","weight":6},{"id":"1569566739","weight":6},{"id":"1569566903","weight":3},{"id":"1569565809","weight":3},{"id":"1569566925","weight":3},{"id":"1569566895","weight":3},{"id":"1569566749","weight":3},{"id":"1569566865","weight":3},{"id":"1569565803","weight":3},{"id":"1569566217","weight":6},{"id":"1569566369","weight":22},{"id":"1569565667","weight":6},{"id":"1569565257","weight":3},{"id":"1569562285","weight":6},{"id":"1569565839","weight":3},{"id":"1569554689","weight":6},{"id":"1569562821","weight":3},{"id":"1569566127","weight":3},{"id":"1569565087","weight":3},{"id":"1569564857","weight":3},{"id":"1569565847","weight":3},{"id":"1569557083","weight":12},{"id":"1569558401","weight":12},{"id":"1569566159","weight":3},{"id":"1569555787","weight":6},{"id":"1569566901","weight":6},{"id":"1569565571","weight":3},{"id":"1569566805","weight":3},{"id":"1569557715","weight":6},{"id":"1569565925","weight":3},{"id":"1569566887","weight":3},{"id":"1569566429","weight":3},{"id":"1569564283","weight":3},{"id":"1569566283","weight":3},{"id":"1569564861","weight":3},{"id":"1569566487","weight":3},{"id":"1569565669","weight":3},{"id":"1569564923","weight":3},{"id":"1569564281","weight":6},{"id":"1569564253","weight":3},{"id":"1569561397","weight":3},{"id":"1569565731","weight":3},{"id":"1569566987","weight":3},{"id":"1569565031","weight":3},{"id":"1569558697","weight":3},{"id":"1569566615","weight":9},{"id":"1569565715","weight":3}],"meta":{"jsonClass":"HashMap$HashTrieMap","sessionid":"S17.T6.3","endtime":"16:00","authors":"Kenza Guenda, T. Aaron Gulliver, Arash Sheikholeslam","date":"1341589200000","papertitle":"Greedy Codes over Z_4","starttime":"15:40","session":"S17.T6: Codes over Rings","room":"Kresge Rehearsal A (033)","paperid":"1569556361"},"cluster":{"jsonClass":"Map$EmptyMap$"}}
